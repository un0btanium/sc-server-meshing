/*! For license information please see main.d99859b2.js.LICENSE.txt */
!function(){var e={694:function(e,t){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var o=r.apply(null,n);o&&e.push(o)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)a.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},132:function(e){"use strict";var t=Object.prototype.hasOwnProperty,n=Object.prototype.toString,a=Object.defineProperty,r=Object.getOwnPropertyDescriptor,i=function(e){return"function"===typeof Array.isArray?Array.isArray(e):"[object Array]"===n.call(e)},o=function(e){if(!e||"[object Object]"!==n.call(e))return!1;var a,r=t.call(e,"constructor"),i=e.constructor&&e.constructor.prototype&&t.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!r&&!i)return!1;for(a in e);return"undefined"===typeof a||t.call(e,a)},s=function(e,t){a&&"__proto__"===t.name?a(e,t.name,{enumerable:!0,configurable:!0,value:t.newValue,writable:!0}):e[t.name]=t.newValue},l=function(e,n){if("__proto__"===n){if(!t.call(e,n))return;if(r)return r(e,n).value}return e[n]};e.exports=function e(){var t,n,a,r,c,u,d=arguments[0],h=1,p=arguments.length,f=!1;for("boolean"===typeof d&&(f=d,d=arguments[1]||{},h=2),(null==d||"object"!==typeof d&&"function"!==typeof d)&&(d={});h<p;++h)if(null!=(t=arguments[h]))for(n in t)a=l(d,n),d!==(r=l(t,n))&&(f&&r&&(o(r)||(c=i(r)))?(c?(c=!1,u=a&&i(a)?a:[]):u=a&&o(a)?a:{},s(d,{name:n,newValue:e(f,u,r)})):"undefined"!==typeof r&&s(d,{name:n,newValue:r}));return d}},65:function(e){var t=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,n=/\n/g,a=/^\s*/,r=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,i=/^:\s*/,o=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,s=/^[;\s]*/,l=/^\s+|\s+$/g,c="";function u(e){return e?e.replace(l,c):c}e.exports=function(e,l){if("string"!==typeof e)throw new TypeError("First argument must be a string");if(!e)return[];l=l||{};var d=1,h=1;function p(e){var t=e.match(n);t&&(d+=t.length);var a=e.lastIndexOf("\n");h=~a?e.length-a:h+e.length}function f(){var e={line:d,column:h};return function(t){return t.position=new m(e),v(),t}}function m(e){this.start=e,this.end={line:d,column:h},this.source=l.source}m.prototype.content=e;var g=[];function b(t){var n=new Error(l.source+":"+d+":"+h+": "+t);if(n.reason=t,n.filename=l.source,n.line=d,n.column=h,n.source=e,!l.silent)throw n;g.push(n)}function y(t){var n=t.exec(e);if(n){var a=n[0];return p(a),e=e.slice(a.length),n}}function v(){y(a)}function w(e){var t;for(e=e||[];t=S();)!1!==t&&e.push(t);return e}function S(){var t=f();if("/"==e.charAt(0)&&"*"==e.charAt(1)){for(var n=2;c!=e.charAt(n)&&("*"!=e.charAt(n)||"/"!=e.charAt(n+1));)++n;if(n+=2,c===e.charAt(n-1))return b("End of comment missing");var a=e.slice(2,n-2);return h+=2,p(a),e=e.slice(n),h+=2,t({type:"comment",comment:a})}}function k(){var e=f(),n=y(r);if(n){if(S(),!y(i))return b("property missing ':'");var a=y(o),l=e({type:"declaration",property:u(n[0].replace(t,c)),value:a?u(a[0].replace(t,c)):c});return y(s),l}}return v(),function(){var e,t=[];for(w(t);e=k();)!1!==e&&(t.push(e),w(t));return t}()}},586:function(e){e.exports=function(e){return null!=e&&null!=e.constructor&&"function"===typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}},888:function(e,t,n){"use strict";var a=n(47);function r(){}function i(){}i.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,i,o){if(o!==a){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:r};return n.PropTypes=n,n}},7:function(e,t,n){e.exports=n(888)()},47:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},463:function(e,t,n){"use strict";var a=n(791),r=n(296);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,s={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(s[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=Symbol.for("react.element"),k=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),I=Symbol.for("react.context"),z=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),P=Symbol.for("react.suspense_list"),O=Symbol.for("react.memo"),L=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var A=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var j=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=j&&e[j]||e["@@iterator"])?e:null}var U,D=Object.assign;function F(e){if(void 0===U)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var N=!1;function _(e,t){if(!e||N)return"";N=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var a=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){a=c}e.call(t.prototype)}else{try{throw Error()}catch(c){a=c}e()}}catch(c){if(c&&a&&"string"===typeof c.stack){for(var r=c.stack.split("\n"),i=a.stack.split("\n"),o=r.length-1,s=i.length-1;1<=o&&0<=s&&r[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(r[o]!==i[s]){if(1!==o||1!==s)do{if(o--,0>--s||r[o]!==i[s]){var l="\n"+r[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=s);break}}}finally{N=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function G(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return e=_(e.type,!1);case 11:return e=_(e.type.render,!1);case 1:return e=_(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case x:return"Fragment";case k:return"Portal";case E:return"Profiler";case C:return"StrictMode";case R:return"Suspense";case P:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case I:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case z:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case O:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case L:t=e._payload,e=e._init;try{return H(e(t))}catch(n){}}return null}function B(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function $(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=W(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function Q(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return D({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=q(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function X(e,t){Z(e,t);var n=q(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+q(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return D({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(te(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:q(n)}}function ie(e,t){var n=q(t.value),a=q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var be=D({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,xe=null,Ce=null;function Ee(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(i(280));var t=e.stateNode;t&&(t=Sr(t),ke(e.stateNode,e.type,t))}}function Te(e){xe?Ce?Ce.push(e):Ce=[e]:xe=e}function Ie(){if(xe){var e=xe,t=Ce;if(Ce=xe=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function ze(e,t){return e(t)}function Re(){}var Pe=!1;function Oe(e,t,n){if(Pe)return e(t,n);Pe=!0;try{return ze(e,t,n)}finally{Pe=!1,(null!==xe||null!==Ce)&&(Re(),Ie())}}function Le(e,t){var n=e.stateNode;if(null===n)return null;var a=Sr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}var Ae=!1;if(u)try{var je={};Object.defineProperty(je,"passive",{get:function(){Ae=!0}}),window.addEventListener("test",je,je),window.removeEventListener("test",je,je)}catch(ue){Ae=!1}function Me(e,t,n,a,r,i,o,s,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(u){this.onError(u)}}var Ue=!1,De=null,Fe=!1,Ne=null,_e={onError:function(e){Ue=!0,De=e}};function Ge(e,t,n,a,r,i,o,s,l){Ue=!1,De=null,Me.apply(_e,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Be(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function qe(e){if(He(e)!==e)throw Error(i(188))}function We(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return qe(r),e;if(o===a)return qe(r),t;o=o.sibling}throw Error(i(188))}if(n.return!==a.return)n=r,a=o;else{for(var s=!1,l=r.child;l;){if(l===n){s=!0,n=r,a=o;break}if(l===a){s=!0,a=r,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,a=r;break}if(l===a){s=!0,a=o,n=r;break}l=l.sibling}if(!s)throw Error(i(189))}}if(n.alternate!==a)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var $e=r.unstable_scheduleCallback,Qe=r.unstable_cancelCallback,Ke=r.unstable_shouldYield,Ye=r.unstable_requestPaint,Ze=r.unstable_now,Xe=r.unstable_getCurrentPriorityLevel,Je=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,it=null;var ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2;var ct=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,i=e.pingedLanes,o=268435455&n;if(0!==o){var s=o&~r;0!==s?a=dt(s):0!==(i&=o)&&(a=dt(i))}else 0!==(o=n&~r)?a=dt(o):0!==i&&(a=dt(i));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(i=t&-t)||16===r&&0!==(4194240&i)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ct;return 0===(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function bt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function wt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var St,kt,xt,Ct,Et,Tt=!1,It=[],zt=null,Rt=null,Pt=null,Ot=new Map,Lt=new Map,At=[],jt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":zt=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":Pt=null;break;case"pointerover":case"pointerout":Ot.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Lt.delete(t.pointerId)}}function Ut(e,t,n,a,r,i){return null===e||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:i,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Dt(e){var t=yr(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Be(n)))return e.blockedOn=t,void Et(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);we=a,n.target.dispatchEvent(a),we=null,t.shift()}return!0}function Nt(e,t,n){Ft(e)&&n.delete(t)}function _t(){Tt=!1,null!==zt&&Ft(zt)&&(zt=null),null!==Rt&&Ft(Rt)&&(Rt=null),null!==Pt&&Ft(Pt)&&(Pt=null),Ot.forEach(Nt),Lt.forEach(Nt)}function Gt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,_t)))}function Ht(e){function t(t){return Gt(t,e)}if(0<It.length){Gt(It[0],e);for(var n=1;n<It.length;n++){var a=It[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==zt&&Gt(zt,e),null!==Rt&&Gt(Rt,e),null!==Pt&&Gt(Pt,e),Ot.forEach(t),Lt.forEach(t),n=0;n<At.length;n++)(a=At[n]).blockedOn===e&&(a.blockedOn=null);for(;0<At.length&&null===(n=At[0]).blockedOn;)Dt(n),null===n.blockedOn&&At.shift()}var Bt=w.ReactCurrentBatchConfig,qt=!0;function Wt(e,t,n,a){var r=vt,i=Bt.transition;Bt.transition=null;try{vt=1,$t(e,t,n,a)}finally{vt=r,Bt.transition=i}}function Vt(e,t,n,a){var r=vt,i=Bt.transition;Bt.transition=null;try{vt=4,$t(e,t,n,a)}finally{vt=r,Bt.transition=i}}function $t(e,t,n,a){if(qt){var r=Kt(e,t,n,a);if(null===r)qa(e,t,a,Qt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return zt=Ut(zt,e,t,n,a,r),!0;case"dragenter":return Rt=Ut(Rt,e,t,n,a,r),!0;case"mouseover":return Pt=Ut(Pt,e,t,n,a,r),!0;case"pointerover":var i=r.pointerId;return Ot.set(i,Ut(Ot.get(i)||null,e,t,n,a,r)),!0;case"gotpointercapture":return i=r.pointerId,Lt.set(i,Ut(Lt.get(i)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<jt.indexOf(e)){for(;null!==r;){var i=vr(r);if(null!==i&&St(i),null===(i=Kt(e,t,n,a))&&qa(e,t,a,Qt,n),i===r)break;r=i}null!==r&&a.stopPropagation()}else qa(e,t,a,null,n)}}var Qt=null;function Kt(e,t,n,a){if(Qt=null,null!==(e=yr(e=Se(a))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Be(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Xt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Xt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,i=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[i-t];t++);return Jt=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,i){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return D(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,ln,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(cn),dn=D({},cn,{view:0,detail:0}),hn=rn(dn),pn=D({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:En,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(on=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=on=0,ln=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=rn(pn),mn=rn(D({},pn,{dataTransfer:0})),gn=rn(D({},dn,{relatedTarget:0})),bn=rn(D({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=D({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(yn),wn=rn(D({},cn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function En(){return Cn}var Tn=D({},dn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:En,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),In=rn(Tn),zn=rn(D({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=rn(D({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:En})),Pn=rn(D({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),On=D({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ln=rn(On),An=[9,13,27,32],jn=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var Un=u&&"TextEvent"in window&&!Mn,Dn=u&&(!jn||Mn&&8<Mn&&11>=Mn),Fn=String.fromCharCode(32),Nn=!1;function _n(e,t){switch(e){case"keyup":return-1!==An.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Gn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Wn(e,t,n,a){Te(a),0<(t=Va(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Vn=null,$n=null;function Qn(e){Fa(e,0)}function Kn(e){if($(wr(e)))return e}function Yn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Xn;if(u){var Jn="oninput"in document;if(!Jn){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jn="function"===typeof ea.oninput}Xn=Jn}else Xn=!1;Zn=Xn&&(!document.documentMode||9<document.documentMode)}function ta(){Vn&&(Vn.detachEvent("onpropertychange",na),$n=Vn=null)}function na(e){if("value"===e.propertyName&&Kn($n)){var t=[];Wn(t,$n,e,Se(e)),Oe(Qn,t)}}function aa(e,t,n){"focusin"===e?(ta(),$n=n,(Vn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn($n)}function ia(e,t){if("click"===e)return Kn(t)}function oa(e,t){if("input"===e||"change"===e)return Kn(t)}var sa="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function la(e,t){if(sa(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!sa(e[r],t[r]))return!1}return!0}function ca(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=ca(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ca(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ha(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=ha(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,i=Math.min(a.start,r);a=void 0===a.end?i:Math.min(a.end,r),!e.extend&&i>a&&(r=a,a=i,i=r),r=ua(n,i);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),i>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ba=null,ya=null,va=!1;function wa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==Q(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ya&&la(ya,a)||(ya=a,0<(a=Va(ba,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function Sa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:Sa("Animation","AnimationEnd"),animationiteration:Sa("Animation","AnimationIteration"),animationstart:Sa("Animation","AnimationStart"),transitionend:Sa("Transition","TransitionEnd")},xa={},Ca={};function Ea(e){if(xa[e])return xa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ca)return xa[e]=n[t];return e}u&&(Ca=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ea("animationend"),Ia=Ea("animationiteration"),za=Ea("animationstart"),Ra=Ea("transitionend"),Pa=new Map,Oa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function La(e,t){Pa.set(e,t),l(t,[e])}for(var Aa=0;Aa<Oa.length;Aa++){var ja=Oa[Aa];La(ja.toLowerCase(),"on"+(ja[0].toUpperCase()+ja.slice(1)))}La(Ta,"onAnimationEnd"),La(Ia,"onAnimationIteration"),La(za,"onAnimationStart"),La("dblclick","onDoubleClick"),La("focusin","onFocus"),La("focusout","onBlur"),La(Ra,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ua=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function Da(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,s,l,c){if(Ge.apply(this,arguments),Ue){if(!Ue)throw Error(i(198));var u=De;Ue=!1,De=null,Fe||(Fe=!0,Ne=u)}}(a,t,void 0,e),e.currentTarget=null}function Fa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var i=void 0;if(t)for(var o=a.length-1;0<=o;o--){var s=a[o],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==i&&r.isPropagationStopped())break e;Da(r,s,c),i=l}else for(o=0;o<a.length;o++){if(l=(s=a[o]).instance,c=s.currentTarget,s=s.listener,l!==i&&r.isPropagationStopped())break e;Da(r,s,c),i=l}}}if(Fe)throw e=Ne,Fe=!1,Ne=null,e}function Na(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ba(t,e,2,!1),n.add(a))}function _a(e,t,n){var a=0;t&&(a|=4),Ba(n,e,a,t)}var Ga="_reactListening"+Math.random().toString(36).slice(2);function Ha(e){if(!e[Ga]){e[Ga]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ua.has(t)||_a(t,!1,e),_a(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ga]||(t[Ga]=!0,_a("selectionchange",!1,t))}}function Ba(e,t,n,a){switch(Yt(t)){case 1:var r=Wt;break;case 4:r=Vt;break;default:r=$t}n=r.bind(null,t,n,e),r=void 0,!Ae||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function qa(e,t,n,a,r){var i=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var s=a.stateNode.containerInfo;if(s===r||8===s.nodeType&&s.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===r||8===l.nodeType&&l.parentNode===r))return;o=o.return}for(;null!==s;){if(null===(o=yr(s)))return;if(5===(l=o.tag)||6===l){a=i=o;continue e}s=s.parentNode}}a=a.return}Oe((function(){var a=i,r=Se(n),o=[];e:{var s=Pa.get(e);if(void 0!==s){var l=un,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=In;break;case"focusin":c="focus",l=gn;break;case"focusout":c="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Rn;break;case Ta:case Ia:case za:l=bn;break;case Ra:l=Pn;break;case"scroll":l=hn;break;case"wheel":l=Ln;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=zn}var u=0!==(4&t),d=!u&&"scroll"===e,h=u?null!==s?s+"Capture":null:s;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Le(f,h))&&u.push(Wa(f,m,p)))),d)break;f=f.return}0<u.length&&(s=new l(s,c,null,n,r),o.push({event:s,listeners:u}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===we||!(c=n.relatedTarget||n.fromElement)||!yr(c)&&!c[fr])&&(l||s)&&(s=r.window===r?r:(s=r.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=a,null!==(c=(c=n.relatedTarget||n.toElement)?yr(c):null)&&(c!==(d=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=a),l!==c)){if(u=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=zn,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==l?s:wr(l),p=null==c?s:wr(c),(s=new u(m,f+"leave",l,n,r)).target=d,s.relatedTarget=p,m=null,yr(r)===a&&((u=new u(h,f+"enter",c,n,r)).target=p,u.relatedTarget=d,m=u),d=m,l&&c)e:{for(h=c,f=0,p=u=l;p;p=$a(p))f++;for(p=0,m=h;m;m=$a(m))p++;for(;0<f-p;)u=$a(u),f--;for(;0<p-f;)h=$a(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=$a(u),h=$a(h)}u=null}else u=null;null!==l&&Qa(o,s,l,u,!1),null!==c&&null!==d&&Qa(o,d,c,u,!0)}if("select"===(l=(s=a?wr(a):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=Yn;else if(qn(s))if(Zn)g=oa;else{g=ra;var b=aa}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=ia);switch(g&&(g=g(e,a))?Wn(o,g,n,r):(b&&b(e,s,a),"focusout"===e&&(b=s._wrapperState)&&b.controlled&&"number"===s.type&&ee(s,"number",s.value)),b=a?wr(a):window,e){case"focusin":(qn(b)||"true"===b.contentEditable)&&(ga=b,ba=a,ya=null);break;case"focusout":ya=ba=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,wa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":wa(o,n,r)}var y;if(jn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Hn?_n(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Dn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Hn&&(y=en()):(Xt="value"in(Zt=r)?Zt.value:Zt.textContent,Hn=!0)),0<(b=Va(a,v)).length&&(v=new wn(v,e,null,n,r),o.push({event:v,listeners:b}),y?v.data=y:null!==(y=Gn(n))&&(v.data=y))),(y=Un?function(e,t){switch(e){case"compositionend":return Gn(t);case"keypress":return 32!==t.which?null:(Nn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Nn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!jn&&_n(e,t)?(e=en(),Jt=Xt=Zt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Dn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Va(a,"onBeforeInput")).length&&(r=new wn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=y))}Fa(o,t)}))}function Wa(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Va(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,i=r.stateNode;5===r.tag&&null!==i&&(r=i,null!=(i=Le(e,n))&&a.unshift(Wa(e,i,r)),null!=(i=Le(e,t))&&a.push(Wa(e,i,r))),e=e.return}return a}function $a(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qa(e,t,n,a,r){for(var i=t._reactName,o=[];null!==n&&n!==a;){var s=n,l=s.alternate,c=s.stateNode;if(null!==l&&l===a)break;5===s.tag&&null!==c&&(s=c,r?null!=(l=Le(n,i))&&o.unshift(Wa(n,l,s)):r||null!=(l=Le(n,i))&&o.push(Wa(n,l,s))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ka=/\r\n?/g,Ya=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ka,"\n").replace(Ya,"")}function Xa(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(i(425))}function Ja(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,ir="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ir?function(e){return ir.resolve(null).then(e).catch(sr)}:ar;function sr(e){setTimeout((function(){throw e}))}function lr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ht(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ht(t)}function cr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),hr="__reactFiber$"+dr,pr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,br="__reactHandles$"+dr;function yr(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[hr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function Sr(e){return e[pr]||null}var kr=[],xr=-1;function Cr(e){return{current:e}}function Er(e){0>xr||(e.current=kr[xr],kr[xr]=null,xr--)}function Tr(e,t){xr++,kr[xr]=e.current,e.current=t}var Ir={},zr=Cr(Ir),Rr=Cr(!1),Pr=Ir;function Or(e,t){var n=e.type.contextTypes;if(!n)return Ir;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,i={};for(r in n)i[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Lr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Ar(){Er(Rr),Er(zr)}function jr(e,t,n){if(zr.current!==Ir)throw Error(i(168));Tr(zr,t),Tr(Rr,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(i(108,B(e)||"Unknown",r));return D({},n,a)}function Ur(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ir,Pr=zr.current,Tr(zr,e),Tr(Rr,Rr.current),!0}function Dr(e,t,n){var a=e.stateNode;if(!a)throw Error(i(169));n?(e=Mr(e,t,Pr),a.__reactInternalMemoizedMergedChildContext=e,Er(Rr),Er(zr),Tr(zr,e)):Er(Rr),Tr(Rr,n)}var Fr=null,Nr=!1,_r=!1;function Gr(e){null===Fr?Fr=[e]:Fr.push(e)}function Hr(){if(!_r&&null!==Fr){_r=!0;var e=0,t=vt;try{var n=Fr;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Fr=null,Nr=!1}catch(r){throw null!==Fr&&(Fr=Fr.slice(e+1)),$e(Je,Hr),r}finally{vt=t,_r=!1}}return null}var Br=[],qr=0,Wr=null,Vr=0,$r=[],Qr=0,Kr=null,Yr=1,Zr="";function Xr(e,t){Br[qr++]=Vr,Br[qr++]=Wr,Wr=e,Vr=t}function Jr(e,t,n){$r[Qr++]=Yr,$r[Qr++]=Zr,$r[Qr++]=Kr,Kr=e;var a=Yr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var i=32-ot(t)+r;if(30<i){var o=r-r%5;i=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Yr=1<<32-ot(t)+r|n<<r|a,Zr=i+e}else Yr=1<<i|n<<r|a,Zr=e}function ei(e){null!==e.return&&(Xr(e,1),Jr(e,1,0))}function ti(e){for(;e===Wr;)Wr=Br[--qr],Br[qr]=null,Vr=Br[--qr],Br[qr]=null;for(;e===Kr;)Kr=$r[--Qr],$r[Qr]=null,Zr=$r[--Qr],$r[Qr]=null,Yr=$r[--Qr],$r[Qr]=null}var ni=null,ai=null,ri=!1,ii=null;function oi(e,t){var n=Oc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function si(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ni=e,ai=cr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ni=e,ai=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Kr?{id:Yr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Oc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ni=e,ai=null,!0);default:return!1}}function li(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ci(e){if(ri){var t=ai;if(t){var n=t;if(!si(e,t)){if(li(e))throw Error(i(418));t=cr(n.nextSibling);var a=ni;t&&si(e,t)?oi(a,n):(e.flags=-4097&e.flags|2,ri=!1,ni=e)}}else{if(li(e))throw Error(i(418));e.flags=-4097&e.flags|2,ri=!1,ni=e}}}function ui(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ni=e}function di(e){if(e!==ni)return!1;if(!ri)return ui(e),ri=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=ai)){if(li(e))throw hi(),Error(i(418));for(;t;)oi(e,t),t=cr(t.nextSibling)}if(ui(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ai=cr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ai=null}}else ai=ni?cr(e.stateNode.nextSibling):null;return!0}function hi(){for(var e=ai;e;)e=cr(e.nextSibling)}function pi(){ai=ni=null,ri=!1}function fi(e){null===ii?ii=[e]:ii.push(e)}var mi=w.ReactCurrentBatchConfig;function gi(e,t){if(e&&e.defaultProps){for(var n in t=D({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var bi=Cr(null),yi=null,vi=null,wi=null;function Si(){wi=vi=yi=null}function ki(e){var t=bi.current;Er(bi),e._currentValue=t}function xi(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ci(e,t){yi=e,wi=vi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(ws=!0),e.firstContext=null)}function Ei(e){var t=e._currentValue;if(wi!==e)if(e={context:e,memoizedValue:t,next:null},null===vi){if(null===yi)throw Error(i(308));vi=e,yi.dependencies={lanes:0,firstContext:e}}else vi=vi.next=e;return t}var Ti=null;function Ii(e){null===Ti?Ti=[e]:Ti.push(e)}function zi(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Ii(t)):(n.next=r.next,r.next=n),t.interleaved=n,Ri(e,a)}function Ri(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Pi=!1;function Oi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ai(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ji(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&zl)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Ri(e,n)}return null===(r=a.interleaved)?(t.next=t,Ii(a)):(t.next=r.next,r.next=t),a.interleaved=t,Ri(e,n)}function Mi(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Ui(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?r=i=o:i=i.next=o,n=n.next}while(null!==n);null===i?r=i=t:i=i.next=t}else r=i=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:i,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Di(e,t,n,a){var r=e.updateQueue;Pi=!1;var i=r.firstBaseUpdate,o=r.lastBaseUpdate,s=r.shared.pending;if(null!==s){r.shared.pending=null;var l=s,c=l.next;l.next=null,null===o?i=c:o.next=c,o=l;var u=e.alternate;null!==u&&((s=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l))}if(null!==i){var d=r.baseState;for(o=0,u=c=l=null,s=i;;){var h=s.lane,p=s.eventTime;if((a&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,m=s;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=D({},d,h);break e;case 2:Pi=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[s]:h.push(s))}else p={eventTime:p,lane:h,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=p,l=d):u=u.next=p,o|=h;if(null===(s=s.next)){if(null===(s=r.shared.pending))break;s=(h=s).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===u&&(l=d),r.baseState=l,r.firstBaseUpdate=c,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===i&&(r.shared.lanes=0);Ul|=o,e.lanes=o,e.memoizedState=d}}function Fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(i(191,r));r.call(a)}}}var Ni=(new a.Component).refs;function _i(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:D({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Gi={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),i=Ai(a,r);i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=ji(e,i,r))&&(nc(t,e,r,a),Mi(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),i=Ai(a,r);i.tag=1,i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=ji(e,i,r))&&(nc(t,e,r,a),Mi(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),a=tc(e),r=Ai(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=ji(e,r,a))&&(nc(t,e,a,n),Mi(t,e,a))}};function Hi(e,t,n,a,r,i,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,i,o):!t.prototype||!t.prototype.isPureReactComponent||(!la(n,a)||!la(r,i))}function Bi(e,t,n){var a=!1,r=Ir,i=t.contextType;return"object"===typeof i&&null!==i?i=Ei(i):(r=Lr(t)?Pr:zr.current,i=(a=null!==(a=t.contextTypes)&&void 0!==a)?Or(e,r):Ir),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Gi,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=i),t}function qi(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Gi.enqueueReplaceState(t,t.state,null)}function Wi(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Ni,Oi(e);var i=t.contextType;"object"===typeof i&&null!==i?r.context=Ei(i):(i=Lr(t)?Pr:zr.current,r.context=Or(e,i)),r.state=e.memoizedState,"function"===typeof(i=t.getDerivedStateFromProps)&&(_i(e,t,i,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&Gi.enqueueReplaceState(r,r.state,null),Di(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function Vi(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var a=n.stateNode}if(!a)throw Error(i(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===Ni&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function $i(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Qi(e){return(0,e._init)(e._payload)}function Ki(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ac(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,a){return null===t||6!==t.tag?((t=Dc(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function c(e,t,n,a){var i=n.type;return i===x?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===L&&Qi(i)===t.type)?((a=r(t,n.props)).ref=Vi(e,t,n),a.return=e,a):((a=jc(n.type,n.key,n.props,null,e.mode,a)).ref=Vi(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fc(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,i){return null===t||7!==t.tag?((t=Mc(n,e.mode,a,i)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Dc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case S:return(n=jc(t.type,t.key,t.props,null,e.mode,n)).ref=Vi(e,null,t),n.return=e,n;case k:return(t=Fc(t,e.mode,n)).return=e,t;case L:return h(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Mc(t,e.mode,n,null)).return=e,t;$i(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:l(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===r?c(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case L:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);$i(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return l(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case S:return c(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case L:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);$i(t,a)}return null}function m(r,i,s,l){for(var c=null,u=null,d=i,m=i=0,g=null;null!==d&&m<s.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var b=p(r,d,s[m],l);if(null===b){null===d&&(d=g);break}e&&d&&null===b.alternate&&t(r,d),i=o(b,i,m),null===u?c=b:u.sibling=b,u=b,d=g}if(m===s.length)return n(r,d),ri&&Xr(r,m),c;if(null===d){for(;m<s.length;m++)null!==(d=h(r,s[m],l))&&(i=o(d,i,m),null===u?c=d:u.sibling=d,u=d);return ri&&Xr(r,m),c}for(d=a(r,d);m<s.length;m++)null!==(g=f(d,r,m,s[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),i=o(g,i,m),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),ri&&Xr(r,m),c}function g(r,s,l,c){var u=M(l);if("function"!==typeof u)throw Error(i(150));if(null==(l=u.call(l)))throw Error(i(151));for(var d=u=null,m=s,g=s=0,b=null,y=l.next();null!==m&&!y.done;g++,y=l.next()){m.index>g?(b=m,m=null):b=m.sibling;var v=p(r,m,y.value,c);if(null===v){null===m&&(m=b);break}e&&m&&null===v.alternate&&t(r,m),s=o(v,s,g),null===d?u=v:d.sibling=v,d=v,m=b}if(y.done)return n(r,m),ri&&Xr(r,g),u;if(null===m){for(;!y.done;g++,y=l.next())null!==(y=h(r,y.value,c))&&(s=o(y,s,g),null===d?u=y:d.sibling=y,d=y);return ri&&Xr(r,g),u}for(m=a(r,m);!y.done;g++,y=l.next())null!==(y=f(m,r,g,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),s=o(y,s,g),null===d?u=y:d.sibling=y,d=y);return e&&m.forEach((function(e){return t(r,e)})),ri&&Xr(r,g),u}return function e(a,i,o,l){if("object"===typeof o&&null!==o&&o.type===x&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case S:e:{for(var c=o.key,u=i;null!==u;){if(u.key===c){if((c=o.type)===x){if(7===u.tag){n(a,u.sibling),(i=r(u,o.props.children)).return=a,a=i;break e}}else if(u.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===L&&Qi(c)===u.type){n(a,u.sibling),(i=r(u,o.props)).ref=Vi(a,u,o),i.return=a,a=i;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===x?((i=Mc(o.props.children,a.mode,l,o.key)).return=a,a=i):((l=jc(o.type,o.key,o.props,null,a.mode,l)).ref=Vi(a,i,o),l.return=a,a=l)}return s(a);case k:e:{for(u=o.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){n(a,i.sibling),(i=r(i,o.children||[])).return=a,a=i;break e}n(a,i);break}t(a,i),i=i.sibling}(i=Fc(o,a.mode,l)).return=a,a=i}return s(a);case L:return e(a,i,(u=o._init)(o._payload),l)}if(te(o))return m(a,i,o,l);if(M(o))return g(a,i,o,l);$i(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==i&&6===i.tag?(n(a,i.sibling),(i=r(i,o)).return=a,a=i):(n(a,i),(i=Dc(o,a.mode,l)).return=a,a=i),s(a)):n(a,i)}}var Yi=Ki(!0),Zi=Ki(!1),Xi={},Ji=Cr(Xi),eo=Cr(Xi),to=Cr(Xi);function no(e){if(e===Xi)throw Error(i(174));return e}function ao(e,t){switch(Tr(to,t),Tr(eo,e),Tr(Ji,Xi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Er(Ji),Tr(Ji,t)}function ro(){Er(Ji),Er(eo),Er(to)}function io(e){no(to.current);var t=no(Ji.current),n=le(t,e.type);t!==n&&(Tr(eo,e),Tr(Ji,n))}function oo(e){eo.current===e&&(Er(Ji),Er(eo))}var so=Cr(0);function lo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var co=[];function uo(){for(var e=0;e<co.length;e++)co[e]._workInProgressVersionPrimary=null;co.length=0}var ho=w.ReactCurrentDispatcher,po=w.ReactCurrentBatchConfig,fo=0,mo=null,go=null,bo=null,yo=!1,vo=!1,wo=0,So=0;function ko(){throw Error(i(321))}function xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sa(e[n],t[n]))return!1;return!0}function Co(e,t,n,a,r,o){if(fo=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ho.current=null===e||null===e.memoizedState?ss:ls,e=n(a,r),vo){o=0;do{if(vo=!1,wo=0,25<=o)throw Error(i(301));o+=1,bo=go=null,t.updateQueue=null,ho.current=cs,e=n(a,r)}while(vo)}if(ho.current=os,t=null!==go&&null!==go.next,fo=0,bo=go=mo=null,yo=!1,t)throw Error(i(300));return e}function Eo(){var e=0!==wo;return wo=0,e}function To(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===bo?mo.memoizedState=bo=e:bo=bo.next=e,bo}function Io(){if(null===go){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===bo?mo.memoizedState:bo.next;if(null!==t)bo=t,go=e;else{if(null===e)throw Error(i(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===bo?mo.memoizedState=bo=e:bo=bo.next=e}return bo}function zo(e,t){return"function"===typeof t?t(e):t}function Ro(e){var t=Io(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var a=go,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var s=r.next;r.next=o.next,o.next=s}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var l=s=null,c=null,u=o;do{var d=u.lane;if((fo&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=h,s=a):c=c.next=h,mo.lanes|=d,Ul|=d}u=u.next}while(null!==u&&u!==o);null===c?s=a:c.next=l,sa(a,t.memoizedState)||(ws=!0),t.memoizedState=a,t.baseState=s,t.baseQueue=c,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,mo.lanes|=o,Ul|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Po(e){var t=Io(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var s=r=r.next;do{o=e(o,s.action),s=s.next}while(s!==r);sa(o,t.memoizedState)||(ws=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function Oo(){}function Lo(e,t){var n=mo,a=Io(),r=t(),o=!sa(a.memoizedState,r);if(o&&(a.memoizedState=r,ws=!0),a=a.queue,qo(Mo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==bo&&1&bo.memoizedState.tag){if(n.flags|=2048,No(9,jo.bind(null,n,a,r,t),void 0,null),null===Rl)throw Error(i(349));0!==(30&fo)||Ao(n,t,r)}return r}function Ao(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function jo(e,t,n,a){t.value=n,t.getSnapshot=a,Uo(t)&&Do(e)}function Mo(e,t,n){return n((function(){Uo(t)&&Do(e)}))}function Uo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!sa(e,n)}catch(a){return!0}}function Do(e){var t=Ri(e,1);null!==t&&nc(t,e,1,-1)}function Fo(e){var t=To();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:zo,lastRenderedState:e},t.queue=e,e=e.dispatch=ns.bind(null,mo,e),[t.memoizedState,e]}function No(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function _o(){return Io().memoizedState}function Go(e,t,n,a){var r=To();mo.flags|=e,r.memoizedState=No(1|t,n,void 0,void 0===a?null:a)}function Ho(e,t,n,a){var r=Io();a=void 0===a?null:a;var i=void 0;if(null!==go){var o=go.memoizedState;if(i=o.destroy,null!==a&&xo(a,o.deps))return void(r.memoizedState=No(t,n,i,a))}mo.flags|=e,r.memoizedState=No(1|t,n,i,a)}function Bo(e,t){return Go(8390656,8,e,t)}function qo(e,t){return Ho(2048,8,e,t)}function Wo(e,t){return Ho(4,2,e,t)}function Vo(e,t){return Ho(4,4,e,t)}function $o(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Qo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ho(4,4,$o.bind(null,t,e),n)}function Ko(){}function Yo(e,t){var n=Io();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&xo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Zo(e,t){var n=Io();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&xo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Xo(e,t,n){return 0===(21&fo)?(e.baseState&&(e.baseState=!1,ws=!0),e.memoizedState=n):(sa(n,t)||(n=mt(),mo.lanes|=n,Ul|=n,e.baseState=!0),t)}function Jo(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=po.transition;po.transition={};try{e(!1),t()}finally{vt=n,po.transition=a}}function es(){return Io().memoizedState}function ts(e,t,n){var a=tc(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},as(e))rs(t,n);else if(null!==(n=zi(e,t,n,a))){nc(n,e,a,ec()),is(n,t,a)}}function ns(e,t,n){var a=tc(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(as(e))rs(t,r);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,s=i(o,n);if(r.hasEagerState=!0,r.eagerState=s,sa(s,o)){var l=t.interleaved;return null===l?(r.next=r,Ii(t)):(r.next=l.next,l.next=r),void(t.interleaved=r)}}catch(c){}null!==(n=zi(e,t,r,a))&&(nc(n,e,a,r=ec()),is(n,t,a))}}function as(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function rs(e,t){vo=yo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function is(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,yt(e,n)}}var os={readContext:Ei,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ss={readContext:Ei,useCallback:function(e,t){return To().memoizedState=[e,void 0===t?null:t],e},useContext:Ei,useEffect:Bo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Go(4194308,4,$o.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Go(4194308,4,e,t)},useInsertionEffect:function(e,t){return Go(4,2,e,t)},useMemo:function(e,t){var n=To();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=To();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=ts.bind(null,mo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},To().memoizedState=e},useState:Fo,useDebugValue:Ko,useDeferredValue:function(e){return To().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=Jo.bind(null,e[1]),To().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=mo,r=To();if(ri){if(void 0===n)throw Error(i(407));n=n()}else{if(n=t(),null===Rl)throw Error(i(349));0!==(30&fo)||Ao(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Bo(Mo.bind(null,a,o,e),[e]),a.flags|=2048,No(9,jo.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=To(),t=Rl.identifierPrefix;if(ri){var n=Zr;t=":"+t+"R"+(n=(Yr&~(1<<32-ot(Yr)-1)).toString(32)+n),0<(n=wo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=So++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ls={readContext:Ei,useCallback:Yo,useContext:Ei,useEffect:qo,useImperativeHandle:Qo,useInsertionEffect:Wo,useLayoutEffect:Vo,useMemo:Zo,useReducer:Ro,useRef:_o,useState:function(){return Ro(zo)},useDebugValue:Ko,useDeferredValue:function(e){return Xo(Io(),go.memoizedState,e)},useTransition:function(){return[Ro(zo)[0],Io().memoizedState]},useMutableSource:Oo,useSyncExternalStore:Lo,useId:es,unstable_isNewReconciler:!1},cs={readContext:Ei,useCallback:Yo,useContext:Ei,useEffect:qo,useImperativeHandle:Qo,useInsertionEffect:Wo,useLayoutEffect:Vo,useMemo:Zo,useReducer:Po,useRef:_o,useState:function(){return Po(zo)},useDebugValue:Ko,useDeferredValue:function(e){var t=Io();return null===go?t.memoizedState=e:Xo(t,go.memoizedState,e)},useTransition:function(){return[Po(zo)[0],Io().memoizedState]},useMutableSource:Oo,useSyncExternalStore:Lo,useId:es,unstable_isNewReconciler:!1};function us(e,t){try{var n="",a=t;do{n+=G(a),a=a.return}while(a);var r=n}catch(i){r="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:r,digest:null}}function ds(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hs(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var ps="function"===typeof WeakMap?WeakMap:Map;function fs(e,t,n){(n=Ai(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){ql||(ql=!0,Wl=a),hs(0,t)},n}function ms(e,t,n){(n=Ai(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hs(0,t)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(n.callback=function(){hs(0,t),"function"!==typeof a&&(null===Vl?Vl=new Set([this]):Vl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gs(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new ps;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Ec.bind(null,e,t,n),t.then(e,e))}function bs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ys(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ai(-1,1)).tag=2,ji(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var vs=w.ReactCurrentOwner,ws=!1;function Ss(e,t,n,a){t.child=null===e?Zi(t,null,n,a):Yi(t,e.child,n,a)}function ks(e,t,n,a,r){n=n.render;var i=t.ref;return Ci(t,r),a=Co(e,t,n,a,i,r),n=Eo(),null===e||ws?(ri&&n&&ei(t),t.flags|=1,Ss(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,qs(e,t,r))}function xs(e,t,n,a,r){if(null===e){var i=n.type;return"function"!==typeof i||Lc(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=jc(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Cs(e,t,i,a,r))}if(i=e.child,0===(e.lanes&r)){var o=i.memoizedProps;if((n=null!==(n=n.compare)?n:la)(o,a)&&e.ref===t.ref)return qs(e,t,r)}return t.flags|=1,(e=Ac(i,a)).ref=t.ref,e.return=t,t.child=e}function Cs(e,t,n,a,r){if(null!==e){var i=e.memoizedProps;if(la(i,a)&&e.ref===t.ref){if(ws=!1,t.pendingProps=a=i,0===(e.lanes&r))return t.lanes=e.lanes,qs(e,t,r);0!==(131072&e.flags)&&(ws=!0)}}return Is(e,t,n,a,r)}function Es(e,t,n){var a=t.pendingProps,r=a.children,i=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Al,Ll),Ll|=n;else{if(0===(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Al,Ll),Ll|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==i?i.baseLanes:n,Tr(Al,Ll),Ll|=a}else null!==i?(a=i.baseLanes|n,t.memoizedState=null):a=n,Tr(Al,Ll),Ll|=a;return Ss(e,t,r,n),t.child}function Ts(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Is(e,t,n,a,r){var i=Lr(n)?Pr:zr.current;return i=Or(t,i),Ci(t,r),n=Co(e,t,n,a,i,r),a=Eo(),null===e||ws?(ri&&a&&ei(t),t.flags|=1,Ss(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,qs(e,t,r))}function zs(e,t,n,a,r){if(Lr(n)){var i=!0;Ur(t)}else i=!1;if(Ci(t,r),null===t.stateNode)Bs(e,t),Bi(t,n,a),Wi(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,s=t.memoizedProps;o.props=s;var l=o.context,c=n.contextType;"object"===typeof c&&null!==c?c=Ei(c):c=Or(t,c=Lr(n)?Pr:zr.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==a||l!==c)&&qi(t,o,a,c),Pi=!1;var h=t.memoizedState;o.state=h,Di(t,a,o,r),l=t.memoizedState,s!==a||h!==l||Rr.current||Pi?("function"===typeof u&&(_i(t,n,u,a),l=t.memoizedState),(s=Pi||Hi(t,n,s,a,h,l,c))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=l),o.props=a,o.state=l,o.context=c,a=s):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Li(e,t),s=t.memoizedProps,c=t.type===t.elementType?s:gi(t.type,s),o.props=c,d=t.pendingProps,h=o.context,"object"===typeof(l=n.contextType)&&null!==l?l=Ei(l):l=Or(t,l=Lr(n)?Pr:zr.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==d||h!==l)&&qi(t,o,a,l),Pi=!1,h=t.memoizedState,o.state=h,Di(t,a,o,r);var f=t.memoizedState;s!==d||h!==f||Rr.current||Pi?("function"===typeof p&&(_i(t,n,p,a),f=t.memoizedState),(c=Pi||Hi(t,n,c,a,h,f,l)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,l),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,l)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=l,a=c):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return Rs(e,t,n,a,i,r)}function Rs(e,t,n,a,r,i){Ts(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&Dr(t,n,!1),qs(e,t,i);a=t.stateNode,vs.current=t;var s=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=Yi(t,e.child,null,i),t.child=Yi(t,null,s,i)):Ss(e,t,s,i),t.memoizedState=a.state,r&&Dr(t,n,!0),t.child}function Ps(e){var t=e.stateNode;t.pendingContext?jr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&jr(0,t.context,!1),ao(e,t.containerInfo)}function Os(e,t,n,a,r){return pi(),fi(r),t.flags|=256,Ss(e,t,n,a),t.child}var Ls,As,js,Ms={dehydrated:null,treeContext:null,retryLane:0};function Us(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ds(e,t,n){var a,r=t.pendingProps,o=so.current,s=!1,l=0!==(128&t.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Tr(so,1&o),null===e)return ci(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=r.children,e=r.fallback,s?(r=t.mode,s=t.child,l={mode:"hidden",children:l},0===(1&r)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Uc(l,r,0,null),e=Mc(e,r,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=Us(n),t.memoizedState=Ms,e):Fs(t,l));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,s){if(n)return 256&t.flags?(t.flags&=-257,Ns(e,t,s,a=ds(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=Uc({mode:"visible",children:a.children},r,0,null),(o=Mc(o,r,s,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&Yi(t,e.child,null,s),t.child.memoizedState=Us(s),t.memoizedState=Ms,o);if(0===(1&t.mode))return Ns(e,t,s,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var l=a.dgst;return a=l,Ns(e,t,s,a=ds(o=Error(i(419)),a,void 0))}if(l=0!==(s&e.childLanes),ws||l){if(null!==(a=Rl)){switch(s&-s){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|s))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Ri(e,r),nc(a,e,r,-1))}return mc(),Ns(e,t,s,a=ds(Error(i(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Ic.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,ai=cr(r.nextSibling),ni=t,ri=!0,ii=null,null!==e&&($r[Qr++]=Yr,$r[Qr++]=Zr,$r[Qr++]=Kr,Yr=e.id,Zr=e.overflow,Kr=t),(t=Fs(t,a.children)).flags|=4096,t)}(e,t,l,r,a,o,n);if(s){s=r.fallback,l=t.mode,a=(o=e.child).sibling;var c={mode:"hidden",children:r.children};return 0===(1&l)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=c,t.deletions=null):(r=Ac(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==a?s=Ac(a,s):(s=Mc(s,l,n,null)).flags|=2,s.return=t,r.return=t,r.sibling=s,t.child=r,r=s,s=t.child,l=null===(l=e.child.memoizedState)?Us(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Ms,r}return e=(s=e.child).sibling,r=Ac(s,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Fs(e,t){return(t=Uc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ns(e,t,n,a){return null!==a&&fi(a),Yi(t,e.child,null,n),(e=Fs(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function _s(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),xi(e.return,t,n)}function Gs(e,t,n,a,r){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=a,i.tail=n,i.tailMode=r)}function Hs(e,t,n){var a=t.pendingProps,r=a.revealOrder,i=a.tail;if(Ss(e,t,a.children,n),0!==(2&(a=so.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&_s(e,n,t);else if(19===e.tag)_s(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr(so,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===lo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Gs(t,!1,r,n,i);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===lo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Gs(t,!0,n,null,i);break;case"together":Gs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Bs(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function qs(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ul|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Ac(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ac(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ws(e,t){if(!ri)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Vs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function $s(e,t,n){var a=t.pendingProps;switch(ti(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vs(t),null;case 1:case 17:return Lr(t.type)&&Ar(),Vs(t),null;case 3:return a=t.stateNode,ro(),Er(Rr),Er(zr),uo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(di(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ii&&(oc(ii),ii=null))),Vs(t),null;case 5:oo(t);var r=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)As(e,t,n,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(i(166));return Vs(t),null}if(e=no(Ji.current),di(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[hr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Na("cancel",a),Na("close",a);break;case"iframe":case"object":case"embed":Na("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Na(Ma[r],a);break;case"source":Na("error",a);break;case"img":case"image":case"link":Na("error",a),Na("load",a);break;case"details":Na("toggle",a);break;case"input":Y(a,o),Na("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Na("invalid",a);break;case"textarea":re(a,o),Na("invalid",a)}for(var l in ye(n,o),r=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"===typeof c?a.textContent!==c&&(!0!==o.suppressHydrationWarning&&Xa(a.textContent,c,e),r=["children",c]):"number"===typeof c&&a.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Xa(a.textContent,c,e),r=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Na("scroll",a)}switch(n){case"input":V(a),J(a,o,!0);break;case"textarea":V(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=Ja)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{l=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=l.createElement(n,{is:a.is}):(e=l.createElement(n),"select"===n&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,n),e[hr]=t,e[pr]=a,Ls(e,t),t.stateNode=e;e:{switch(l=ve(n,a),n){case"dialog":Na("cancel",e),Na("close",e),r=a;break;case"iframe":case"object":case"embed":Na("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Na(Ma[r],e);r=a;break;case"source":Na("error",e),r=a;break;case"img":case"image":case"link":Na("error",e),Na("load",e),r=a;break;case"details":Na("toggle",e),r=a;break;case"input":Y(e,a),r=K(e,a),Na("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=D({},a,{value:void 0}),Na("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Na("invalid",e)}for(o in ye(n,r),c=r)if(c.hasOwnProperty(o)){var u=c[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"===typeof u&&he(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Na("scroll",e):null!=u&&v(e,o,u,l))}switch(n){case"input":V(e),J(e,a,!1);break;case"textarea":V(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+q(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=Ja)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Vs(t),null;case 6:if(e&&null!=t.stateNode)js(0,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(i(166));if(n=no(to.current),no(Ji.current),di(t)){if(a=t.stateNode,n=t.memoizedProps,a[hr]=t,(o=a.nodeValue!==n)&&null!==(e=ni))switch(e.tag){case 3:Xa(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xa(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[hr]=t,t.stateNode=a}return Vs(t),null;case 13:if(Er(so),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ri&&null!==ai&&0!==(1&t.mode)&&0===(128&t.flags))hi(),pi(),t.flags|=98560,o=!1;else if(o=di(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(i(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(i(317));o[hr]=t}else pi(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Vs(t),o=!1}else null!==ii&&(oc(ii),ii=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&so.current)?0===jl&&(jl=3):mc())),null!==t.updateQueue&&(t.flags|=4),Vs(t),null);case 4:return ro(),null===e&&Ha(t.stateNode.containerInfo),Vs(t),null;case 10:return ki(t.type._context),Vs(t),null;case 19:if(Er(so),null===(o=t.memoizedState))return Vs(t),null;if(a=0!==(128&t.flags),null===(l=o.rendering))if(a)Ws(o,!1);else{if(0!==jl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=lo(e))){for(t.flags|=128,Ws(o,!1),null!==(a=l.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr(so,1&so.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Hl&&(t.flags|=128,a=!0,Ws(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=lo(l))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ws(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ri)return Vs(t),null}else 2*Ze()-o.renderingStartTime>Hl&&1073741824!==n&&(t.flags|=128,a=!0,Ws(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=o.last)?n.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=so.current,Tr(so,a?1&n|2:1&n),t):(Vs(t),null);case 22:case 23:return dc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Ll)&&(Vs(t),6&t.subtreeFlags&&(t.flags|=8192)):Vs(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function Qs(e,t){switch(ti(t),t.tag){case 1:return Lr(t.type)&&Ar(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ro(),Er(Rr),Er(zr),uo(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Er(so),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));pi()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Er(so),null;case 4:return ro(),null;case 10:return ki(t.type._context),null;case 22:case 23:return dc(),null;default:return null}}Ls=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},As=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,no(Ji.current);var i,o=null;switch(n){case"input":r=K(e,r),a=K(e,a),o=[];break;case"select":r=D({},r,{value:void 0}),a=D({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=Ja)}for(u in ye(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var l=r[u];for(i in l)l.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var c=a[u];if(l=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(i in l)!l.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&l[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(o||(o=[]),o.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(o=o||[]).push(u,c)):"children"===u?"string"!==typeof c&&"number"!==typeof c||(o=o||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Na("scroll",e),o||l===c||(o=[])):(o=o||[]).push(u,c))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},js=function(e,t,n,a){n!==a&&(t.flags|=4)};var Ks=!1,Ys=!1,Zs="function"===typeof WeakSet?WeakSet:Set,Xs=null;function Js(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Cc(e,t,a)}else n.current=null}function el(e,t,n){try{n()}catch(a){Cc(e,t,a)}}var tl=!1;function nl(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var i=r.destroy;r.destroy=void 0,void 0!==i&&el(t,n,i)}r=r.next}while(r!==a)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function il(e){var t=e.alternate;null!==t&&(e.alternate=null,il(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[pr],delete t[mr],delete t[gr],delete t[br])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function cl(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}var ul=null,dl=!1;function hl(e,t,n){for(n=n.child;null!==n;)pl(e,t,n),n=n.sibling}function pl(e,t,n){if(it&&"function"===typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(rt,n)}catch(s){}switch(n.tag){case 5:Ys||Js(n,t);case 6:var a=ul,r=dl;ul=null,hl(e,t,n),dl=r,null!==(ul=a)&&(dl?(e=ul,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):ul.removeChild(n.stateNode));break;case 18:null!==ul&&(dl?(e=ul,n=n.stateNode,8===e.nodeType?lr(e.parentNode,n):1===e.nodeType&&lr(e,n),Ht(e)):lr(ul,n.stateNode));break;case 4:a=ul,r=dl,ul=n.stateNode.containerInfo,dl=!0,hl(e,t,n),ul=a,dl=r;break;case 0:case 11:case 14:case 15:if(!Ys&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var i=r,o=i.destroy;i=i.tag,void 0!==o&&(0!==(2&i)||0!==(4&i))&&el(n,t,o),r=r.next}while(r!==a)}hl(e,t,n);break;case 1:if(!Ys&&(Js(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(s){Cc(n,t,s)}hl(e,t,n);break;case 21:hl(e,t,n);break;case 22:1&n.mode?(Ys=(a=Ys)||null!==n.memoizedState,hl(e,t,n),Ys=a):hl(e,t,n);break;default:hl(e,t,n)}}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zs),t.forEach((function(t){var a=zc.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===ul)throw Error(i(160));pl(o,s,r),ul=null,dl=!1;var c=r.alternate;null!==c&&(c.return=null),r.return=null}catch(u){Cc(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),bl(e),4&a){try{nl(3,e,e.return),al(3,e)}catch(g){Cc(e,e.return,g)}try{nl(5,e,e.return)}catch(g){Cc(e,e.return,g)}}break;case 1:ml(t,e),bl(e),512&a&&null!==n&&Js(n,n.return);break;case 5:if(ml(t,e),bl(e),512&a&&null!==n&&Js(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(g){Cc(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,s=null!==n?n.memoizedProps:o,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===o.type&&null!=o.name&&Z(r,o),ve(l,s);var u=ve(l,o);for(s=0;s<c.length;s+=2){var d=c[s],h=c[s+1];"style"===d?ge(r,h):"dangerouslySetInnerHTML"===d?de(r,h):"children"===d?he(r,h):v(r,d,h,u)}switch(l){case"input":X(r,o);break;case"textarea":ie(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Cc(e,e.return,g)}}break;case 6:if(ml(t,e),bl(e),4&a){if(null===e.stateNode)throw Error(i(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Cc(e,e.return,g)}}break;case 3:if(ml(t,e),bl(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(g){Cc(e,e.return,g)}break;case 4:default:ml(t,e),bl(e);break;case 13:ml(t,e),bl(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Gl=Ze())),4&a&&fl(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Ys=(u=Ys)||d,ml(t,e),Ys=u):ml(t,e),bl(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for(Xs=e,d=e.child;null!==d;){for(h=Xs=d;null!==Xs;){switch(f=(p=Xs).child,p.tag){case 0:case 11:case 14:case 15:nl(4,p,p.return);break;case 1:Js(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Cc(a,n,g)}}break;case 5:Js(p,p.return);break;case 22:if(null!==p.memoizedState){Sl(h);continue}}null!==f?(f.return=p,Xs=f):Sl(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{r=h.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=h.stateNode,s=void 0!==(c=h.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,l.style.display=me("display",s))}catch(g){Cc(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(g){Cc(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:ml(t,e),bl(e),4&a&&fl(e);case 21:}}function bl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ol(n)){var a=n;break e}n=n.return}throw Error(i(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(he(r,""),a.flags&=-33),cl(e,sl(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;ll(e,sl(e),o);break;default:throw Error(i(161))}}catch(s){Cc(e,e.return,s)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yl(e,t,n){Xs=e,vl(e,t,n)}function vl(e,t,n){for(var a=0!==(1&e.mode);null!==Xs;){var r=Xs,i=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Ks;if(!o){var s=r.alternate,l=null!==s&&null!==s.memoizedState||Ys;s=Ks;var c=Ys;if(Ks=o,(Ys=l)&&!c)for(Xs=r;null!==Xs;)l=(o=Xs).child,22===o.tag&&null!==o.memoizedState?kl(r):null!==l?(l.return=o,Xs=l):kl(r);for(;null!==i;)Xs=i,vl(i,t,n),i=i.sibling;Xs=r,Ks=s,Ys=c}wl(e)}else 0!==(8772&r.subtreeFlags)&&null!==i?(i.return=r,Xs=i):wl(e)}}function wl(e){for(;null!==Xs;){var t=Xs;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ys||al(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Ys)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:gi(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Fi(t,o,a);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Fi(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Ht(h)}}}break;default:throw Error(i(163))}Ys||512&t.flags&&rl(t)}catch(p){Cc(t,t.return,p)}}if(t===e){Xs=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xs=n;break}Xs=t.return}}function Sl(e){for(;null!==Xs;){var t=Xs;if(t===e){Xs=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xs=n;break}Xs=t.return}}function kl(e){for(;null!==Xs;){var t=Xs;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{al(4,t)}catch(l){Cc(t,n,l)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(l){Cc(t,r,l)}}var i=t.return;try{rl(t)}catch(l){Cc(t,i,l)}break;case 5:var o=t.return;try{rl(t)}catch(l){Cc(t,o,l)}}}catch(l){Cc(t,t.return,l)}if(t===e){Xs=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Xs=s;break}Xs=t.return}}var xl,Cl=Math.ceil,El=w.ReactCurrentDispatcher,Tl=w.ReactCurrentOwner,Il=w.ReactCurrentBatchConfig,zl=0,Rl=null,Pl=null,Ol=0,Ll=0,Al=Cr(0),jl=0,Ml=null,Ul=0,Dl=0,Fl=0,Nl=null,_l=null,Gl=0,Hl=1/0,Bl=null,ql=!1,Wl=null,Vl=null,$l=!1,Ql=null,Kl=0,Yl=0,Zl=null,Xl=-1,Jl=0;function ec(){return 0!==(6&zl)?Ze():-1!==Xl?Xl:Xl=Ze()}function tc(e){return 0===(1&e.mode)?1:0!==(2&zl)&&0!==Ol?Ol&-Ol:null!==mi.transition?(0===Jl&&(Jl=mt()),Jl):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function nc(e,t,n,a){if(50<Yl)throw Yl=0,Zl=null,Error(i(185));bt(e,n,a),0!==(2&zl)&&e===Rl||(e===Rl&&(0===(2&zl)&&(Dl|=n),4===jl&&sc(e,Ol)),ac(e,a),1===n&&0===zl&&0===(1&t.mode)&&(Hl=Ze()+500,Nr&&Hr()))}function ac(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-ot(i),s=1<<o,l=r[o];-1===l?0!==(s&n)&&0===(s&a)||(r[o]=pt(s,t)):l<=t&&(e.expiredLanes|=s),i&=~s}}(e,t);var a=ht(e,e===Rl?Ol:0);if(0===a)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){Nr=!0,Gr(e)}(lc.bind(null,e)):Gr(lc.bind(null,e)),or((function(){0===(6&zl)&&Hr()})),n=null;else{switch(wt(a)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Rc(n,rc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rc(e,t){if(Xl=-1,Jl=0,0!==(6&zl))throw Error(i(327));var n=e.callbackNode;if(kc()&&e.callbackNode!==n)return null;var a=ht(e,e===Rl?Ol:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gc(e,a);else{t=a;var r=zl;zl|=2;var o=fc();for(Rl===e&&Ol===t||(Bl=null,Hl=Ze()+500,hc(e,t));;)try{yc();break}catch(l){pc(e,l)}Si(),El.current=o,zl=r,null!==Pl?t=0:(Rl=null,Ol=0,t=jl)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ic(e,r))),1===t)throw n=Ml,hc(e,0),sc(e,a),ac(e,Ze()),n;if(6===t)sc(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],i=r.getSnapshot;r=r.value;try{if(!sa(i(),r))return!1}catch(s){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gc(e,a))&&(0!==(o=ft(e))&&(a=o,t=ic(e,o))),1===t))throw n=Ml,hc(e,0),sc(e,a),ac(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(i(345));case 2:case 5:Sc(e,_l,Bl);break;case 3:if(sc(e,a),(130023424&a)===a&&10<(t=Gl+500-Ze())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&a)!==a){ec(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(Sc.bind(null,e,_l,Bl),t);break}Sc(e,_l,Bl);break;case 4:if(sc(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var s=31-ot(a);o=1<<s,(s=t[s])>r&&(r=s),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Cl(a/1960))-a)){e.timeoutHandle=ar(Sc.bind(null,e,_l,Bl),a);break}Sc(e,_l,Bl);break;default:throw Error(i(329))}}}return ac(e,Ze()),e.callbackNode===n?rc.bind(null,e):null}function ic(e,t){var n=Nl;return e.current.memoizedState.isDehydrated&&(hc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=_l,_l=n,null!==t&&oc(t)),e}function oc(e){null===_l?_l=e:_l.push.apply(_l,e)}function sc(e,t){for(t&=~Fl,t&=~Dl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function lc(e){if(0!==(6&zl))throw Error(i(327));kc();var t=ht(e,0);if(0===(1&t))return ac(e,Ze()),null;var n=gc(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ic(e,a))}if(1===n)throw n=Ml,hc(e,0),sc(e,t),ac(e,Ze()),n;if(6===n)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Sc(e,_l,Bl),ac(e,Ze()),null}function cc(e,t){var n=zl;zl|=1;try{return e(t)}finally{0===(zl=n)&&(Hl=Ze()+500,Nr&&Hr())}}function uc(e){null!==Ql&&0===Ql.tag&&0===(6&zl)&&kc();var t=zl;zl|=1;var n=Il.transition,a=vt;try{if(Il.transition=null,vt=1,e)return e()}finally{vt=a,Il.transition=n,0===(6&(zl=t))&&Hr()}}function dc(){Ll=Al.current,Er(Al)}function hc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Pl)for(n=Pl.return;null!==n;){var a=n;switch(ti(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Ar();break;case 3:ro(),Er(Rr),Er(zr),uo();break;case 5:oo(a);break;case 4:ro();break;case 13:case 19:Er(so);break;case 10:ki(a.type._context);break;case 22:case 23:dc()}n=n.return}if(Rl=e,Pl=e=Ac(e.current,null),Ol=Ll=t,jl=0,Ml=null,Fl=Dl=Ul=0,_l=Nl=null,null!==Ti){for(t=0;t<Ti.length;t++)if(null!==(a=(n=Ti[t]).interleaved)){n.interleaved=null;var r=a.next,i=n.pending;if(null!==i){var o=i.next;i.next=r,a.next=o}n.pending=a}Ti=null}return e}function pc(e,t){for(;;){var n=Pl;try{if(Si(),ho.current=os,yo){for(var a=mo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}yo=!1}if(fo=0,bo=go=mo=null,vo=!1,wo=0,Tl.current=null,null===n||null===n.return){jl=1,Ml=t,Pl=null;break}e:{var o=e,s=n.return,l=n,c=t;if(t=Ol,l.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var u=c,d=l,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=bs(s);if(null!==f){f.flags&=-257,ys(f,s,l,0,t),1&f.mode&&gs(o,u,t),c=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(c),t.updateQueue=g}else m.add(c);break e}if(0===(1&t)){gs(o,u,t),mc();break e}c=Error(i(426))}else if(ri&&1&l.mode){var b=bs(s);if(null!==b){0===(65536&b.flags)&&(b.flags|=256),ys(b,s,l,0,t),fi(us(c,l));break e}}o=c=us(c,l),4!==jl&&(jl=2),null===Nl?Nl=[o]:Nl.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Ui(o,fs(0,c,t));break e;case 1:l=c;var y=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof y.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Vl||!Vl.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Ui(o,ms(o,l,t));break e}}o=o.return}while(null!==o)}wc(n)}catch(w){t=w,Pl===n&&null!==n&&(Pl=n=n.return);continue}break}}function fc(){var e=El.current;return El.current=os,null===e?os:e}function mc(){0!==jl&&3!==jl&&2!==jl||(jl=4),null===Rl||0===(268435455&Ul)&&0===(268435455&Dl)||sc(Rl,Ol)}function gc(e,t){var n=zl;zl|=2;var a=fc();for(Rl===e&&Ol===t||(Bl=null,hc(e,t));;)try{bc();break}catch(r){pc(e,r)}if(Si(),zl=n,El.current=a,null!==Pl)throw Error(i(261));return Rl=null,Ol=0,jl}function bc(){for(;null!==Pl;)vc(Pl)}function yc(){for(;null!==Pl&&!Ke();)vc(Pl)}function vc(e){var t=xl(e.alternate,e,Ll);e.memoizedProps=e.pendingProps,null===t?wc(e):Pl=t,Tl.current=null}function wc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=$s(n,t,Ll)))return void(Pl=n)}else{if(null!==(n=Qs(n,t)))return n.flags&=32767,void(Pl=n);if(null===e)return jl=6,void(Pl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Pl=t);Pl=t=e}while(null!==t);0===jl&&(jl=5)}function Sc(e,t,n){var a=vt,r=Il.transition;try{Il.transition=null,vt=1,function(e,t,n,a){do{kc()}while(null!==Ql);if(0!==(6&zl))throw Error(i(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),i=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~i}}(e,o),e===Rl&&(Pl=Rl=null,Ol=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||$l||($l=!0,Rc(tt,(function(){return kc(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Il.transition,Il.transition=null;var s=vt;vt=1;var l=zl;zl|=4,Tl.current=null,function(e,t){if(er=qt,pa(e=ha())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(S){n=null;break e}var s=0,l=-1,c=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(l=s+r),h!==o||0!==a&&3!==h.nodeType||(c=s+a),3===h.nodeType&&(s+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(l=s),p===o&&++d===a&&(c=s),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===l||-1===c?null:{start:l,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},qt=!1,Xs=t;null!==Xs;)if(e=(t=Xs).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Xs=e;else for(;null!==Xs;){t=Xs;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,b=m.memoizedState,y=t.stateNode,v=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:gi(t.type,g),b);y.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(i(163))}}catch(S){Cc(t,t.return,S)}if(null!==(e=t.sibling)){e.return=t.return,Xs=e;break}Xs=t.return}m=tl,tl=!1}(e,n),gl(n,e),fa(tr),qt=!!er,tr=er=null,e.current=n,yl(n,e,r),Ye(),zl=l,vt=s,Il.transition=o}else e.current=n;if($l&&($l=!1,Ql=e,Kl=r),0===(o=e.pendingLanes)&&(Vl=null),function(e){if(it&&"function"===typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ac(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)a((r=t[n]).value,{componentStack:r.stack,digest:r.digest});if(ql)throw ql=!1,e=Wl,Wl=null,e;0!==(1&Kl)&&0!==e.tag&&kc(),0!==(1&(o=e.pendingLanes))?e===Zl?Yl++:(Yl=0,Zl=e):Yl=0,Hr()}(e,t,n,a)}finally{Il.transition=r,vt=a}return null}function kc(){if(null!==Ql){var e=wt(Kl),t=Il.transition,n=vt;try{if(Il.transition=null,vt=16>e?16:e,null===Ql)var a=!1;else{if(e=Ql,Ql=null,Kl=0,0!==(6&zl))throw Error(i(331));var r=zl;for(zl|=4,Xs=e.current;null!==Xs;){var o=Xs,s=o.child;if(0!==(16&Xs.flags)){var l=o.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Xs=u;null!==Xs;){var d=Xs;switch(d.tag){case 0:case 11:case 15:nl(8,d,o)}var h=d.child;if(null!==h)h.return=d,Xs=h;else for(;null!==Xs;){var p=(d=Xs).sibling,f=d.return;if(il(d),d===u){Xs=null;break}if(null!==p){p.return=f,Xs=p;break}Xs=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var b=g.sibling;g.sibling=null,g=b}while(null!==g)}}Xs=o}}if(0!==(2064&o.subtreeFlags)&&null!==s)s.return=o,Xs=s;else e:for(;null!==Xs;){if(0!==(2048&(o=Xs).flags))switch(o.tag){case 0:case 11:case 15:nl(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Xs=y;break e}Xs=o.return}}var v=e.current;for(Xs=v;null!==Xs;){var w=(s=Xs).child;if(0!==(2064&s.subtreeFlags)&&null!==w)w.return=s,Xs=w;else e:for(s=v;null!==Xs;){if(0!==(2048&(l=Xs).flags))try{switch(l.tag){case 0:case 11:case 15:al(9,l)}}catch(k){Cc(l,l.return,k)}if(l===s){Xs=null;break e}var S=l.sibling;if(null!==S){S.return=l.return,Xs=S;break e}Xs=l.return}}if(zl=r,Hr(),it&&"function"===typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Il.transition=t}}return!1}function xc(e,t,n){e=ji(e,t=fs(0,t=us(n,t),1),1),t=ec(),null!==e&&(bt(e,1,t),ac(e,t))}function Cc(e,t,n){if(3===e.tag)xc(e,e,n);else for(;null!==t;){if(3===t.tag){xc(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Vl||!Vl.has(a))){t=ji(t,e=ms(t,e=us(n,e),1),1),e=ec(),null!==t&&(bt(t,1,e),ac(t,e));break}}t=t.return}}function Ec(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Rl===e&&(Ol&n)===n&&(4===jl||3===jl&&(130023424&Ol)===Ol&&500>Ze()-Gl?hc(e,0):Fl|=n),ac(e,t)}function Tc(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=ec();null!==(e=Ri(e,t))&&(bt(e,t,n),ac(e,n))}function Ic(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tc(e,n)}function zc(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(i(314))}null!==a&&a.delete(t),Tc(e,n)}function Rc(e,t){return $e(e,t)}function Pc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Oc(e,t,n,a){return new Pc(e,t,n,a)}function Lc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ac(e,t){var n=e.alternate;return null===n?((n=Oc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function jc(e,t,n,a,r,o){var s=2;if(a=e,"function"===typeof e)Lc(e)&&(s=1);else if("string"===typeof e)s=5;else e:switch(e){case x:return Mc(n.children,r,o,t);case C:s=8,r|=8;break;case E:return(e=Oc(12,n,t,2|r)).elementType=E,e.lanes=o,e;case R:return(e=Oc(13,n,t,r)).elementType=R,e.lanes=o,e;case P:return(e=Oc(19,n,t,r)).elementType=P,e.lanes=o,e;case A:return Uc(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:s=10;break e;case I:s=9;break e;case z:s=11;break e;case O:s=14;break e;case L:s=16,a=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Oc(s,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Mc(e,t,n,a){return(e=Oc(7,e,a,t)).lanes=n,e}function Uc(e,t,n,a){return(e=Oc(22,e,a,t)).elementType=A,e.lanes=n,e.stateNode={isHidden:!1},e}function Dc(e,t,n){return(e=Oc(6,e,null,t)).lanes=n,e}function Fc(e,t,n){return(t=Oc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Nc(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function _c(e,t,n,a,r,i,o,s,l){return e=new Nc(e,t,n,s,l),1===t?(t=1,!0===i&&(t|=8)):t=0,i=Oc(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Oi(i),e}function Gc(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}function Hc(e){if(!e)return Ir;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Lr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var n=e.type;if(Lr(n))return Mr(e,n,t)}return t}function Bc(e,t,n,a,r,i,o,s,l){return(e=_c(n,a,!0,e,0,i,0,s,l)).context=Hc(null),n=e.current,(i=Ai(a=ec(),r=tc(n))).callback=void 0!==t&&null!==t?t:null,ji(n,i,r),e.current.lanes=r,bt(e,r,a),ac(e,a),e}function qc(e,t,n,a){var r=t.current,i=ec(),o=tc(r);return n=Hc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ai(i,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=ji(r,t,o))&&(nc(e,r,o,i),Mi(e,r,o)),o}function Wc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function $c(e,t){Vc(e,t),(e=e.alternate)&&Vc(e,t)}xl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Rr.current)ws=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return ws=!1,function(e,t,n){switch(t.tag){case 3:Ps(t),pi();break;case 5:io(t);break;case 1:Lr(t.type)&&Ur(t);break;case 4:ao(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(bi,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr(so,1&so.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Ds(e,t,n):(Tr(so,1&so.current),null!==(e=qs(e,t,n))?e.sibling:null);Tr(so,1&so.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Hs(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(so,so.current),a)break;return null;case 22:case 23:return t.lanes=0,Es(e,t,n)}return qs(e,t,n)}(e,t,n);ws=0!==(131072&e.flags)}else ws=!1,ri&&0!==(1048576&t.flags)&&Jr(t,Vr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Bs(e,t),e=t.pendingProps;var r=Or(t,zr.current);Ci(t,n),r=Co(null,t,a,e,r,n);var o=Eo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Lr(a)?(o=!0,Ur(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Oi(t),r.updater=Gi,t.stateNode=r,r._reactInternals=t,Wi(t,a,e,n),t=Rs(null,t,a,!0,o,n)):(t.tag=0,ri&&o&&ei(t),Ss(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Bs(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Lc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===z)return 11;if(e===O)return 14}return 2}(a),e=gi(a,e),r){case 0:t=Is(null,t,a,e,n);break e;case 1:t=zs(null,t,a,e,n);break e;case 11:t=ks(null,t,a,e,n);break e;case 14:t=xs(null,t,a,gi(a.type,e),n);break e}throw Error(i(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Is(e,t,a,r=t.elementType===a?r:gi(a,r),n);case 1:return a=t.type,r=t.pendingProps,zs(e,t,a,r=t.elementType===a?r:gi(a,r),n);case 3:e:{if(Ps(t),null===e)throw Error(i(387));a=t.pendingProps,r=(o=t.memoizedState).element,Li(e,t),Di(t,a,null,n);var s=t.memoizedState;if(a=s.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Os(e,t,a,n,r=us(Error(i(423)),t));break e}if(a!==r){t=Os(e,t,a,n,r=us(Error(i(424)),t));break e}for(ai=cr(t.stateNode.containerInfo.firstChild),ni=t,ri=!0,ii=null,n=Zi(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pi(),a===r){t=qs(e,t,n);break e}Ss(e,t,a,n)}t=t.child}return t;case 5:return io(t),null===e&&ci(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,s=r.children,nr(a,r)?s=null:null!==o&&nr(a,o)&&(t.flags|=32),Ts(e,t),Ss(e,t,s,n),t.child;case 6:return null===e&&ci(t),null;case 13:return Ds(e,t,n);case 4:return ao(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Yi(t,null,a,n):Ss(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,ks(e,t,a,r=t.elementType===a?r:gi(a,r),n);case 7:return Ss(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ss(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,s=r.value,Tr(bi,a._currentValue),a._currentValue=s,null!==o)if(sa(o.value,s)){if(o.children===r.children&&!Rr.current){t=qs(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){s=o.child;for(var c=l.firstContext;null!==c;){if(c.context===a){if(1===o.tag){(c=Ai(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}o.lanes|=n,null!==(c=o.alternate)&&(c.lanes|=n),xi(o.return,n,t),l.lanes|=n;break}c=c.next}}else if(10===o.tag)s=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(s=o.return))throw Error(i(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),xi(s,n,t),s=o.sibling}else s=o.child;if(null!==s)s.return=o;else for(s=o;null!==s;){if(s===t){s=null;break}if(null!==(o=s.sibling)){o.return=s.return,s=o;break}s=s.return}o=s}Ss(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ci(t,n),a=a(r=Ei(r)),t.flags|=1,Ss(e,t,a,n),t.child;case 14:return r=gi(a=t.type,t.pendingProps),xs(e,t,a,r=gi(a.type,r),n);case 15:return Cs(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:gi(a,r),Bs(e,t),t.tag=1,Lr(a)?(e=!0,Ur(t)):e=!1,Ci(t,n),Bi(t,a,r),Wi(t,a,r,n),Rs(null,t,a,!0,e,n);case 19:return Hs(e,t,n);case 22:return Es(e,t,n)}throw Error(i(156,t.tag))};var Qc="function"===typeof reportError?reportError:function(e){console.error(e)};function Kc(e){this._internalRoot=e}function Yc(e){this._internalRoot=e}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function eu(e,t,n,a,r){var i=n._reactRootContainer;if(i){var o=i;if("function"===typeof r){var s=r;r=function(){var e=Wc(o);s.call(e)}}qc(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var i=a;a=function(){var e=Wc(o);i.call(e)}}var o=Bc(t,a,e,0,null,!1,0,"",Jc);return e._reactRootContainer=o,e[fr]=o.current,Ha(8===e.nodeType?e.parentNode:e),uc(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var s=a;a=function(){var e=Wc(l);s.call(e)}}var l=_c(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=l,e[fr]=l.current,Ha(8===e.nodeType?e.parentNode:e),uc((function(){qc(t,l,n,a)})),l}(n,t,e,r,a);return Wc(o)}Yc.prototype.render=Kc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));qc(e,t,null,null)},Yc.prototype.unmount=Kc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){qc(null,e,null,null)})),t[fr]=null}},Yc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<At.length&&0!==t&&t<At[n].priority;n++);At.splice(n,0,e),0===n&&Dt(e)}},St=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),ac(t,Ze()),0===(6&zl)&&(Hl=Ze()+500,Hr()))}break;case 13:uc((function(){var t=Ri(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),$c(e,1)}},kt=function(e){if(13===e.tag){var t=Ri(e,134217728);if(null!==t)nc(t,e,134217728,ec());$c(e,134217728)}},xt=function(e){if(13===e.tag){var t=tc(e),n=Ri(e,t);if(null!==n)nc(n,e,t,ec());$c(e,t)}},Ct=function(){return vt},Et=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=Sr(a);if(!r)throw Error(i(90));$(a),X(a,r)}}}break;case"textarea":ie(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},ze=cc,Re=uc;var tu={usingClientEntryPoint:!1,Events:[vr,wr,Sr,Te,Ie,cc]},nu={findFiberByHostInstance:yr,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},au={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{rt=ru.inject(au),it=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zc(t))throw Error(i(200));return Gc(e,t,null,n)},t.createRoot=function(e,t){if(!Zc(e))throw Error(i(299));var n=!1,a="",r=Qc;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=_c(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ha(8===e.nodeType?e.parentNode:e),new Kc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=We(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(i(200));return eu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zc(e))throw Error(i(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",s=Qc;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Bc(t,null,e,1,null!=n?n:null,r,0,o,s),e[fr]=t.current,Ha(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(i(200));return eu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(i(40));return!!e._reactRootContainer&&(uc((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Xc(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return eu(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},250:function(e,t,n){"use strict";var a=n(164);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},164:function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(463)},574:function(e,t){"use strict";var n,a=Symbol.for("react.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.server_context"),d=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),p=Symbol.for("react.suspense_list"),f=Symbol.for("react.memo"),m=Symbol.for("react.lazy"),g=Symbol.for("react.offscreen");function b(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case i:case s:case o:case h:case p:return e;default:switch(e=e&&e.$$typeof){case u:case c:case d:case m:case f:case l:return e;default:return t}}case r:return t}}}n=Symbol.for("react.module.reference"),t.ContextConsumer=c,t.ContextProvider=l,t.Element=a,t.ForwardRef=d,t.Fragment=i,t.Lazy=m,t.Memo=f,t.Portal=r,t.Profiler=s,t.StrictMode=o,t.Suspense=h,t.SuspenseList=p,t.isAsyncMode=function(){return!1},t.isConcurrentMode=function(){return!1},t.isContextConsumer=function(e){return b(e)===c},t.isContextProvider=function(e){return b(e)===l},t.isElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return b(e)===d},t.isFragment=function(e){return b(e)===i},t.isLazy=function(e){return b(e)===m},t.isMemo=function(e){return b(e)===f},t.isPortal=function(e){return b(e)===r},t.isProfiler=function(e){return b(e)===s},t.isStrictMode=function(e){return b(e)===o},t.isSuspense=function(e){return b(e)===h},t.isSuspenseList=function(e){return b(e)===p},t.isValidElementType=function(e){return"string"===typeof e||"function"===typeof e||e===i||e===s||e===o||e===h||e===p||e===g||"object"===typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===f||e.$$typeof===l||e.$$typeof===c||e.$$typeof===d||e.$$typeof===n||void 0!==e.getModuleId)},t.typeOf=b},599:function(e,t,n){"use strict";e.exports=n(574)},374:function(e,t,n){"use strict";var a=n(791),r=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var a,i={},c=null,u=null;for(a in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!l.hasOwnProperty(a)&&(i[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===i[a]&&(i[a]=t[a]);return{$$typeof:r,type:e,key:c,ref:u,props:i,_owner:s.current}}t.Fragment=i,t.jsx=c},117:function(e,t){"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=b.prototype;var w=v.prototype=new y;w.constructor=v,m(w,b.prototype),w.isPureReactComponent=!0;var S=Array.isArray,k=Object.prototype.hasOwnProperty,x={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,a){var r,i={},o=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!C.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(1===l)i.children=a;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];i.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===i[r]&&(i[r]=l[r]);return{$$typeof:n,type:e,key:o,ref:s,props:i,_owner:x.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var I=/\/+/g;function z(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,r,i,o){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case a:l=!0}}if(l)return o=o(l=e),e=""===i?"."+z(l,0):i,S(o)?(r="",null!=e&&(r=e.replace(I,"$&/")+"/"),R(o,t,r,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(I,"$&/")+"/")+e)),t.push(o)),1;if(l=0,i=""===i?".":i+":",S(e))for(var c=0;c<e.length;c++){var u=i+z(s=e[c],c);l+=R(s,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=R(s=s.value,t,r,u=i+z(s,c++),o);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function P(e,t,n){if(null==e)return e;var a=[],r=0;return R(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function O(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var L={current:null},A={transition:null},j={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:A,ReactCurrentOwner:x};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=i,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),i=e.key,o=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,s=x.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)k.call(t,c)&&!C.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=a;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];r.children=l}return{$$typeof:n,type:e.type,key:i,ref:o,props:r,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=A.transition;A.transition={};try{e()}finally{A.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return L.current.useCallback(e,t)},t.useContext=function(e){return L.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return L.current.useDeferredValue(e)},t.useEffect=function(e,t){return L.current.useEffect(e,t)},t.useId=function(){return L.current.useId()},t.useImperativeHandle=function(e,t,n){return L.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return L.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return L.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return L.current.useMemo(e,t)},t.useReducer=function(e,t,n){return L.current.useReducer(e,t,n)},t.useRef=function(e){return L.current.useRef(e)},t.useState=function(e){return L.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return L.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return L.current.useTransition()},t.version="18.2.0"},791:function(e,t,n){"use strict";e.exports=n(117)},184:function(e,t,n){"use strict";e.exports=n(374)},813:function(e,t){"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<i(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var s=2*(a+1)-1,l=e[s],c=s+1,u=e[c];if(0>i(l,n))c<r&&0>i(u,l)?(e[a]=u,e[c]=n,a=c):(e[a]=l,e[s]=n,a=s);else{if(!(c<r&&0>i(u,n)))break e;e[a]=u,e[c]=n,a=c}}}return t}function i(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,b="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function w(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(c,t)}t=a(u)}}function S(e){if(g=!1,w(e),!m)if(null!==a(c))m=!0,A(k);else{var t=a(u);null!==t&&j(S,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,y(T),T=-1),f=!0;var i=p;try{for(w(n),h=a(c);null!==h&&(!(h.expirationTime>n)||e&&!R());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var s=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof s?h.callback=s:h===a(c)&&r(c),w(n)}else r(c);h=a(c)}if(null!==h)var l=!0;else{var d=a(u);null!==d&&j(S,d.startTime-n),l=!1}return l}finally{h=null,p=i,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,C=!1,E=null,T=-1,I=5,z=-1;function R(){return!(t.unstable_now()-z<I)}function P(){if(null!==E){var e=t.unstable_now();z=e;var n=!0;try{n=E(!0,e)}finally{n?x():(C=!1,E=null)}}else C=!1}if("function"===typeof v)x=function(){v(P)};else if("undefined"!==typeof MessageChannel){var O=new MessageChannel,L=O.port2;O.port1.onmessage=P,x=function(){L.postMessage(null)}}else x=function(){b(P,0)};function A(e){E=e,C||(C=!0,x())}function j(e,n){T=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,A(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,i){var o=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>o?(e.sortIndex=i,n(u,e),null===a(c)&&e===a(u)&&(g?(y(T),T=-1):g=!0,j(S,i-o))):(e.sortIndex=s,n(c,e),m||f||(m=!0,A(k))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},296:function(e,t,n){"use strict";e.exports=n(813)},426:function(e,t,n){var a=n(65);function r(e,t){var n,r=null;if(!e||"string"!==typeof e)return r;for(var i,o,s=a(e),l="function"===typeof t,c=0,u=s.length;c<u;c++)i=(n=s[c]).property,o=n.value,l?t(i,o,n):o&&(r||(r={}),r[i]=o);return r}e.exports=r,e.exports.default=r}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}n.m=e,n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var i=Object.create(null);n.r(i);var o={};e=e||[null,t({}),t([]),t(t)];for(var s=2&r&&a;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((function(e){o[e]=function(){return a[e]}}));return o.default=function(){return a},n.d(i,o),i}}(),n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce((function(t,a){return n.f[a](e,t),t}),[]))},n.u=function(e){return"static/js/"+e+".0c896519.chunk.js"},n.miniCssF=function(e){},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={},t="sc-server-meshing:";n.l=function(a,r,i,o){if(e[a])e[a].push(r);else{var s,l;if(void 0!==i)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+i){s=d;break}}s||(l=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,n.nc&&s.setAttribute("nonce",n.nc),s.setAttribute("data-webpack",t+i),s.src=a),e[a]=[r];var h=function(t,n){s.onerror=s.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],s.parentNode&&s.parentNode.removeChild(s),r&&r.forEach((function(e){return e(n)})),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=h.bind(null,s.onerror),s.onload=h.bind(null,s.onload),l&&document.head.appendChild(s)}}}(),n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/sc-server-meshing/",function(){var e={179:0};n.f.j=function(t,a){var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var i=new Promise((function(n,a){r=e[t]=[n,a]}));a.push(r[2]=i);var o=n.p+n.u(t),s=new Error;n.l(o,(function(a){if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var i=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;s.message="Loading chunk "+t+" failed.\n("+i+": "+o+")",s.name="ChunkLoadError",s.type=i,s.request=o,r[1](s)}}),"chunk-"+t,t)}};var t=function(t,a){var r,i,o=a[0],s=a[1],l=a[2],c=0;if(o.some((function(t){return 0!==e[t]}))){for(r in s)n.o(s,r)&&(n.m[r]=s[r]);if(l)l(n)}for(t&&t(a);c<o.length;c++)i=o[c],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0},a=self.webpackChunksc_server_meshing=self.webpackChunksc_server_meshing||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}(),function(){"use strict";var e={};n.r(e),n.d(e,{attentionMarkers:function(){return ia},contentInitial:function(){return Jn},disable:function(){return oa},document:function(){return Xn},flow:function(){return ta},flowInitial:function(){return ea},insideSpan:function(){return ra},string:function(){return na},text:function(){return aa}});var t={};n.r(t),n.d(t,{boolean:function(){return Xa},booleanish:function(){return Ja},commaOrSpaceSeparated:function(){return rr},commaSeparated:function(){return ar},number:function(){return tr},overloadedBoolean:function(){return er},spaceSeparated:function(){return nr}});var a=n(791),r=n.t(a,2),i=n(250);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function u(e,t){if(e){if("string"===typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function p(e,t,n){return t&&h(e.prototype,t),n&&h(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function m(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function b(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e,t){if(t&&("object"===y(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return v(e)}function S(e){var t=b();return function(){var n,a=g(e);if(t){var r=g(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return w(this,n)}}function k(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var x=n(694),C=n.n(x),E=n(184),T=["xxl","xl","lg","md","sm","xs"],I=a.createContext({prefixes:{},breakpoints:T,minBreakpoint:"xs"});I.Consumer,I.Provider;function z(e,t){var n=(0,a.useContext)(I).prefixes;return e||n[t]||t}var R=["bsPrefix","fluid","as","className"],P=a.forwardRef((function(e,t){var n=e.bsPrefix,a=e.fluid,r=e.as,i=void 0===r?"div":r,o=e.className,s=k(e,R),c=z(n,"container"),u="string"===typeof a?"-".concat(a):"-fluid";return(0,E.jsx)(i,l(l({ref:t},s),{},{className:C()(o,a?"".concat(c).concat(u):c)}))}));P.displayName="Container",P.defaultProps={fluid:!1};var O,L=P;function A(e){if(Array.isArray(e))return e}function j(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function M(e,t){return A(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,r,i=[],o=!0,s=!1;try{for(n=n.call(e);!(o=(a=n.next()).done)&&(i.push(a.value),!t||i.length!==t);o=!0);}catch(l){s=!0,r=l}finally{try{o||null==n.return||n.return()}finally{if(s)throw r}}return i}}(e,t)||u(e,t)||j()}function U(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function D(e){return function(e){if(Array.isArray(e))return c(e)}(e)||U(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function F(e,t,n){return F=b()?Reflect.construct.bind():function(e,t,n){var a=[null];a.push.apply(a,t);var r=new(Function.bind.apply(e,a));return n&&f(r,n.prototype),r},F.apply(null,arguments)}function N(e){var t="function"===typeof Map?new Map:void 0;return N=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return F(e,arguments,g(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),f(a,e)},N(e)}function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},_.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(O||(O={}));var G,H="popstate";function B(e){return{usr:e.state,key:e.key}}function q(e,t,n,a){return void 0===n&&(n=null),_({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?V(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function W(e){var t=e.pathname,n=void 0===t?"/":t,a=e.search,r=void 0===a?"":a,i=e.hash,o=void 0===i?"":i;return r&&"?"!==r&&(n+="?"===r.charAt(0)?r:"?"+r),o&&"#"!==o&&(n+="#"===o.charAt(0)?o:"#"+o),n}function V(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function $(e){var t="undefined"!==typeof window&&"undefined"!==typeof window.location&&"null"!==window.location.origin?window.location.origin:"unknown://unknown",n="string"===typeof e?e:W(e);return new URL(n,t)}function Q(e,t,n,a){void 0===a&&(a={});var r=a,i=r.window,o=void 0===i?document.defaultView:i,s=r.v5Compat,l=void 0!==s&&s,c=o.history,u=O.Pop,d=null;function h(){u=O.Pop,d&&d({action:u,location:p.location})}var p={get action(){return u},get location(){return e(o,c)},listen:function(e){if(d)throw new Error("A history only accepts one active listener");return o.addEventListener(H,h),d=e,function(){o.removeEventListener(H,h),d=null}},createHref:function(e){return t(o,e)},encodeLocation:function(e){var t=$(W(e));return _({},e,{pathname:t.pathname,search:t.search,hash:t.hash})},push:function(e,t){u=O.Push;var a=q(p.location,e,t);n&&n(a,e);var r=B(a),i=p.createHref(a);try{c.pushState(r,"",i)}catch(s){o.location.assign(i)}l&&d&&d({action:u,location:p.location})},replace:function(e,t){u=O.Replace;var a=q(p.location,e,t);n&&n(a,e);var r=B(a),i=p.createHref(a);c.replaceState(r,"",i),l&&d&&d({action:u,location:p.location})},go:function(e){return c.go(e)}};return p}function K(e,t,n){void 0===n&&(n="/");var a=ae(("string"===typeof t?V(t):t).pathname||"/",n);if(null==a)return null;var r=Y(e);!function(e){e.sort((function(e,t){return e.score!==t.score?t.score-e.score:function(e,t){var n=e.length===t.length&&e.slice(0,-1).every((function(e,n){return e===t[n]}));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),t.routesMeta.map((function(e){return e.childrenIndex})))}))}(r);for(var i=null,o=0;null==i&&o<r.length;++o)i=ee(r[o],ne(a));return i}function Y(e,t,n,a){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a=""),e.forEach((function(e,r){var i={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};i.relativePath.startsWith("/")&&(re(i.relativePath.startsWith(a),'Absolute route path "'+i.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),i.relativePath=i.relativePath.slice(a.length));var o=oe([a,i.relativePath]),s=n.concat(i);e.children&&e.children.length>0&&(re(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+o+'".'),Y(e.children,t,s,o)),(null!=e.path||e.index)&&t.push({path:o,score:J(o,e.index),routesMeta:s})})),t}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(G||(G={}));var Z=/^:\w+$/,X=function(e){return"*"===e};function J(e,t){var n=e.split("/"),a=n.length;return n.some(X)&&(a+=-2),t&&(a+=2),n.filter((function(e){return!X(e)})).reduce((function(e,t){return e+(Z.test(t)?3:""===t?1:10)}),a)}function ee(e,t){for(var n=e.routesMeta,a={},r="/",i=[],o=0;o<n.length;++o){var s=n[o],l=o===n.length-1,c="/"===r?t:t.slice(r.length)||"/",u=te({path:s.relativePath,caseSensitive:s.caseSensitive,end:l},c);if(!u)return null;Object.assign(a,u.params);var d=s.route;i.push({params:a,pathname:oe([r,u.pathname]),pathnameBase:se(oe([r,u.pathnameBase])),route:d}),"/"!==u.pathnameBase&&(r=oe([r,u.pathnameBase]))}return i}function te(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var n=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);ie("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');var a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(function(e,t){return a.push(t),"([^\\/]+)"}));e.endsWith("*")?(a.push("*"),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");return[new RegExp(r,t?void 0:"i"),a]}(e.path,e.caseSensitive,e.end),a=M(n,2),r=a[0],i=a[1],o=t.match(r);if(!o)return null;var s=o[0],l=s.replace(/(.)\/+$/,"$1"),c=o.slice(1),u=i.reduce((function(e,t,n){if("*"===t){var a=c[n]||"";l=s.slice(0,s.length-a.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return ie(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(c[n]||"",t),e}),{});return{params:u,pathname:s,pathnameBase:l,pattern:e}}function ne(e){try{return decodeURI(e)}catch(t){return ie(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function ae(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;var n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function re(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function ie(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}var oe=function(e){return e.join("/").replace(/\/\/+/g,"/")},se=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},le=function(e){m(n,e);var t=S(n);function n(){return d(this,n),t.apply(this,arguments)}return p(n)}(N(Error));var ce=p((function e(t,n,a){d(this,e),this.status=t,this.statusText=n||"",this.data=a}));function ue(e){return e instanceof ce}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var de=new Set(["POST","PUT","PATCH","DELETE"]);new Set(["GET","HEAD"].concat(D(de)));function he(){return he=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},he.apply(this,arguments)}var pe="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},fe=a.useState,me=a.useEffect,ge=a.useLayoutEffect,be=a.useDebugValue;function ye(e){var t=e.getSnapshot,n=e.value;try{var a=t();return!pe(n,a)}catch(r){return!0}}"undefined"===typeof window||"undefined"===typeof window.document||window.document.createElement,r.useSyncExternalStore;var ve=a.createContext(null);var we=a.createContext(null);var Se=a.createContext(null);var ke=a.createContext(null);var xe=a.createContext(null);var Ce=a.createContext(null);var Ee=a.createContext({outlet:null,matches:[]});var Te=a.createContext(null);function Ie(){return null!=a.useContext(Ce)}function ze(){return Ie()||re(!1),a.useContext(Ce).location}function Re(){var e=function(){var e,t=a.useContext(Te),n=Me(Oe.UseRouteError),r=a.useContext(Ee),i=r.matches[r.matches.length-1];if(t)return t;return r||re(!1),!i.route.id&&re(!1),null==(e=n.errors)?void 0:e[i.route.id]}(),t=ue(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",i={padding:"0.5rem",backgroundColor:r},o={padding:"2px 4px",backgroundColor:r};return a.createElement(a.Fragment,null,a.createElement("h2",null,"Unhandled Thrown Error!"),a.createElement("h3",{style:{fontStyle:"italic"}},t),n?a.createElement("pre",{style:i},n):null,a.createElement("p",null,"\ud83d\udcbf Hey developer \ud83d\udc4b"),a.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own\xa0",a.createElement("code",{style:o},"errorElement")," props on\xa0",a.createElement("code",{style:o},"<Route>")))}var Pe,Oe,Le=function(e){m(n,e);var t=S(n);function n(e){var a;return d(this,n),(a=t.call(this,e)).state={location:e.location,error:e.error},a}return p(n,[{key:"componentDidCatch",value:function(e,t){console.error("React Router caught the following error during render",e,t)}},{key:"render",value:function(){return this.state.error?a.createElement(Te.Provider,{value:this.state.error,children:this.props.component}):this.props.children}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}},{key:"getDerivedStateFromProps",value:function(e,t){return t.location!==e.location?{error:e.error,location:e.location}:{error:e.error||t.error,location:t.location}}}]),n}(a.Component);function Ae(e){var t=e.routeContext,n=e.match,r=e.children,i=a.useContext(ve);return i&&n.route.errorElement&&(i._deepestRenderedBoundaryId=n.route.id),a.createElement(Ee.Provider,{value:t},r)}function je(e,t,n){if(void 0===t&&(t=[]),null==e){if(null==n||!n.errors)return null;e=n.matches}var r=e,i=null==n?void 0:n.errors;if(null!=i){var o=r.findIndex((function(e){return e.route.id&&(null==i?void 0:i[e.route.id])}));o>=0||re(!1),r=r.slice(0,Math.min(r.length,o+1))}return r.reduceRight((function(e,o,s){var l=o.route.id?null==i?void 0:i[o.route.id]:null,c=n?o.route.errorElement||a.createElement(Re,null):null,u=function(){return a.createElement(Ae,{match:o,routeContext:{outlet:e,matches:t.concat(r.slice(0,s+1))}},l?c:void 0!==o.route.element?o.route.element:e)};return n&&(o.route.errorElement||0===s)?a.createElement(Le,{location:n.location,component:c,error:l,children:u()}):u()}),null)}function Me(e){var t=a.useContext(Se);return t||re(!1),t}!function(e){e.UseRevalidator="useRevalidator"}(Pe||(Pe={})),function(e){e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator"}(Oe||(Oe={}));var Ue;function De(e){re(!1)}function Fe(e){var t=e.basename,n=void 0===t?"/":t,r=e.children,i=void 0===r?null:r,o=e.location,s=e.navigationType,l=void 0===s?O.Pop:s,c=e.navigator,u=e.static,d=void 0!==u&&u;Ie()&&re(!1);var h=n.replace(/^\/*/,"/"),p=a.useMemo((function(){return{basename:h,navigator:c,static:d}}),[h,c,d]);"string"===typeof o&&(o=V(o));var f=o,m=f.pathname,g=void 0===m?"/":m,b=f.search,y=void 0===b?"":b,v=f.hash,w=void 0===v?"":v,S=f.state,k=void 0===S?null:S,x=f.key,C=void 0===x?"default":x,E=a.useMemo((function(){var e=ae(g,h);return null==e?null:{pathname:e,search:y,hash:w,state:k,key:C}}),[h,g,y,w,k,C]);return null==E?null:a.createElement(xe.Provider,{value:p},a.createElement(Ce.Provider,{children:i,value:{location:E,navigationType:l}}))}function Ne(e){var t=e.children,n=e.location,r=a.useContext(we);return function(e,t){Ie()||re(!1);var n,r=a.useContext(Se),i=a.useContext(Ee).matches,o=i[i.length-1],s=o?o.params:{},l=(o&&o.pathname,o?o.pathnameBase:"/"),c=(o&&o.route,ze());if(t){var u,d="string"===typeof t?V(t):t;"/"===l||(null==(u=d.pathname)?void 0:u.startsWith(l))||re(!1),n=d}else n=c;var h=n.pathname||"/",p=K(e,{pathname:"/"===l?h:h.slice(l.length)||"/"}),f=je(p&&p.map((function(e){return Object.assign({},e,{params:Object.assign({},s,e.params),pathname:oe([l,e.pathname]),pathnameBase:"/"===e.pathnameBase?l:oe([l,e.pathnameBase])})})),i,r||void 0);return t&&f?a.createElement(Ce.Provider,{value:{location:he({pathname:"/",search:"",hash:"",state:null,key:"default"},n),navigationType:O.Pop}},f):f}(r&&!t?r.router.routes:Ge(t),n)}!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(Ue||(Ue={}));var _e=new Promise((function(){}));a.Component;function Ge(e,t){void 0===t&&(t=[]);var n=[];return a.Children.forEach(e,(function(e,r){if(a.isValidElement(e))if(e.type!==a.Fragment){e.type!==De&&re(!1),e.props.index&&e.props.children&&re(!1);var i=[].concat(D(t),[r]),o={id:e.props.id||i.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,hasErrorBoundary:null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle};e.props.children&&(o.children=Ge(e.props.children,i)),n.push(o)}else n.push.apply(n,Ge(e.props.children,t))})),n}function He(e){var t,n=e.basename,r=e.children,i=e.window,o=a.useRef();null==o.current&&(o.current=(void 0===(t={window:i,v5Compat:!0})&&(t={}),Q((function(e,t){var n=e.location;return q("",{pathname:n.pathname,search:n.search,hash:n.hash},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:W(t)}),null,t)));var s=o.current,l=M(a.useState({action:s.action,location:s.location}),2),c=l[0],u=l[1];return a.useLayoutEffect((function(){return s.listen(u)}),[s]),a.createElement(Fe,{basename:n,children:r,location:c.location,navigationType:c.action,navigator:s})}var Be,qe;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmitImpl="useSubmitImpl",e.UseFetcher="useFetcher"})(Be||(Be={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(qe||(qe={}));var We=n(586);function Ve(e){return e&&"object"===typeof e?"position"in e||"type"in e?Qe(e.position):"start"in e||"end"in e?Qe(e):"line"in e||"column"in e?$e(e):"":""}function $e(e){return Ke(e&&e.line)+":"+Ke(e&&e.column)}function Qe(e){return $e(e&&e.start)+"-"+$e(e&&e.end)}function Ke(e){return e&&"number"===typeof e?e:1}var Ye=function(e){m(n,e);var t=S(n);function n(e,a,r){var i;d(this,n);var o=[null,null],s={start:{line:null,column:null},end:{line:null,column:null}};if(i=t.call(this),"string"===typeof a&&(r=a,a=void 0),"string"===typeof r){var l=r.indexOf(":");-1===l?o[1]=r:(o[0]=r.slice(0,l),o[1]=r.slice(l+1))}return a&&("type"in a||"position"in a?a.position&&(s=a.position):"start"in a||"end"in a?s=a:("line"in a||"column"in a)&&(s.start=a)),i.name=Ve(a)||"1:1",i.message="object"===typeof e?e.message:e,i.stack="","object"===typeof e&&e.stack&&(i.stack=e.stack),i.reason=i.message,i.fatal,i.line=s.start.line,i.column=s.start.column,i.position=s,i.source=o[0],i.ruleId=o[1],i.file,i.actual,i.expected,i.url,i.note,i}return p(n)}(N(Error));Ye.prototype.file="",Ye.prototype.name="",Ye.prototype.reason="",Ye.prototype.message="",Ye.prototype.stack="",Ye.prototype.fatal=null,Ye.prototype.column=null,Ye.prototype.line=null,Ye.prototype.source=null,Ye.prototype.ruleId=null,Ye.prototype.position=null;var Ze={basename:function(e,t){if(void 0!==t&&"string"!==typeof t)throw new TypeError('"ext" argument must be a string');Je(e);var n,a=0,r=-1,i=e.length;if(void 0===t||0===t.length||t.length>e.length){for(;i--;)if(47===e.charCodeAt(i)){if(n){a=i+1;break}}else r<0&&(n=!0,r=i+1);return r<0?"":e.slice(a,r)}if(t===e)return"";var o=-1,s=t.length-1;for(;i--;)if(47===e.charCodeAt(i)){if(n){a=i+1;break}}else o<0&&(n=!0,o=i+1),s>-1&&(e.charCodeAt(i)===t.charCodeAt(s--)?s<0&&(r=i):(s=-1,r=o));a===r?r=o:r<0&&(r=e.length);return e.slice(a,r)},dirname:function(e){if(Je(e),0===e.length)return".";var t,n=-1,a=e.length;for(;--a;)if(47===e.charCodeAt(a)){if(t){n=a;break}}else t||(t=!0);return n<0?47===e.charCodeAt(0)?"/":".":1===n&&47===e.charCodeAt(0)?"//":e.slice(0,n)},extname:function(e){Je(e);var t,n=e.length,a=-1,r=0,i=-1,o=0;for(;n--;){var s=e.charCodeAt(n);if(47!==s)a<0&&(t=!0,a=n+1),46===s?i<0?i=n:1!==o&&(o=1):i>-1&&(o=-1);else if(t){r=n+1;break}}if(i<0||a<0||0===o||1===o&&i===a-1&&i===r+1)return"";return e.slice(i,a)},join:function(){for(var e,t=-1,n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];for(;++t<a.length;)Je(a[t]),a[t]&&(e=void 0===e?a[t]:e+"/"+a[t]);return void 0===e?".":Xe(e)},sep:"/"};function Xe(e){Je(e);var t=47===e.charCodeAt(0),n=function(e,t){var n,a,r="",i=0,o=-1,s=0,l=-1;for(;++l<=e.length;){if(l<e.length)n=e.charCodeAt(l);else{if(47===n)break;n=47}if(47===n){if(o===l-1||1===s);else if(o!==l-1&&2===s){if(r.length<2||2!==i||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){if((a=r.lastIndexOf("/"))!==r.length-1){a<0?(r="",i=0):i=(r=r.slice(0,a)).length-1-r.lastIndexOf("/"),o=l,s=0;continue}}else if(r.length>0){r="",i=0,o=l,s=0;continue}t&&(r=r.length>0?r+"/..":"..",i=2)}else r.length>0?r+="/"+e.slice(o+1,l):r=e.slice(o+1,l),i=l-o-1;o=l,s=0}else 46===n&&s>-1?s++:s=-1}return r}(e,!t);return 0!==n.length||t||(n="."),n.length>0&&47===e.charCodeAt(e.length-1)&&(n+="/"),t?"/"+n:n}function Je(e){if("string"!==typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}var et={cwd:function(){return"/"}};function tt(e){return null!==e&&"object"===typeof e&&e.href&&e.origin}function nt(e){if("string"===typeof e)e=new URL(e);else if(!tt(e)){var t=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+e+"`");throw t.code="ERR_INVALID_ARG_TYPE",t}if("file:"!==e.protocol){var n=new TypeError("The URL must be of scheme file");throw n.code="ERR_INVALID_URL_SCHEME",n}return function(e){if(""!==e.hostname){var t=new TypeError('File URL host must be "localhost" or empty on darwin');throw t.code="ERR_INVALID_FILE_URL_HOST",t}var n=e.pathname,a=-1;for(;++a<n.length;)if(37===n.charCodeAt(a)&&50===n.charCodeAt(a+1)){var r=n.charCodeAt(a+2);if(70===r||102===r){var i=new TypeError("File URL path must not include encoded / characters");throw i.code="ERR_INVALID_FILE_URL_PATH",i}}return decodeURIComponent(n)}(e)}var at=["history","path","basename","stem","extname","dirname"],rt=function(){function e(t){var n;d(this,e),n=t?"string"===typeof t||function(e){return We(e)}(t)?{value:t}:tt(t)?{path:t}:t:{},this.data={},this.messages=[],this.history=[],this.cwd=et.cwd(),this.value,this.stored,this.result,this.map;for(var a,r=-1;++r<at.length;){var i=at[r];i in n&&void 0!==n[i]&&null!==n[i]&&(this[i]="history"===i?D(n[i]):n[i])}for(a in n)at.includes(a)||(this[a]=n[a])}return p(e,[{key:"path",get:function(){return this.history[this.history.length-1]},set:function(e){tt(e)&&(e=nt(e)),ot(e,"path"),this.path!==e&&this.history.push(e)}},{key:"dirname",get:function(){return"string"===typeof this.path?Ze.dirname(this.path):void 0},set:function(e){st(this.basename,"dirname"),this.path=Ze.join(e||"",this.basename)}},{key:"basename",get:function(){return"string"===typeof this.path?Ze.basename(this.path):void 0},set:function(e){ot(e,"basename"),it(e,"basename"),this.path=Ze.join(this.dirname||"",e)}},{key:"extname",get:function(){return"string"===typeof this.path?Ze.extname(this.path):void 0},set:function(e){if(it(e,"extname"),st(this.dirname,"extname"),e){if(46!==e.charCodeAt(0))throw new Error("`extname` must start with `.`");if(e.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=Ze.join(this.dirname,this.stem+(e||""))}},{key:"stem",get:function(){return"string"===typeof this.path?Ze.basename(this.path,this.extname):void 0},set:function(e){ot(e,"stem"),it(e,"stem"),this.path=Ze.join(this.dirname||"",e+(this.extname||""))}},{key:"toString",value:function(e){return(this.value||"").toString(e||void 0)}},{key:"message",value:function(e,t,n){var a=new Ye(e,t,n);return this.path&&(a.name=this.path+":"+a.name,a.file=this.path),a.fatal=!1,this.messages.push(a),a}},{key:"info",value:function(e,t,n){var a=this.message(e,t,n);return a.fatal=null,a}},{key:"fail",value:function(e,t,n){var a=this.message(e,t,n);throw a.fatal=!0,a}}]),e}();function it(e,t){if(e&&e.includes(Ze.sep))throw new Error("`"+t+"` cannot be a path: did not expect `"+Ze.sep+"`")}function ot(e,t){if(!e)throw new Error("`"+t+"` cannot be empty")}function st(e,t){if(!e)throw new Error("Setting `"+t+"` requires `path` to be set too")}function lt(e){return A(e)||U(e)||u(e)||j()}function ct(e){if(e)throw e}var ut=n(132);function dt(e){if("object"!==typeof e||null===e)return!1;var t=Object.getPrototypeOf(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function ht(e,t){var n;return function(){for(var t=arguments.length,i=new Array(t),o=0;o<t;o++)i[o]=arguments[o];var s,l=e.length>i.length;l&&i.push(a);try{s=e.apply(this,i)}catch(u){var c=u;if(l&&n)throw c;return a(c)}l||(s instanceof Promise?s.then(r,a):s instanceof Error?a(s):r(s))};function a(e){if(!n){n=!0;for(var a=arguments.length,r=new Array(a>1?a-1:0),i=1;i<a;i++)r[i-1]=arguments[i];t.apply(void 0,[e].concat(r))}}function r(e){a(null,e)}}var pt=function e(){var t,n=function(){var e=[],t={run:function(){for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];var r=-1,i=n.pop();if("function"!==typeof i)throw new TypeError("Expected function as last argument, not "+i);function o(t){var a=e[++r],s=-1;if(t)i(t);else{for(var l=arguments.length,c=new Array(l>1?l-1:0),u=1;u<l;u++)c[u-1]=arguments[u];for(;++s<n.length;)null!==c[s]&&void 0!==c[s]||(c[s]=n[s]);n=c,a?ht(a,o).apply(void 0,c):i.apply(void 0,[null].concat(c))}}o.apply(void 0,[null].concat(D(n)))},use:function(n){if("function"!==typeof n)throw new TypeError("Expected `middelware` to be a function, not "+n);return e.push(n),t}};return t}(),a=[],r={},i=-1;return o.data=function(e,n){if("string"===typeof e)return 2===arguments.length?(yt("data",t),r[e]=n,o):ft.call(r,e)&&r[e]||null;if(e)return yt("data",t),r=e,o;return r},o.Parser=void 0,o.Compiler=void 0,o.freeze=function(){if(t)return o;for(;++i<a.length;){var e=lt(a[i]),r=e[0],s=e.slice(1);if(!1!==s[0]){!0===s[0]&&(s[0]=void 0);var l=r.call.apply(r,[o].concat(D(s)));"function"===typeof l&&n.use(l)}}return t=!0,i=Number.POSITIVE_INFINITY,o},o.attachers=a,o.use=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),s=1;s<n;s++)i[s-1]=arguments[s];var l;if(yt("use",t),null===e||void 0===e);else if("function"===typeof e)h.apply(void 0,[e].concat(i));else{if("object"!==typeof e)throw new TypeError("Expected usable value, not `"+e+"`");Array.isArray(e)?d(e):u(e)}l&&(r.settings=Object.assign(r.settings||{},l));return o;function c(e){if("function"===typeof e)h(e);else{if("object"!==typeof e)throw new TypeError("Expected usable value, not `"+e+"`");if(Array.isArray(e)){var t=lt(e),n=t[0],a=t.slice(1);h.apply(void 0,[n].concat(D(a)))}else u(e)}}function u(e){d(e.plugins),e.settings&&(l=Object.assign(l||{},e.settings))}function d(e){var t=-1;if(null===e||void 0===e);else{if(!Array.isArray(e))throw new TypeError("Expected a list of plugins, not `"+e+"`");for(;++t<e.length;){c(e[t])}}}function h(e,t){for(var n,r=-1;++r<a.length;)if(a[r][0]===e){n=a[r];break}n?(dt(n[1])&&dt(t)&&(t=ut(!0,n[1],t)),n[1]=t):a.push(Array.prototype.slice.call(arguments))}},o.parse=function(e){o.freeze();var t=St(e),n=o.Parser;if(gt("parse",n),mt(n,"parse"))return new n(String(t),t).parse();return n(String(t),t)},o.stringify=function(e,t){o.freeze();var n=St(t),a=o.Compiler;if(bt("stringify",a),vt(e),mt(a,"compile"))return new a(e,n).compile();return a(e,n)},o.run=function(e,t,a){vt(e),o.freeze(),a||"function"!==typeof t||(a=t,t=void 0);if(!a)return new Promise(r);function r(r,i){function o(t,n,o){n=n||e,t?i(t):r?r(n):a(null,n,o)}n.run(e,St(t),o)}r(null,a)},o.runSync=function(e,t){var n,a;return o.run(e,t,r),wt("runSync","run",a),n;function r(e,t){ct(e),n=t,a=!0}},o.process=function(e,t){if(o.freeze(),gt("process",o.Parser),bt("process",o.Compiler),!t)return new Promise(n);function n(n,a){var r=St(e);function i(e,r){e||!r?a(e):n?n(r):t(null,r)}o.run(o.parse(r),r,(function(e,t,n){if(!e&&t&&n){var a=o.stringify(t,n);void 0===a||null===a||("string"===typeof(r=a)||We(r)?n.value=a:n.result=a),i(e,n)}else i(e);var r}))}n(null,t)},o.processSync=function(e){var t;o.freeze(),gt("processSync",o.Parser),bt("processSync",o.Compiler);var n=St(e);return o.process(n,a),wt("processSync","process",t),n;function a(e){t=!0,ct(e)}},o;function o(){for(var t=e(),n=-1;++n<a.length;)t.use.apply(t,D(a[n]));return t.data(ut(!0,{},r)),t}}().freeze(),ft={}.hasOwnProperty;function mt(e,t){return"function"===typeof e&&e.prototype&&(function(e){var t;for(t in e)if(ft.call(e,t))return!0;return!1}(e.prototype)||t in e.prototype)}function gt(e,t){if("function"!==typeof t)throw new TypeError("Cannot `"+e+"` without `Parser`")}function bt(e,t){if("function"!==typeof t)throw new TypeError("Cannot `"+e+"` without `Compiler`")}function yt(e,t){if(t)throw new Error("Cannot call `"+e+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function vt(e){if(!dt(e)||"string"!==typeof e.type)throw new TypeError("Expected node, got `"+e+"`")}function wt(e,t,n){if(!n)throw new Error("`"+e+"` finished async. Use `"+t+"` instead")}function St(e){return function(e){return Boolean(e&&"object"===typeof e&&"message"in e&&"messages"in e)}(e)?e:new rt(e)}function kt(e,t){return function(e){return Boolean(e&&"object"===typeof e)}(e)&&("value"in e&&e.value||t&&"alt"in e&&e.alt||"children"in e&&xt(e.children,t))||Array.isArray(e)&&xt(e,t)||""}function xt(e,t){for(var n=[],a=-1;++a<e.length;)n[a]=kt(e[a],t);return n.join("")}function Ct(e,t,n,a){var r,i=e.length,o=0;if(t=t<0?-t>i?0:i+t:t>i?i:t,n=n>0?n:0,a.length<1e4)(r=Array.from(a)).unshift(t,n),[].splice.apply(e,r);else for(n&&[].splice.apply(e,[t,n]);o<a.length;)(r=a.slice(o,o+1e4)).unshift(t,0),[].splice.apply(e,r),o+=1e4,t+=1e4}function Et(e,t){return e.length>0?(Ct(e,e.length,0,t),e):t}var Tt={}.hasOwnProperty;function It(e){for(var t={},n=-1;++n<e.length;)zt(t,e[n]);return t}function zt(e,t){var n;for(n in t){var a=(Tt.call(e,n)?e[n]:void 0)||(e[n]={}),r=t[n],i=void 0;for(i in r){Tt.call(a,i)||(a[i]=[]);var o=r[i];Rt(a[i],Array.isArray(o)?o:o?[o]:[])}}}function Rt(e,t){for(var n=-1,a=[];++n<t.length;)("after"===t[n].add?e:a).push(t[n]);Ct(e,0,0,a)}var Pt=Ht(/[A-Za-z]/),Ot=Ht(/\d/),Lt=Ht(/[\dA-Fa-f]/),At=Ht(/[\dA-Za-z]/),jt=Ht(/[!-/:-@[-`{-~]/),Mt=Ht(/[#-'*+\--9=?A-Z^-~]/);function Ut(e){return null!==e&&(e<32||127===e)}function Dt(e){return null!==e&&(e<0||32===e)}function Ft(e){return null!==e&&e<-2}function Nt(e){return-2===e||-1===e||32===e}var _t=Ht(/\s/),Gt=Ht(/[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/);function Ht(e){return function(t){return null!==t&&e.test(String.fromCharCode(t))}}function Bt(e,t,n,a){var r=a?a-1:Number.POSITIVE_INFINITY,i=0;return function(a){if(Nt(a))return e.enter(n),o(a);return t(a)};function o(a){return Nt(a)&&i++<r?(e.consume(a),o):(e.exit(n),t(a))}}var qt={tokenize:function(e){var t,n=e.attempt(this.parser.constructs.contentInitial,(function(t){if(null===t)return void e.consume(t);return e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),Bt(e,n,"linePrefix")}),(function(t){return e.enter("paragraph"),a(t)}));return n;function a(n){var a=e.enter("chunkText",{contentType:"text",previous:t});return t&&(t.next=a),t=a,r(n)}function r(t){return null===t?(e.exit("chunkText"),e.exit("paragraph"),void e.consume(t)):Ft(t)?(e.consume(t),e.exit("chunkText"),a):(e.consume(t),r)}}};var Wt={tokenize:function(e){var t,n,a,r=this,i=[],o=0;return s;function s(t){if(o<i.length){var n=i[o];return r.containerState=n[1],e.attempt(n[0].continuation,l,c)(t)}return c(t)}function l(e){if(o++,r.containerState._closeFlow){r.containerState._closeFlow=void 0,t&&y();for(var n,a=r.events.length,i=a;i--;)if("exit"===r.events[i][0]&&"chunkFlow"===r.events[i][1].type){n=r.events[i][1].end;break}b(o);for(var l=a;l<r.events.length;)r.events[l][1].end=Object.assign({},n),l++;return Ct(r.events,i+1,0,r.events.slice(a)),r.events.length=l,c(e)}return s(e)}function c(n){if(o===i.length){if(!t)return h(n);if(t.currentConstruct&&t.currentConstruct.concrete)return f(n);r.interrupt=Boolean(t.currentConstruct&&!t._gfmTableDynamicInterruptHack)}return r.containerState={},e.check(Vt,u,d)(n)}function u(e){return t&&y(),b(o),h(e)}function d(e){return r.parser.lazy[r.now().line]=o!==i.length,a=r.now().offset,f(e)}function h(t){return r.containerState={},e.attempt(Vt,p,f)(t)}function p(e){return o++,i.push([r.currentConstruct,r.containerState]),h(e)}function f(a){return null===a?(t&&y(),b(0),void e.consume(a)):(t=t||r.parser.flow(r.now()),e.enter("chunkFlow",{contentType:"flow",previous:n,_tokenizer:t}),m(a))}function m(t){return null===t?(g(e.exit("chunkFlow"),!0),b(0),void e.consume(t)):Ft(t)?(e.consume(t),g(e.exit("chunkFlow")),o=0,r.interrupt=void 0,s):(e.consume(t),m)}function g(e,i){var s=r.sliceStream(e);if(i&&s.push(null),e.previous=n,n&&(n.next=e),n=e,t.defineSkip(e.start),t.write(s),r.parser.lazy[e.start.line]){for(var l=t.events.length;l--;)if(t.events[l][1].start.offset<a&&(!t.events[l][1].end||t.events[l][1].end.offset>a))return;for(var c,u,d=r.events.length,h=d;h--;)if("exit"===r.events[h][0]&&"chunkFlow"===r.events[h][1].type){if(c){u=r.events[h][1].end;break}c=!0}for(b(o),l=d;l<r.events.length;)r.events[l][1].end=Object.assign({},u),l++;Ct(r.events,h+1,0,r.events.slice(d)),r.events.length=l}}function b(t){for(var n=i.length;n-- >t;){var a=i[n];r.containerState=a[1],a[0].exit.call(r,e)}i.length=t}function y(){t.write([null]),n=void 0,t=void 0,r.containerState._closeFlow=void 0}}},Vt={tokenize:function(e,t,n){return Bt(e,e.attempt(this.parser.constructs.document,t,n),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}};var $t={tokenize:function(e,t,n){return Bt(e,(function(e){return null===e||Ft(e)?t(e):n(e)}),"linePrefix")},partial:!0};function Qt(e){for(var t,n,a,r,i,o,s,l={},c=-1;++c<e.length;){for(;c in l;)c=l[c];if(t=e[c],c&&"chunkFlow"===t[1].type&&"listItemPrefix"===e[c-1][1].type&&((a=0)<(o=t[1]._tokenizer.events).length&&"lineEndingBlank"===o[a][1].type&&(a+=2),a<o.length&&"content"===o[a][1].type))for(;++a<o.length&&"content"!==o[a][1].type;)"chunkText"===o[a][1].type&&(o[a][1]._isInFirstContentOfListItem=!0,a++);if("enter"===t[0])t[1].contentType&&(Object.assign(l,Kt(e,c)),c=l[c],s=!0);else if(t[1]._container){for(a=c,n=void 0;a--&&("lineEnding"===(r=e[a])[1].type||"lineEndingBlank"===r[1].type);)"enter"===r[0]&&(n&&(e[n][1].type="lineEndingBlank"),r[1].type="lineEnding",n=a);n&&(t[1].end=Object.assign({},e[n][1].start),(i=e.slice(n,c)).unshift(t),Ct(e,n,c-n+1,i))}}return!s}function Kt(e,t){for(var n,a,r=e[t][1],i=e[t][2],o=t-1,s=[],l=r._tokenizer||i.parser[r.contentType](r.start),c=l.events,u=[],d={},h=-1,p=r,f=0,m=0,g=[m];p;){for(;e[++o][1]!==p;);s.push(o),p._tokenizer||(n=i.sliceStream(p),p.next||n.push(null),a&&l.defineSkip(p.start),p._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=!0),l.write(n),p._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=void 0)),a=p,p=p.next}for(p=r;++h<c.length;)"exit"===c[h][0]&&"enter"===c[h-1][0]&&c[h][1].type===c[h-1][1].type&&c[h][1].start.line!==c[h][1].end.line&&(m=h+1,g.push(m),p._tokenizer=void 0,p.previous=void 0,p=p.next);for(l.events=[],p?(p._tokenizer=void 0,p.previous=void 0):g.pop(),h=g.length;h--;){var b=c.slice(g[h],g[h+1]),y=s.pop();u.unshift([y,y+b.length-1]),Ct(e,y,2,b)}for(h=-1;++h<u.length;)d[f+u[h][0]]=f+u[h][1],f+=u[h][1]-u[h][0]-1;return d}var Yt={tokenize:function(e,t){var n;return function(t){return e.enter("content"),n=e.enter("chunkContent",{contentType:"content"}),a(t)};function a(t){return null===t?r(t):Ft(t)?e.check(Zt,i,r)(t):(e.consume(t),a)}function r(n){return e.exit("chunkContent"),e.exit("content"),t(n)}function i(t){return e.consume(t),e.exit("chunkContent"),n.next=e.enter("chunkContent",{contentType:"content",previous:n}),n=n.next,a}},resolve:function(e){return Qt(e),e}},Zt={tokenize:function(e,t,n){var a=this;return function(t){return e.exit("chunkContent"),e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),Bt(e,r,"linePrefix")};function r(r){if(null===r||Ft(r))return n(r);var i=a.events[a.events.length-1];return!a.parser.constructs.disable.null.includes("codeIndented")&&i&&"linePrefix"===i[1].type&&i[2].sliceSerialize(i[1],!0).length>=4?t(r):e.interrupt(a.parser.constructs.flow,n,t)(r)}},partial:!0};var Xt={tokenize:function(e){var t=this,n=e.attempt($t,(function(a){if(null===a)return void e.consume(a);return e.enter("lineEndingBlank"),e.consume(a),e.exit("lineEndingBlank"),t.currentConstruct=void 0,n}),e.attempt(this.parser.constructs.flowInitial,a,Bt(e,e.attempt(this.parser.constructs.flow,a,e.attempt(Yt,a)),"linePrefix")));return n;function a(a){if(null!==a)return e.enter("lineEnding"),e.consume(a),e.exit("lineEnding"),t.currentConstruct=void 0,n;e.consume(a)}}};var Jt={resolveAll:an()},en=nn("string"),tn=nn("text");function nn(e){return{tokenize:function(t){var n=this,a=this.parser.constructs[e],r=t.attempt(a,i,o);return i;function i(e){return l(e)?r(e):o(e)}function o(e){if(null!==e)return t.enter("data"),t.consume(e),s;t.consume(e)}function s(e){return l(e)?(t.exit("data"),r(e)):(t.consume(e),s)}function l(e){if(null===e)return!0;var t=a[e],r=-1;if(t)for(;++r<t.length;){var i=t[r];if(!i.previous||i.previous.call(n,n.previous))return!0}return!1}},resolveAll:an("text"===e?rn:void 0)}}function an(e){return function(t,n){var a,r=-1;for(;++r<=t.length;)void 0===a?t[r]&&"data"===t[r][1].type&&(a=r,r++):t[r]&&"data"===t[r][1].type||(r!==a+2&&(t[a][1].end=t[r-1][1].end,t.splice(a+2,r-a-2),r=a+2),a=void 0);return e?e(t,n):t}}function rn(e,t){for(var n=0;++n<=e.length;)if((n===e.length||"lineEnding"===e[n][1].type)&&"data"===e[n-1][1].type){for(var a=e[n-1][1],r=t.sliceStream(a),i=r.length,o=-1,s=0,l=void 0;i--;){var c=r[i];if("string"===typeof c){for(o=c.length;32===c.charCodeAt(o-1);)s++,o--;if(o)break;o=-1}else if(-2===c)l=!0,s++;else if(-1!==c){i++;break}}if(s){var u={type:n===e.length||l||s<2?"lineSuffix":"hardBreakTrailing",start:{line:a.end.line,column:a.end.column-s,offset:a.end.offset-s,_index:a.start._index+i,_bufferIndex:i?o:a.start._bufferIndex+o},end:Object.assign({},a.end)};a.end=Object.assign({},u.start),a.start.offset===a.end.offset?Object.assign(a,u):(e.splice(n,0,["enter",u,t],["exit",u,t]),n+=2)}n++}return e}function on(e,t,n){for(var a=[],r=-1;++r<e.length;){var i=e[r].resolveAll;i&&!a.includes(i)&&(t=i(t,n),a.push(i))}return t}function sn(e,t,n){var a=Object.assign(n?Object.assign({},n):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1}),r={},i=[],o=[],s=[],l={consume:function(e){Ft(e)?(a.line++,a.column=1,a.offset+=-3===e?2:1,y()):-1!==e&&(a.column++,a.offset++);a._bufferIndex<0?a._index++:(a._bufferIndex++,a._bufferIndex===o[a._index].length&&(a._bufferIndex=-1,a._index++));c.previous=e,!0},enter:function(e,t){var n=t||{};return n.type=e,n.start=h(),c.events.push(["enter",n,c]),s.push(n),n},exit:function(e){var t=s.pop();return t.end=h(),c.events.push(["exit",t,c]),t},attempt:g((function(e,t){b(e,t.from)})),check:g(m),interrupt:g(m,{interrupt:!0})},c={previous:null,code:null,containerState:{},events:[],parser:e,sliceStream:d,sliceSerialize:function(e,t){return function(e,t){var n,a=-1,r=[];for(;++a<e.length;){var i=e[a],o=void 0;if("string"===typeof i)o=i;else switch(i){case-5:o="\r";break;case-4:o="\n";break;case-3:o="\r\n";break;case-2:o=t?" ":"\t";break;case-1:if(!t&&n)continue;o=" ";break;default:o=String.fromCharCode(i)}n=-2===i,r.push(o)}return r.join("")}(d(e),t)},now:h,defineSkip:function(e){r[e.line]=e.column,y()},write:function(e){if(o=Et(o,e),p(),null!==o[o.length-1])return[];return b(t,0),c.events=on(i,c.events,c),c.events}},u=t.tokenize.call(c,l);return t.resolveAll&&i.push(t),c;function d(e){return function(e,t){var n,a=t.start._index,r=t.start._bufferIndex,i=t.end._index,o=t.end._bufferIndex;a===i?n=[e[a].slice(r,o)]:(n=e.slice(a,i),r>-1&&(n[0]=n[0].slice(r)),o>0&&n.push(e[i].slice(0,o)));return n}(o,e)}function h(){return Object.assign({},a)}function p(){for(var e;a._index<o.length;){var t=o[a._index];if("string"===typeof t)for(e=a._index,a._bufferIndex<0&&(a._bufferIndex=0);a._index===e&&a._bufferIndex<t.length;)f(t.charCodeAt(a._bufferIndex));else f(t)}}function f(e){void 0,e,u=u(e)}function m(e,t){t.restore()}function g(e,t){return function(n,r,i){var o,u,d,p;return Array.isArray(n)?f(n):"tokenize"in n?f([n]):function(e){return t;function t(t){var n=null!==t&&e[t],a=null!==t&&e.null;return f([].concat(D(Array.isArray(n)?n:n?[n]:[]),D(Array.isArray(a)?a:a?[a]:[])))(t)}}(n);function f(e){return o=e,u=0,0===e.length?i:m(e[u])}function m(e){return function(n){p=function(){var e=h(),t=c.previous,n=c.currentConstruct,r=c.events.length,i=Array.from(s);return{restore:o,from:r};function o(){a=e,c.previous=t,c.currentConstruct=n,c.events.length=r,s=i,y()}}(),d=e,e.partial||(c.currentConstruct=e);if(e.name&&c.parser.constructs.disable.null.includes(e.name))return b(n);return e.tokenize.call(t?Object.assign(Object.create(c),t):c,l,g,b)(n)}}function g(t){return!0,e(d,p),r}function b(e){return!0,p.restore(),++u<o.length?m(o[u]):i}}}function b(e,t){e.resolveAll&&!i.includes(e)&&i.push(e),e.resolve&&Ct(c.events,t,c.events.length-t,e.resolve(c.events.slice(t),c)),e.resolveTo&&(c.events=e.resolveTo(c.events,c))}function y(){a.line in r&&a.column<2&&(a.column=r[a.line],a.offset+=r[a.line]-1)}}var ln={name:"thematicBreak",tokenize:function(e,t,n){var a,r=0;return function(t){return e.enter("thematicBreak"),a=t,i(t)};function i(s){return s===a?(e.enter("thematicBreakSequence"),o(s)):Nt(s)?Bt(e,i,"whitespace")(s):r<3||null!==s&&!Ft(s)?n(s):(e.exit("thematicBreak"),t(s))}function o(t){return t===a?(e.consume(t),r++,o):(e.exit("thematicBreakSequence"),i(t))}}};var cn={name:"list",tokenize:function(e,t,n){var a=this,r=a.events[a.events.length-1],i=r&&"linePrefix"===r[1].type?r[2].sliceSerialize(r[1],!0).length:0,o=0;return function(t){var r=a.containerState.type||(42===t||43===t||45===t?"listUnordered":"listOrdered");if("listUnordered"===r?!a.containerState.marker||t===a.containerState.marker:Ot(t)){if(a.containerState.type||(a.containerState.type=r,e.enter(r,{_container:!0})),"listUnordered"===r)return e.enter("listItemPrefix"),42===t||45===t?e.check(ln,n,l)(t):l(t);if(!a.interrupt||49===t)return e.enter("listItemPrefix"),e.enter("listItemValue"),s(t)}return n(t)};function s(t){return Ot(t)&&++o<10?(e.consume(t),s):(!a.interrupt||o<2)&&(a.containerState.marker?t===a.containerState.marker:41===t||46===t)?(e.exit("listItemValue"),l(t)):n(t)}function l(t){return e.enter("listItemMarker"),e.consume(t),e.exit("listItemMarker"),a.containerState.marker=a.containerState.marker||t,e.check($t,a.interrupt?n:c,e.attempt(un,d,u))}function c(e){return a.containerState.initialBlankLine=!0,i++,d(e)}function u(t){return Nt(t)?(e.enter("listItemPrefixWhitespace"),e.consume(t),e.exit("listItemPrefixWhitespace"),d):n(t)}function d(n){return a.containerState.size=i+a.sliceSerialize(e.exit("listItemPrefix"),!0).length,t(n)}},continuation:{tokenize:function(e,t,n){var a=this;return a.containerState._closeFlow=void 0,e.check($t,r,i);function r(n){return a.containerState.furtherBlankLines=a.containerState.furtherBlankLines||a.containerState.initialBlankLine,Bt(e,t,"listItemIndent",a.containerState.size+1)(n)}function i(n){return a.containerState.furtherBlankLines||!Nt(n)?(a.containerState.furtherBlankLines=void 0,a.containerState.initialBlankLine=void 0,o(n)):(a.containerState.furtherBlankLines=void 0,a.containerState.initialBlankLine=void 0,e.attempt(dn,t,o)(n))}function o(r){return a.containerState._closeFlow=!0,a.interrupt=void 0,Bt(e,e.attempt(cn,t,n),"linePrefix",a.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(r)}}},exit:function(e){e.exit(this.containerState.type)}},un={tokenize:function(e,t,n){var a=this;return Bt(e,(function(e){var r=a.events[a.events.length-1];return!Nt(e)&&r&&"listItemPrefixWhitespace"===r[1].type?t(e):n(e)}),"listItemPrefixWhitespace",a.parser.constructs.disable.null.includes("codeIndented")?void 0:5)},partial:!0},dn={tokenize:function(e,t,n){var a=this;return Bt(e,(function(e){var r=a.events[a.events.length-1];return r&&"listItemIndent"===r[1].type&&r[2].sliceSerialize(r[1],!0).length===a.containerState.size?t(e):n(e)}),"listItemIndent",a.containerState.size+1)},partial:!0};var hn={name:"blockQuote",tokenize:function(e,t,n){var a=this;return function(t){if(62===t){var i=a.containerState;return i.open||(e.enter("blockQuote",{_container:!0}),i.open=!0),e.enter("blockQuotePrefix"),e.enter("blockQuoteMarker"),e.consume(t),e.exit("blockQuoteMarker"),r}return n(t)};function r(n){return Nt(n)?(e.enter("blockQuotePrefixWhitespace"),e.consume(n),e.exit("blockQuotePrefixWhitespace"),e.exit("blockQuotePrefix"),t):(e.exit("blockQuotePrefix"),t(n))}},continuation:{tokenize:function(e,t,n){return Bt(e,e.attempt(hn,t,n),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}},exit:function(e){e.exit("blockQuote")}};function pn(e,t,n,a,r,i,o,s,l){var c=l||Number.POSITIVE_INFINITY,u=0;return function(t){if(60===t)return e.enter(a),e.enter(r),e.enter(i),e.consume(t),e.exit(i),d;if(null===t||41===t||Ut(t))return n(t);return e.enter(a),e.enter(o),e.enter(s),e.enter("chunkString",{contentType:"string"}),f(t)};function d(n){return 62===n?(e.enter(i),e.consume(n),e.exit(i),e.exit(r),e.exit(a),t):(e.enter(s),e.enter("chunkString",{contentType:"string"}),h(n))}function h(t){return 62===t?(e.exit("chunkString"),e.exit(s),d(t)):null===t||60===t||Ft(t)?n(t):(e.consume(t),92===t?p:h)}function p(t){return 60===t||62===t||92===t?(e.consume(t),h):h(t)}function f(r){return 40===r?++u>c?n(r):(e.consume(r),f):41===r?u--?(e.consume(r),f):(e.exit("chunkString"),e.exit(s),e.exit(o),e.exit(a),t(r)):null===r||Dt(r)?u?n(r):(e.exit("chunkString"),e.exit(s),e.exit(o),e.exit(a),t(r)):Ut(r)?n(r):(e.consume(r),92===r?m:f)}function m(t){return 40===t||41===t||92===t?(e.consume(t),f):f(t)}}function fn(e,t,n,a,r,i){var o,s=this,l=0;return function(t){return e.enter(a),e.enter(r),e.consume(t),e.exit(r),e.enter(i),c};function c(d){return null===d||91===d||93===d&&!o||94===d&&!l&&"_hiddenFootnoteSupport"in s.parser.constructs||l>999?n(d):93===d?(e.exit(i),e.enter(r),e.consume(d),e.exit(r),e.exit(a),t):Ft(d)?(e.enter("lineEnding"),e.consume(d),e.exit("lineEnding"),c):(e.enter("chunkString",{contentType:"string"}),u(d))}function u(t){return null===t||91===t||93===t||Ft(t)||l++>999?(e.exit("chunkString"),c(t)):(e.consume(t),o=o||!Nt(t),92===t?d:u)}function d(t){return 91===t||92===t||93===t?(e.consume(t),l++,u):u(t)}}function mn(e,t,n,a,r,i){var o;return function(t){return e.enter(a),e.enter(r),e.consume(t),e.exit(r),o=40===t?41:t,s};function s(n){return n===o?(e.enter(r),e.consume(n),e.exit(r),e.exit(a),t):(e.enter(i),l(n))}function l(t){return t===o?(e.exit(i),s(o)):null===t?n(t):Ft(t)?(e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),Bt(e,l,"linePrefix")):(e.enter("chunkString",{contentType:"string"}),c(t))}function c(t){return t===o||null===t||Ft(t)?(e.exit("chunkString"),l(t)):(e.consume(t),92===t?u:c)}function u(t){return t===o||92===t?(e.consume(t),c):c(t)}}function gn(e,t){var n;return function a(r){if(Ft(r))return e.enter("lineEnding"),e.consume(r),e.exit("lineEnding"),n=!0,a;if(Nt(r))return Bt(e,a,n?"linePrefix":"lineSuffix")(r);return t(r)}}function bn(e){return e.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}var yn={name:"definition",tokenize:function(e,t,n){var a,r=this;return function(t){return e.enter("definition"),fn.call(r,e,i,n,"definitionLabel","definitionLabelMarker","definitionLabelString")(t)};function i(t){return a=bn(r.sliceSerialize(r.events[r.events.length-1][1]).slice(1,-1)),58===t?(e.enter("definitionMarker"),e.consume(t),e.exit("definitionMarker"),gn(e,pn(e,e.attempt(vn,Bt(e,o,"whitespace"),Bt(e,o,"whitespace")),n,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString"))):n(t)}function o(i){return null===i||Ft(i)?(e.exit("definition"),r.parser.defined.includes(a)||r.parser.defined.push(a),t(i)):n(i)}}},vn={tokenize:function(e,t,n){return function(t){return Dt(t)?gn(e,a)(t):n(t)};function a(t){return 34===t||39===t||40===t?mn(e,Bt(e,r,"whitespace"),n,"definitionTitle","definitionTitleMarker","definitionTitleString")(t):n(t)}function r(e){return null===e||Ft(e)?t(e):n(e)}},partial:!0};var wn={name:"codeIndented",tokenize:function(e,t,n){var a=this;return function(t){return e.enter("codeIndented"),Bt(e,r,"linePrefix",5)(t)};function r(e){var t=a.events[a.events.length-1];return t&&"linePrefix"===t[1].type&&t[2].sliceSerialize(t[1],!0).length>=4?i(e):n(e)}function i(t){return null===t?s(t):Ft(t)?e.attempt(Sn,i,s)(t):(e.enter("codeFlowValue"),o(t))}function o(t){return null===t||Ft(t)?(e.exit("codeFlowValue"),i(t)):(e.consume(t),o)}function s(n){return e.exit("codeIndented"),t(n)}}},Sn={tokenize:function(e,t,n){var a=this;return r;function r(t){return a.parser.lazy[a.now().line]?n(t):Ft(t)?(e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),r):Bt(e,i,"linePrefix",5)(t)}function i(e){var i=a.events[a.events.length-1];return i&&"linePrefix"===i[1].type&&i[2].sliceSerialize(i[1],!0).length>=4?t(e):Ft(e)?r(e):n(e)}},partial:!0};var kn={name:"headingAtx",tokenize:function(e,t,n){var a=this,r=0;return function(t){return e.enter("atxHeading"),e.enter("atxHeadingSequence"),i(t)};function i(s){return 35===s&&r++<6?(e.consume(s),i):null===s||Dt(s)?(e.exit("atxHeadingSequence"),a.interrupt?t(s):o(s)):n(s)}function o(n){return 35===n?(e.enter("atxHeadingSequence"),s(n)):null===n||Ft(n)?(e.exit("atxHeading"),t(n)):Nt(n)?Bt(e,o,"whitespace")(n):(e.enter("atxHeadingText"),l(n))}function s(t){return 35===t?(e.consume(t),s):(e.exit("atxHeadingSequence"),o(t))}function l(t){return null===t||35===t||Dt(t)?(e.exit("atxHeadingText"),o(t)):(e.consume(t),l)}},resolve:function(e,t){var n,a,r=e.length-2,i=3;"whitespace"===e[i][1].type&&(i+=2);r-2>i&&"whitespace"===e[r][1].type&&(r-=2);"atxHeadingSequence"===e[r][1].type&&(i===r-1||r-4>i&&"whitespace"===e[r-2][1].type)&&(r-=i+1===r?2:4);r>i&&(n={type:"atxHeadingText",start:e[i][1].start,end:e[r][1].end},a={type:"chunkText",start:e[i][1].start,end:e[r][1].end,contentType:"text"},Ct(e,i,r-i+1,[["enter",n,t],["enter",a,t],["exit",a,t],["exit",n,t]]));return e}};var xn={name:"setextUnderline",tokenize:function(e,t,n){var a,r,i=this,o=i.events.length;for(;o--;)if("lineEnding"!==i.events[o][1].type&&"linePrefix"!==i.events[o][1].type&&"content"!==i.events[o][1].type){r="paragraph"===i.events[o][1].type;break}return function(t){if(!i.parser.lazy[i.now().line]&&(i.interrupt||r))return e.enter("setextHeadingLine"),e.enter("setextHeadingLineSequence"),a=t,s(t);return n(t)};function s(t){return t===a?(e.consume(t),s):(e.exit("setextHeadingLineSequence"),Bt(e,l,"lineSuffix")(t))}function l(a){return null===a||Ft(a)?(e.exit("setextHeadingLine"),t(a)):n(a)}},resolveTo:function(e,t){var n,a,r,i=e.length;for(;i--;)if("enter"===e[i][0]){if("content"===e[i][1].type){n=i;break}"paragraph"===e[i][1].type&&(a=i)}else"content"===e[i][1].type&&e.splice(i,1),r||"definition"!==e[i][1].type||(r=i);var o={type:"setextHeading",start:Object.assign({},e[a][1].start),end:Object.assign({},e[e.length-1][1].end)};e[a][1].type="setextHeadingText",r?(e.splice(a,0,["enter",o,t]),e.splice(r+1,0,["exit",e[n][1],t]),e[n][1].end=Object.assign({},e[r][1].end)):e[n][1]=o;return e.push(["exit",o,t]),e}};var Cn=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],En=["pre","script","style","textarea"],Tn={name:"htmlFlow",tokenize:function(e,t,n){var a,r,i,o,s,l=this;return function(t){return e.enter("htmlFlow"),e.enter("htmlFlowData"),e.consume(t),c};function c(o){return 33===o?(e.consume(o),u):47===o?(e.consume(o),p):63===o?(e.consume(o),a=3,l.interrupt?t:j):Pt(o)?(e.consume(o),i=String.fromCharCode(o),r=!0,f):n(o)}function u(r){return 45===r?(e.consume(r),a=2,d):91===r?(e.consume(r),a=5,i="CDATA[",o=0,h):Pt(r)?(e.consume(r),a=4,l.interrupt?t:j):n(r)}function d(a){return 45===a?(e.consume(a),l.interrupt?t:j):n(a)}function h(a){return a===i.charCodeAt(o++)?(e.consume(a),o===i.length?l.interrupt?t:T:h):n(a)}function p(t){return Pt(t)?(e.consume(t),i=String.fromCharCode(t),f):n(t)}function f(o){return null===o||47===o||62===o||Dt(o)?47!==o&&r&&En.includes(i.toLowerCase())?(a=1,l.interrupt?t(o):T(o)):Cn.includes(i.toLowerCase())?(a=6,47===o?(e.consume(o),m):l.interrupt?t(o):T(o)):(a=7,l.interrupt&&!l.parser.lazy[l.now().line]?n(o):r?b(o):g(o)):45===o||At(o)?(e.consume(o),i+=String.fromCharCode(o),f):n(o)}function m(a){return 62===a?(e.consume(a),l.interrupt?t:T):n(a)}function g(t){return Nt(t)?(e.consume(t),g):C(t)}function b(t){return 47===t?(e.consume(t),C):58===t||95===t||Pt(t)?(e.consume(t),y):Nt(t)?(e.consume(t),b):C(t)}function y(t){return 45===t||46===t||58===t||95===t||At(t)?(e.consume(t),y):v(t)}function v(t){return 61===t?(e.consume(t),w):Nt(t)?(e.consume(t),v):b(t)}function w(t){return null===t||60===t||61===t||62===t||96===t?n(t):34===t||39===t?(e.consume(t),s=t,S):Nt(t)?(e.consume(t),w):(s=null,k(t))}function S(t){return null===t||Ft(t)?n(t):t===s?(e.consume(t),x):(e.consume(t),S)}function k(t){return null===t||34===t||39===t||60===t||61===t||62===t||96===t||Dt(t)?v(t):(e.consume(t),k)}function x(e){return 47===e||62===e||Nt(e)?b(e):n(e)}function C(t){return 62===t?(e.consume(t),E):n(t)}function E(t){return Nt(t)?(e.consume(t),E):null===t||Ft(t)?T(t):n(t)}function T(t){return 45===t&&2===a?(e.consume(t),P):60===t&&1===a?(e.consume(t),O):62===t&&4===a?(e.consume(t),M):63===t&&3===a?(e.consume(t),j):93===t&&5===a?(e.consume(t),A):!Ft(t)||6!==a&&7!==a?null===t||Ft(t)?I(t):(e.consume(t),T):e.check(In,M,I)(t)}function I(t){return e.exit("htmlFlowData"),z(t)}function z(t){return null===t?U(t):Ft(t)?e.attempt({tokenize:R,partial:!0},z,U)(t):(e.enter("htmlFlowData"),T(t))}function R(e,t,n){return function(t){return e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),a};function a(e){return l.parser.lazy[l.now().line]?n(e):t(e)}}function P(t){return 45===t?(e.consume(t),j):T(t)}function O(t){return 47===t?(e.consume(t),i="",L):T(t)}function L(t){return 62===t&&En.includes(i.toLowerCase())?(e.consume(t),M):Pt(t)&&i.length<8?(e.consume(t),i+=String.fromCharCode(t),L):T(t)}function A(t){return 93===t?(e.consume(t),j):T(t)}function j(t){return 62===t?(e.consume(t),M):45===t&&2===a?(e.consume(t),j):T(t)}function M(t){return null===t||Ft(t)?(e.exit("htmlFlowData"),U(t)):(e.consume(t),M)}function U(n){return e.exit("htmlFlow"),t(n)}},resolveTo:function(e){var t=e.length;for(;t--&&("enter"!==e[t][0]||"htmlFlow"!==e[t][1].type););t>1&&"linePrefix"===e[t-2][1].type&&(e[t][1].start=e[t-2][1].start,e[t+1][1].start=e[t-2][1].start,e.splice(t-2,2));return e},concrete:!0},In={tokenize:function(e,t,n){return function(a){return e.exit("htmlFlowData"),e.enter("lineEndingBlank"),e.consume(a),e.exit("lineEndingBlank"),e.attempt($t,t,n)}},partial:!0};var zn={name:"codeFenced",tokenize:function(e,t,n){var a,r=this,i={tokenize:function(e,t,n){var r=0;return Bt(e,i,"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4);function i(t){return e.enter("codeFencedFence"),e.enter("codeFencedFenceSequence"),o(t)}function o(t){return t===a?(e.consume(t),r++,o):r<c?n(t):(e.exit("codeFencedFenceSequence"),Bt(e,s,"whitespace")(t))}function s(a){return null===a||Ft(a)?(e.exit("codeFencedFence"),t(a)):n(a)}},partial:!0},o={tokenize:function(e,t,n){var a=this;return r;function r(t){return e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),i}function i(e){return a.parser.lazy[a.now().line]?n(e):t(e)}},partial:!0},s=this.events[this.events.length-1],l=s&&"linePrefix"===s[1].type?s[2].sliceSerialize(s[1],!0).length:0,c=0;return function(t){return e.enter("codeFenced"),e.enter("codeFencedFence"),e.enter("codeFencedFenceSequence"),a=t,u(t)};function u(t){return t===a?(e.consume(t),c++,u):(e.exit("codeFencedFenceSequence"),c<3?n(t):Bt(e,d,"whitespace")(t))}function d(t){return null===t||Ft(t)?m(t):(e.enter("codeFencedFenceInfo"),e.enter("chunkString",{contentType:"string"}),h(t))}function h(t){return null===t||Dt(t)?(e.exit("chunkString"),e.exit("codeFencedFenceInfo"),Bt(e,p,"whitespace")(t)):96===t&&t===a?n(t):(e.consume(t),h)}function p(t){return null===t||Ft(t)?m(t):(e.enter("codeFencedFenceMeta"),e.enter("chunkString",{contentType:"string"}),f(t))}function f(t){return null===t||Ft(t)?(e.exit("chunkString"),e.exit("codeFencedFenceMeta"),m(t)):96===t&&t===a?n(t):(e.consume(t),f)}function m(n){return e.exit("codeFencedFence"),r.interrupt?t(n):g(n)}function g(t){return null===t?y(t):Ft(t)?e.attempt(o,e.attempt(i,y,l?Bt(e,g,"linePrefix",l+1):g),y)(t):(e.enter("codeFlowValue"),b(t))}function b(t){return null===t||Ft(t)?(e.exit("codeFlowValue"),g(t)):(e.consume(t),b)}function y(n){return e.exit("codeFenced"),t(n)}},concrete:!0};var Rn=document.createElement("i");function Pn(e){var t="&"+e+";";Rn.innerHTML=t;var n=Rn.textContent;return(59!==n.charCodeAt(n.length-1)||"semi"===e)&&(n!==t&&n)}var On={name:"characterReference",tokenize:function(e,t,n){var a,r,i=this,o=0;return function(t){return e.enter("characterReference"),e.enter("characterReferenceMarker"),e.consume(t),e.exit("characterReferenceMarker"),s};function s(t){return 35===t?(e.enter("characterReferenceMarkerNumeric"),e.consume(t),e.exit("characterReferenceMarkerNumeric"),l):(e.enter("characterReferenceValue"),a=31,r=At,c(t))}function l(t){return 88===t||120===t?(e.enter("characterReferenceMarkerHexadecimal"),e.consume(t),e.exit("characterReferenceMarkerHexadecimal"),e.enter("characterReferenceValue"),a=6,r=Lt,c):(e.enter("characterReferenceValue"),a=7,r=Ot,c(t))}function c(s){var l;return 59===s&&o?(l=e.exit("characterReferenceValue"),r!==At||Pn(i.sliceSerialize(l))?(e.enter("characterReferenceMarker"),e.consume(s),e.exit("characterReferenceMarker"),e.exit("characterReference"),t):n(s)):r(s)&&o++<a?(e.consume(s),c):n(s)}}};var Ln={name:"characterEscape",tokenize:function(e,t,n){return function(t){return e.enter("characterEscape"),e.enter("escapeMarker"),e.consume(t),e.exit("escapeMarker"),a};function a(a){return jt(a)?(e.enter("characterEscapeValue"),e.consume(a),e.exit("characterEscapeValue"),e.exit("characterEscape"),t):n(a)}}};var An={name:"lineEnding",tokenize:function(e,t){return function(n){return e.enter("lineEnding"),e.consume(n),e.exit("lineEnding"),Bt(e,t,"linePrefix")}}};var jn={name:"labelEnd",tokenize:function(e,t,n){var a,r,i=this,o=i.events.length;for(;o--;)if(("labelImage"===i.events[o][1].type||"labelLink"===i.events[o][1].type)&&!i.events[o][1]._balanced){a=i.events[o][1];break}return function(t){if(!a)return n(t);return a._inactive?l(t):(r=i.parser.defined.includes(bn(i.sliceSerialize({start:a.end,end:i.now()}))),e.enter("labelEnd"),e.enter("labelMarker"),e.consume(t),e.exit("labelMarker"),e.exit("labelEnd"),s)};function s(n){return 40===n?e.attempt(Mn,t,r?t:l)(n):91===n?e.attempt(Un,t,r?e.attempt(Dn,t,l):l)(n):r?t(n):l(n)}function l(e){return a._balanced=!0,n(e)}},resolveTo:function(e,t){var n,a,r,i,o=e.length,s=0;for(;o--;)if(n=e[o][1],a){if("link"===n.type||"labelLink"===n.type&&n._inactive)break;"enter"===e[o][0]&&"labelLink"===n.type&&(n._inactive=!0)}else if(r){if("enter"===e[o][0]&&("labelImage"===n.type||"labelLink"===n.type)&&!n._balanced&&(a=o,"labelLink"!==n.type)){s=2;break}}else"labelEnd"===n.type&&(r=o);var l={type:"labelLink"===e[a][1].type?"link":"image",start:Object.assign({},e[a][1].start),end:Object.assign({},e[e.length-1][1].end)},c={type:"label",start:Object.assign({},e[a][1].start),end:Object.assign({},e[r][1].end)},u={type:"labelText",start:Object.assign({},e[a+s+2][1].end),end:Object.assign({},e[r-2][1].start)};return i=Et(i=[["enter",l,t],["enter",c,t]],e.slice(a+1,a+s+3)),i=Et(i,[["enter",u,t]]),i=Et(i,on(t.parser.constructs.insideSpan.null,e.slice(a+s+4,r-3),t)),i=Et(i,[["exit",u,t],e[r-2],e[r-1],["exit",c,t]]),i=Et(i,e.slice(r+1)),i=Et(i,[["exit",l,t]]),Ct(e,a,e.length,i),e},resolveAll:function(e){var t,n=-1;for(;++n<e.length;)"labelImage"!==(t=e[n][1]).type&&"labelLink"!==t.type&&"labelEnd"!==t.type||(e.splice(n+1,"labelImage"===t.type?4:2),t.type="data",n++);return e}},Mn={tokenize:function(e,t,n){return function(t){return e.enter("resource"),e.enter("resourceMarker"),e.consume(t),e.exit("resourceMarker"),gn(e,a)};function a(t){return 41===t?o(t):pn(e,r,n,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",32)(t)}function r(t){return Dt(t)?gn(e,i)(t):o(t)}function i(t){return 34===t||39===t||40===t?mn(e,gn(e,o),n,"resourceTitle","resourceTitleMarker","resourceTitleString")(t):o(t)}function o(a){return 41===a?(e.enter("resourceMarker"),e.consume(a),e.exit("resourceMarker"),e.exit("resource"),t):n(a)}}},Un={tokenize:function(e,t,n){var a=this;return function(t){return fn.call(a,e,r,n,"reference","referenceMarker","referenceString")(t)};function r(e){return a.parser.defined.includes(bn(a.sliceSerialize(a.events[a.events.length-1][1]).slice(1,-1)))?t(e):n(e)}}},Dn={tokenize:function(e,t,n){return function(t){return e.enter("reference"),e.enter("referenceMarker"),e.consume(t),e.exit("referenceMarker"),a};function a(a){return 93===a?(e.enter("referenceMarker"),e.consume(a),e.exit("referenceMarker"),e.exit("reference"),t):n(a)}}};var Fn={name:"labelStartImage",tokenize:function(e,t,n){var a=this;return function(t){return e.enter("labelImage"),e.enter("labelImageMarker"),e.consume(t),e.exit("labelImageMarker"),r};function r(t){return 91===t?(e.enter("labelMarker"),e.consume(t),e.exit("labelMarker"),e.exit("labelImage"),i):n(t)}function i(e){return 94===e&&"_hiddenFootnoteSupport"in a.parser.constructs?n(e):t(e)}},resolveAll:jn.resolveAll};function Nn(e){return null===e||Dt(e)||_t(e)?1:Gt(e)?2:void 0}var _n={name:"attention",tokenize:function(e,t){var n,a=this.parser.constructs.attentionMarkers.null,r=this.previous,i=Nn(r);return function(t){return e.enter("attentionSequence"),n=t,o(t)};function o(s){if(s===n)return e.consume(s),o;var l=e.exit("attentionSequence"),c=Nn(s),u=!c||2===c&&i||a.includes(s),d=!i||2===i&&c||a.includes(r);return l._open=Boolean(42===n?u:u&&(i||!d)),l._close=Boolean(42===n?d:d&&(c||!u)),t(s)}},resolveAll:function(e,t){var n,a,r,i,o,s,l,c,u=-1;for(;++u<e.length;)if("enter"===e[u][0]&&"attentionSequence"===e[u][1].type&&e[u][1]._close)for(n=u;n--;)if("exit"===e[n][0]&&"attentionSequence"===e[n][1].type&&e[n][1]._open&&t.sliceSerialize(e[n][1]).charCodeAt(0)===t.sliceSerialize(e[u][1]).charCodeAt(0)){if((e[n][1]._close||e[u][1]._open)&&(e[u][1].end.offset-e[u][1].start.offset)%3&&!((e[n][1].end.offset-e[n][1].start.offset+e[u][1].end.offset-e[u][1].start.offset)%3))continue;s=e[n][1].end.offset-e[n][1].start.offset>1&&e[u][1].end.offset-e[u][1].start.offset>1?2:1;var d=Object.assign({},e[n][1].end),h=Object.assign({},e[u][1].start);Gn(d,-s),Gn(h,s),i={type:s>1?"strongSequence":"emphasisSequence",start:d,end:Object.assign({},e[n][1].end)},o={type:s>1?"strongSequence":"emphasisSequence",start:Object.assign({},e[u][1].start),end:h},r={type:s>1?"strongText":"emphasisText",start:Object.assign({},e[n][1].end),end:Object.assign({},e[u][1].start)},a={type:s>1?"strong":"emphasis",start:Object.assign({},i.start),end:Object.assign({},o.end)},e[n][1].end=Object.assign({},i.start),e[u][1].start=Object.assign({},o.end),l=[],e[n][1].end.offset-e[n][1].start.offset&&(l=Et(l,[["enter",e[n][1],t],["exit",e[n][1],t]])),l=Et(l,[["enter",a,t],["enter",i,t],["exit",i,t],["enter",r,t]]),l=Et(l,on(t.parser.constructs.insideSpan.null,e.slice(n+1,u),t)),l=Et(l,[["exit",r,t],["enter",o,t],["exit",o,t],["exit",a,t]]),e[u][1].end.offset-e[u][1].start.offset?(c=2,l=Et(l,[["enter",e[u][1],t],["exit",e[u][1],t]])):c=0,Ct(e,n-1,u-n+3,l),u=n+l.length-c-2;break}u=-1;for(;++u<e.length;)"attentionSequence"===e[u][1].type&&(e[u][1].type="data");return e}};function Gn(e,t){e.column+=t,e.offset+=t,e._bufferIndex+=t}var Hn={name:"autolink",tokenize:function(e,t,n){var a=1;return function(t){return e.enter("autolink"),e.enter("autolinkMarker"),e.consume(t),e.exit("autolinkMarker"),e.enter("autolinkProtocol"),r};function r(t){return Pt(t)?(e.consume(t),i):Mt(t)?l(t):n(t)}function i(e){return 43===e||45===e||46===e||At(e)?o(e):l(e)}function o(t){return 58===t?(e.consume(t),s):(43===t||45===t||46===t||At(t))&&a++<32?(e.consume(t),o):l(t)}function s(t){return 62===t?(e.exit("autolinkProtocol"),h(t)):null===t||32===t||60===t||Ut(t)?n(t):(e.consume(t),s)}function l(t){return 64===t?(e.consume(t),a=0,c):Mt(t)?(e.consume(t),l):n(t)}function c(e){return At(e)?u(e):n(e)}function u(t){return 46===t?(e.consume(t),a=0,c):62===t?(e.exit("autolinkProtocol").type="autolinkEmail",h(t)):d(t)}function d(t){return(45===t||At(t))&&a++<63?(e.consume(t),45===t?d:u):n(t)}function h(n){return e.enter("autolinkMarker"),e.consume(n),e.exit("autolinkMarker"),e.exit("autolink"),t}}};var Bn={name:"htmlText",tokenize:function(e,t,n){var a,r,i,o,s=this;return function(t){return e.enter("htmlText"),e.enter("htmlTextData"),e.consume(t),l};function l(t){return 33===t?(e.consume(t),c):47===t?(e.consume(t),k):63===t?(e.consume(t),w):Pt(t)?(e.consume(t),E):n(t)}function c(t){return 45===t?(e.consume(t),u):91===t?(e.consume(t),r="CDATA[",i=0,m):Pt(t)?(e.consume(t),v):n(t)}function u(t){return 45===t?(e.consume(t),d):n(t)}function d(t){return null===t||62===t?n(t):45===t?(e.consume(t),h):p(t)}function h(e){return null===e||62===e?n(e):p(e)}function p(t){return null===t?n(t):45===t?(e.consume(t),f):Ft(t)?(o=p,A(t)):(e.consume(t),p)}function f(t){return 45===t?(e.consume(t),M):p(t)}function m(t){return t===r.charCodeAt(i++)?(e.consume(t),i===r.length?g:m):n(t)}function g(t){return null===t?n(t):93===t?(e.consume(t),b):Ft(t)?(o=g,A(t)):(e.consume(t),g)}function b(t){return 93===t?(e.consume(t),y):g(t)}function y(t){return 62===t?M(t):93===t?(e.consume(t),y):g(t)}function v(t){return null===t||62===t?M(t):Ft(t)?(o=v,A(t)):(e.consume(t),v)}function w(t){return null===t?n(t):63===t?(e.consume(t),S):Ft(t)?(o=w,A(t)):(e.consume(t),w)}function S(e){return 62===e?M(e):w(e)}function k(t){return Pt(t)?(e.consume(t),x):n(t)}function x(t){return 45===t||At(t)?(e.consume(t),x):C(t)}function C(t){return Ft(t)?(o=C,A(t)):Nt(t)?(e.consume(t),C):M(t)}function E(t){return 45===t||At(t)?(e.consume(t),E):47===t||62===t||Dt(t)?T(t):n(t)}function T(t){return 47===t?(e.consume(t),M):58===t||95===t||Pt(t)?(e.consume(t),I):Ft(t)?(o=T,A(t)):Nt(t)?(e.consume(t),T):M(t)}function I(t){return 45===t||46===t||58===t||95===t||At(t)?(e.consume(t),I):z(t)}function z(t){return 61===t?(e.consume(t),R):Ft(t)?(o=z,A(t)):Nt(t)?(e.consume(t),z):T(t)}function R(t){return null===t||60===t||61===t||62===t||96===t?n(t):34===t||39===t?(e.consume(t),a=t,P):Ft(t)?(o=R,A(t)):Nt(t)?(e.consume(t),R):(e.consume(t),a=void 0,L)}function P(t){return t===a?(e.consume(t),O):null===t?n(t):Ft(t)?(o=P,A(t)):(e.consume(t),P)}function O(e){return 62===e||47===e||Dt(e)?T(e):n(e)}function L(t){return null===t||34===t||39===t||60===t||61===t||96===t?n(t):62===t||Dt(t)?T(t):(e.consume(t),L)}function A(t){return e.exit("htmlTextData"),e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),Bt(e,j,"linePrefix",s.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function j(t){return e.enter("htmlTextData"),o(t)}function M(a){return 62===a?(e.consume(a),e.exit("htmlTextData"),e.exit("htmlText"),t):n(a)}}};var qn={name:"labelStartLink",tokenize:function(e,t,n){var a=this;return function(t){return e.enter("labelLink"),e.enter("labelMarker"),e.consume(t),e.exit("labelMarker"),e.exit("labelLink"),r};function r(e){return 94===e&&"_hiddenFootnoteSupport"in a.parser.constructs?n(e):t(e)}},resolveAll:jn.resolveAll};var Wn={name:"hardBreakEscape",tokenize:function(e,t,n){return function(t){return e.enter("hardBreakEscape"),e.enter("escapeMarker"),e.consume(t),a};function a(a){return Ft(a)?(e.exit("escapeMarker"),e.exit("hardBreakEscape"),t(a)):n(a)}}};var Vn,$n,Qn,Kn,Yn,Zn={name:"codeText",tokenize:function(e,t,n){var a,r,i=0;return function(t){return e.enter("codeText"),e.enter("codeTextSequence"),o(t)};function o(t){return 96===t?(e.consume(t),i++,o):(e.exit("codeTextSequence"),s(t))}function s(t){return null===t?n(t):96===t?(r=e.enter("codeTextSequence"),a=0,c(t)):32===t?(e.enter("space"),e.consume(t),e.exit("space"),s):Ft(t)?(e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),s):(e.enter("codeTextData"),l(t))}function l(t){return null===t||32===t||96===t||Ft(t)?(e.exit("codeTextData"),s(t)):(e.consume(t),l)}function c(n){return 96===n?(e.consume(n),a++,c):a===i?(e.exit("codeTextSequence"),e.exit("codeText"),t(n)):(r.type="codeTextData",l(n))}},resolve:function(e){var t,n,a=e.length-4,r=3;if(("lineEnding"===e[r][1].type||"space"===e[r][1].type)&&("lineEnding"===e[a][1].type||"space"===e[a][1].type))for(t=r;++t<a;)if("codeTextData"===e[t][1].type){e[r][1].type="codeTextPadding",e[a][1].type="codeTextPadding",r+=2,a-=2;break}t=r-1,a++;for(;++t<=a;)void 0===n?t!==a&&"lineEnding"!==e[t][1].type&&(n=t):t!==a&&"lineEnding"!==e[t][1].type||(e[n][1].type="codeTextData",t!==n+2&&(e[n][1].end=e[t-1][1].end,e.splice(n+2,t-n-2),a-=t-n-2,t=n+2),n=void 0);return e},previous:function(e){return 96!==e||"characterEscape"===this.events[this.events.length-1][1].type}};var Xn=(o(Vn={},42,cn),o(Vn,43,cn),o(Vn,45,cn),o(Vn,48,cn),o(Vn,49,cn),o(Vn,50,cn),o(Vn,51,cn),o(Vn,52,cn),o(Vn,53,cn),o(Vn,54,cn),o(Vn,55,cn),o(Vn,56,cn),o(Vn,57,cn),o(Vn,62,hn),Vn),Jn=o({},91,yn),ea=(o($n={},-2,wn),o($n,-1,wn),o($n,32,wn),$n),ta=(o(Qn={},35,kn),o(Qn,42,ln),o(Qn,45,[xn,ln]),o(Qn,60,Tn),o(Qn,61,xn),o(Qn,95,ln),o(Qn,96,zn),o(Qn,126,zn),Qn),na=(o(Kn={},38,On),o(Kn,92,Ln),Kn),aa=(o(Yn={},-5,An),o(Yn,-4,An),o(Yn,-3,An),o(Yn,33,Fn),o(Yn,38,On),o(Yn,42,_n),o(Yn,60,[Hn,Bn]),o(Yn,91,qn),o(Yn,92,[Wn,Ln]),o(Yn,93,jn),o(Yn,95,_n),o(Yn,96,Zn),Yn),ra={null:[_n,Jt]},ia={null:[42,95]},oa={null:[]};var sa=/[\0\t\n\r]/g;function la(e,t){var n=Number.parseInt(e,t);return n<9||11===n||n>13&&n<32||n>126&&n<160||n>55295&&n<57344||n>64975&&n<65008||65535===(65535&n)||65534===(65535&n)||n>1114111?"\ufffd":String.fromCharCode(n)}var ca=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function ua(e,t,n){if(t)return t;if(35===n.charCodeAt(0)){var a=n.charCodeAt(1),r=120===a||88===a;return la(n.slice(r?2:1),r?16:10)}return Pn(n)||e}var da={}.hasOwnProperty,ha=function(t,n,a){return"string"!==typeof n&&(a=n,n=void 0),function(e){var t={transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:s(ne),autolinkProtocol:I,autolinkEmail:I,atxHeading:s(X),blockQuote:s($),characterEscape:I,characterReference:I,codeFenced:s(Q),codeFencedFenceInfo:l,codeFencedFenceMeta:l,codeIndented:s(Q,l),codeText:s(K,l),codeTextData:I,data:I,codeFlowValue:I,definition:s(Y),definitionDestinationString:l,definitionLabelString:l,definitionTitleString:l,emphasis:s(Z),hardBreakEscape:s(J),hardBreakTrailing:s(J),htmlFlow:s(ee,l),htmlFlowData:I,htmlText:s(ee,l),htmlTextData:I,image:s(te),label:l,link:s(ne),listItem:s(re),listItemValue:f,listOrdered:s(ae,p),listUnordered:s(ae),paragraph:s(ie),reference:G,referenceString:l,resourceDestinationString:l,resourceTitleString:l,setextHeading:s(X),strong:s(oe),thematicBreak:s(le)},exit:{atxHeading:u(),atxHeadingSequence:x,autolink:u(),autolinkEmail:V,autolinkProtocol:W,blockQuote:u(),characterEscapeValue:z,characterReferenceMarkerHexadecimal:B,characterReferenceMarkerNumeric:B,characterReferenceValue:q,codeFenced:u(y),codeFencedFence:b,codeFencedFenceInfo:m,codeFencedFenceMeta:g,codeFlowValue:z,codeIndented:u(v),codeText:u(A),codeTextData:z,data:z,definition:u(),definitionDestinationString:k,definitionLabelString:w,definitionTitleString:S,emphasis:u(),hardBreakEscape:u(P),hardBreakTrailing:u(P),htmlFlow:u(O),htmlFlowData:z,htmlText:u(L),htmlTextData:z,image:u(M),label:D,labelText:U,lineEnding:R,link:u(j),listItem:u(),listOrdered:u(),listUnordered:u(),paragraph:u(),referenceString:H,resourceDestinationString:F,resourceTitleString:N,resource:_,setextHeading:u(T),setextHeadingLineSequence:E,setextHeadingText:C,strong:u(),thematicBreak:u()}};fa(t,(e||{}).mdastExtensions||[]);var n={};return a;function a(e){for(var n={type:"root",children:[]},a={stack:[n],tokenStack:[],config:t,enter:c,exit:d,buffer:l,resume:h,setData:i,getData:o},s=[],u=-1;++u<e.length;){if("listOrdered"===e[u][1].type||"listUnordered"===e[u][1].type)if("enter"===e[u][0])s.push(u);else u=r(e,s.pop(),u)}for(u=-1;++u<e.length;){var p=t[e[u][0]];da.call(p,e[u][1].type)&&p[e[u][1].type].call(Object.assign({sliceSerialize:e[u][2].sliceSerialize},a),e[u][1])}if(a.tokenStack.length>0){var f=a.tokenStack[a.tokenStack.length-1];(f[1]||ga).call(a,void 0,f[0])}for(n.position={start:pa(e.length>0?e[0][1].start:{line:1,column:1,offset:0}),end:pa(e.length>0?e[e.length-2][1].end:{line:1,column:1,offset:0})},u=-1;++u<t.transforms.length;)n=t.transforms[u](n)||n;return n}function r(e,t,n){for(var a,r,i,o,s=t-1,l=-1,c=!1;++s<=n;){var u=e[s];if("listUnordered"===u[1].type||"listOrdered"===u[1].type||"blockQuote"===u[1].type?("enter"===u[0]?l++:l--,o=void 0):"lineEndingBlank"===u[1].type?"enter"===u[0]&&(!a||o||l||i||(i=s),o=void 0):"linePrefix"===u[1].type||"listItemValue"===u[1].type||"listItemMarker"===u[1].type||"listItemPrefix"===u[1].type||"listItemPrefixWhitespace"===u[1].type||(o=void 0),!l&&"enter"===u[0]&&"listItemPrefix"===u[1].type||-1===l&&"exit"===u[0]&&("listUnordered"===u[1].type||"listOrdered"===u[1].type)){if(a){var d=s;for(r=void 0;d--;){var h=e[d];if("lineEnding"===h[1].type||"lineEndingBlank"===h[1].type){if("exit"===h[0])continue;r&&(e[r][1].type="lineEndingBlank",c=!0),h[1].type="lineEnding",r=d}else if("linePrefix"!==h[1].type&&"blockQuotePrefix"!==h[1].type&&"blockQuotePrefixWhitespace"!==h[1].type&&"blockQuoteMarker"!==h[1].type&&"listItemIndent"!==h[1].type)break}i&&(!r||i<r)&&(a._spread=!0),a.end=Object.assign({},r?e[r][1].start:u[1].end),e.splice(r||s,0,["exit",a,u[2]]),s++,n++}"listItemPrefix"===u[1].type&&(a={type:"listItem",_spread:!1,start:Object.assign({},u[1].start)},e.splice(s,0,["enter",a,u[2]]),s++,n++,i=void 0,o=!0)}}return e[t][1]._spread=c,n}function i(e,t){n[e]=t}function o(e){return n[e]}function s(e,t){return n;function n(n){c.call(this,e(n),n),t&&t.call(this,n)}}function l(){this.stack.push({type:"fragment",children:[]})}function c(e,t,n){return this.stack[this.stack.length-1].children.push(e),this.stack.push(e),this.tokenStack.push([t,n]),e.position={start:pa(t.start)},e}function u(e){return t;function t(t){e&&e.call(this,t),d.call(this,t)}}function d(e,t){var n=this.stack.pop(),a=this.tokenStack.pop();if(!a)throw new Error("Cannot close `"+e.type+"` ("+Ve({start:e.start,end:e.end})+"): it\u2019s not open");return a[0].type!==e.type&&(t?t.call(this,e,a[0]):(a[1]||ga).call(this,e,a[0])),n.position.end=pa(e.end),n}function h(){return function(e,t){var n=(t||{}).includeImageAlt;return kt(e,"boolean"!==typeof n||n)}(this.stack.pop())}function p(){i("expectingFirstListItemValue",!0)}function f(e){o("expectingFirstListItemValue")&&(this.stack[this.stack.length-2].start=Number.parseInt(this.sliceSerialize(e),10),i("expectingFirstListItemValue"))}function m(){var e=this.resume();this.stack[this.stack.length-1].lang=e}function g(){var e=this.resume();this.stack[this.stack.length-1].meta=e}function b(){o("flowCodeInside")||(this.buffer(),i("flowCodeInside",!0))}function y(){var e=this.resume();this.stack[this.stack.length-1].value=e.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),i("flowCodeInside")}function v(){var e=this.resume();this.stack[this.stack.length-1].value=e.replace(/(\r?\n|\r)$/g,"")}function w(e){var t=this.resume(),n=this.stack[this.stack.length-1];n.label=t,n.identifier=bn(this.sliceSerialize(e)).toLowerCase()}function S(){var e=this.resume();this.stack[this.stack.length-1].title=e}function k(){var e=this.resume();this.stack[this.stack.length-1].url=e}function x(e){var t=this.stack[this.stack.length-1];if(!t.depth){var n=this.sliceSerialize(e).length;t.depth=n}}function C(){i("setextHeadingSlurpLineEnding",!0)}function E(e){this.stack[this.stack.length-1].depth=61===this.sliceSerialize(e).charCodeAt(0)?1:2}function T(){i("setextHeadingSlurpLineEnding")}function I(e){var t=this.stack[this.stack.length-1],n=t.children[t.children.length-1];n&&"text"===n.type||((n=se()).position={start:pa(e.start)},t.children.push(n)),this.stack.push(n)}function z(e){var t=this.stack.pop();t.value+=this.sliceSerialize(e),t.position.end=pa(e.end)}function R(e){var n=this.stack[this.stack.length-1];if(o("atHardBreak"))return n.children[n.children.length-1].position.end=pa(e.end),void i("atHardBreak");!o("setextHeadingSlurpLineEnding")&&t.canContainEols.includes(n.type)&&(I.call(this,e),z.call(this,e))}function P(){i("atHardBreak",!0)}function O(){var e=this.resume();this.stack[this.stack.length-1].value=e}function L(){var e=this.resume();this.stack[this.stack.length-1].value=e}function A(){var e=this.resume();this.stack[this.stack.length-1].value=e}function j(){var e=this.stack[this.stack.length-1];if(o("inReference")){var t=o("referenceType")||"shortcut";e.type+="Reference",e.referenceType=t,delete e.url,delete e.title}else delete e.identifier,delete e.label;i("referenceType")}function M(){var e=this.stack[this.stack.length-1];if(o("inReference")){var t=o("referenceType")||"shortcut";e.type+="Reference",e.referenceType=t,delete e.url,delete e.title}else delete e.identifier,delete e.label;i("referenceType")}function U(e){var t=this.sliceSerialize(e),n=this.stack[this.stack.length-2];n.label=function(e){return e.replace(ca,ua)}(t),n.identifier=bn(t).toLowerCase()}function D(){var e=this.stack[this.stack.length-1],t=this.resume(),n=this.stack[this.stack.length-1];if(i("inReference",!0),"link"===n.type){var a=e.children;n.children=a}else n.alt=t}function F(){var e=this.resume();this.stack[this.stack.length-1].url=e}function N(){var e=this.resume();this.stack[this.stack.length-1].title=e}function _(){i("inReference")}function G(){i("referenceType","collapsed")}function H(e){var t=this.resume(),n=this.stack[this.stack.length-1];n.label=t,n.identifier=bn(this.sliceSerialize(e)).toLowerCase(),i("referenceType","full")}function B(e){i("characterReferenceType",e.type)}function q(e){var t,n=this.sliceSerialize(e),a=o("characterReferenceType");a?(t=la(n,"characterReferenceMarkerNumeric"===a?10:16),i("characterReferenceType")):t=Pn(n);var r=this.stack.pop();r.value+=t,r.position.end=pa(e.end)}function W(e){z.call(this,e),this.stack[this.stack.length-1].url=this.sliceSerialize(e)}function V(e){z.call(this,e),this.stack[this.stack.length-1].url="mailto:"+this.sliceSerialize(e)}function $(){return{type:"blockquote",children:[]}}function Q(){return{type:"code",lang:null,meta:null,value:""}}function K(){return{type:"inlineCode",value:""}}function Y(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function Z(){return{type:"emphasis",children:[]}}function X(){return{type:"heading",depth:void 0,children:[]}}function J(){return{type:"break"}}function ee(){return{type:"html",value:""}}function te(){return{type:"image",title:null,url:"",alt:null}}function ne(){return{type:"link",title:null,url:"",children:[]}}function ae(e){return{type:"list",ordered:"listOrdered"===e.type,start:null,spread:e._spread,children:[]}}function re(e){return{type:"listItem",spread:e._spread,checked:null,children:[]}}function ie(){return{type:"paragraph",children:[]}}function oe(){return{type:"strong",children:[]}}function se(){return{type:"text",value:""}}function le(){return{type:"thematicBreak"}}}(a)(function(e){for(;!Qt(e););return e}(function(){var t={defined:[],lazy:{},constructs:It([e].concat((arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).extensions||[])),content:n(qt),document:n(Wt),flow:n(Xt),string:n(en),text:n(tn)};return t;function n(e){return function(n){return sn(t,e,n)}}}(a).document().write(function(){var e,t=1,n="",a=!0;return function(r,i,o){var s,l,c,u,d,h=[];for(r=n+r.toString(i),c=0,n="",a&&(65279===r.charCodeAt(0)&&c++,a=void 0);c<r.length;){if(sa.lastIndex=c,u=(s=sa.exec(r))&&void 0!==s.index?s.index:r.length,d=r.charCodeAt(u),!s){n=r.slice(c);break}if(10===d&&c===u&&e)h.push(-3),e=void 0;else switch(e&&(h.push(-5),e=void 0),c<u&&(h.push(r.slice(c,u)),t+=u-c),d){case 0:h.push(65533),t++;break;case 9:for(l=4*Math.ceil(t/4),h.push(-2);t++<l;)h.push(-1);break;case 10:h.push(-4),t=1;break;default:e=!0,t=1}c=u+1}return o&&(e&&h.push(-5),n&&h.push(n),h.push(null)),h}}()(t,n,!0))))};function pa(e){return{line:e.line,column:e.column,offset:e.offset}}function fa(e,t){for(var n=-1;++n<t.length;){var a=t[n];Array.isArray(a)?fa(e,a):ma(e,a)}}function ma(e,t){var n;for(n in t)if(da.call(t,n))if("canContainEols"===n){var a,r=t[n];if(r)(a=e[n]).push.apply(a,D(r))}else if("transforms"===n){var i,o=t[n];if(o)(i=e[n]).push.apply(i,D(o))}else if("enter"===n||"exit"===n){var s=t[n];s&&Object.assign(e[n],s)}}function ga(e,t){throw e?new Error("Cannot close `"+e.type+"` ("+Ve({start:e.start,end:e.end})+"): a different token (`"+t.type+"`, "+Ve({start:t.start,end:t.end})+") is open"):new Error("Cannot close document, a token (`"+t.type+"`, "+Ve({start:t.start,end:t.end})+") is still open")}var ba=function(e){var t=this;Object.assign(this,{Parser:function(n){var a=t.data("settings");return ha(n,Object.assign({},a,e,{extensions:t.data("micromarkExtensions")||[],mdastExtensions:t.data("fromMarkdownExtensions")||[]}))}})};function ya(e){for(var t=[],n=-1,a=0,r=0;++n<e.length;){var i=e.charCodeAt(n),o="";if(37===i&&At(e.charCodeAt(n+1))&&At(e.charCodeAt(n+2)))r=2;else if(i<128)/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(i))||(o=String.fromCharCode(i));else if(i>55295&&i<57344){var s=e.charCodeAt(n+1);i<56320&&s>56319&&s<57344?(o=String.fromCharCode(i,s),r=1):o="\ufffd"}else o=String.fromCharCode(i);o&&(t.push(e.slice(a,n),encodeURIComponent(o)),a=n+r+1,o=""),r&&(n+=r,r=0)}return t.join("")+e.slice(a)}var va=function(e){if(void 0===e||null===e)return ka;if("string"===typeof e)return function(e){return Sa(t);function t(t){return t&&t.type===e}}(e);if("object"===typeof e)return Array.isArray(e)?wa(e):function(e){return Sa(t);function t(t){var n;for(n in e)if(t[n]!==e[n])return!1;return!0}}(e);if("function"===typeof e)return Sa(e);throw new Error("Expected function, string, or object as test")};function wa(e){for(var t=[],n=-1;++n<e.length;)t[n]=va(e[n]);return Sa((function(){for(var e=-1,n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];for(;++e<t.length;){var i;if((i=t[e]).call.apply(i,[this].concat(a)))return!0}return!1}))}function Sa(e){return function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return Boolean(t&&"object"===typeof t&&"type"in t&&Boolean(e.call.apply(e,[this,t].concat(a))))}}function ka(){return!0}var xa=function(e,t,n,a){"function"===typeof t&&"function"!==typeof n&&(a=n,n=t,t=null);var r=va(t),i=a?-1:1;!function e(o,s,l){var c=o&&"object"===typeof o?o:{};if("string"===typeof c.type){var u="string"===typeof c.tagName?c.tagName:"string"===typeof c.name?c.name:void 0;Object.defineProperty(d,"name",{value:"node ("+o.type+(u?"<"+u+">":"")+")"})}return d;function d(){var c,u,d,h=[];if((!t||r(o,s,l[l.length-1]||null))&&(h=function(e){if(Array.isArray(e))return e;if("number"===typeof e)return[true,e];return[e]}(n(o,l)),false===h[0]))return h;if(o.children&&"skip"!==h[0])for(u=(a?o.children.length:-1)+i,d=l.concat(o);u>-1&&u<o.children.length;){if(c=e(o.children[u],u,d)(),false===c[0])return c;u="number"===typeof c[1]?c[1]:u+i}return h}}(e,void 0,[])()};var Ca=function(e,t,n,a){"function"===typeof t&&"function"!==typeof n&&(a=n,n=t,t=null),xa(e,t,(function(e,t){var a=t[t.length-1];return n(e,a?a.children.indexOf(e):null,a)}),a)},Ea=Ia("start"),Ta=Ia("end");function Ia(e){return function(t){var n=t&&t.position&&t.position[e]||{};return{line:n.line||null,column:n.column||null,offset:n.offset>-1?n.offset:null}}}var za={}.hasOwnProperty;function Ra(e){return String(e||"").toUpperCase()}function Pa(e,t){var n,a=String(t.identifier).toUpperCase(),r=ya(a.toLowerCase()),i=e.footnoteOrder.indexOf(a);-1===i?(e.footnoteOrder.push(a),e.footnoteCounts[a]=1,n=e.footnoteOrder.length):(e.footnoteCounts[a]++,n=i+1);var o=e.footnoteCounts[a],s={type:"element",tagName:"a",properties:{href:"#"+e.clobberPrefix+"fn-"+r,id:e.clobberPrefix+"fnref-"+r+(o>1?"-"+o:""),dataFootnoteRef:!0,ariaDescribedBy:["footnote-label"]},children:[{type:"text",value:String(n)}]};e.patch(t,s);var l={type:"element",tagName:"sup",properties:{},children:[s]};return e.patch(t,l),e.applyData(t,l)}function Oa(e,t){var n=t.referenceType,a="]";if("collapsed"===n?a+="[]":"full"===n&&(a+="["+(t.label||t.identifier)+"]"),"imageReference"===t.type)return{type:"text",value:"!["+t.alt+a};var r=e.all(t),i=r[0];i&&"text"===i.type?i.value="["+i.value:r.unshift({type:"text",value:"["});var o=r[r.length-1];return o&&"text"===o.type?o.value+=a:r.push({type:"text",value:a}),r}function La(e){var t=e.spread;return void 0===t||null===t?e.children.length>1:t}function Aa(e){for(var t=String(e),n=/\r?\n|\r/g,a=n.exec(t),r=0,i=[];a;)i.push(ja(t.slice(r,a.index),r>0,!0),a[0]),r=a.index+a[0].length,a=n.exec(t);return i.push(ja(t.slice(r),r>0,!1)),i.join("")}function ja(e,t,n){var a=0,r=e.length;if(t)for(var i=e.codePointAt(a);9===i||32===i;)a++,i=e.codePointAt(a);if(n)for(var o=e.codePointAt(r-1);9===o||32===o;)r--,o=e.codePointAt(r-1);return r>a?e.slice(a,r):""}var Ma={blockquote:function(e,t){var n={type:"element",tagName:"blockquote",properties:{},children:e.wrap(e.all(t),!0)};return e.patch(t,n),e.applyData(t,n)},break:function(e,t){var n={type:"element",tagName:"br",properties:{},children:[]};return e.patch(t,n),[e.applyData(t,n),{type:"text",value:"\n"}]},code:function(e,t){var n=t.value?t.value+"\n":"",a=t.lang?t.lang.match(/^[^ \t]+(?=[ \t]|$)/):null,r={};a&&(r.className=["language-"+a]);var i={type:"element",tagName:"code",properties:r,children:[{type:"text",value:n}]};return t.meta&&(i.data={meta:t.meta}),e.patch(t,i),i={type:"element",tagName:"pre",properties:{},children:[i=e.applyData(t,i)]},e.patch(t,i),i},delete:function(e,t){var n={type:"element",tagName:"del",properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},emphasis:function(e,t){var n={type:"element",tagName:"em",properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},footnoteReference:Pa,footnote:function(e,t){for(var n=e.footnoteById,a=1;a in n;)a++;var r=String(a);return n[r]={type:"footnoteDefinition",identifier:r,children:[{type:"paragraph",children:t.children}],position:t.position},Pa(e,{type:"footnoteReference",identifier:r,position:t.position})},heading:function(e,t){var n={type:"element",tagName:"h"+t.depth,properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},html:function(e,t){if(e.dangerous){var n={type:"raw",value:t.value};return e.patch(t,n),e.applyData(t,n)}return null},imageReference:function(e,t){var n=e.definition(t.identifier);if(!n)return Oa(e,t);var a={src:ya(n.url||""),alt:t.alt};null!==n.title&&void 0!==n.title&&(a.title=n.title);var r={type:"element",tagName:"img",properties:a,children:[]};return e.patch(t,r),e.applyData(t,r)},image:function(e,t){var n={src:ya(t.url)};null!==t.alt&&void 0!==t.alt&&(n.alt=t.alt),null!==t.title&&void 0!==t.title&&(n.title=t.title);var a={type:"element",tagName:"img",properties:n,children:[]};return e.patch(t,a),e.applyData(t,a)},inlineCode:function(e,t){var n={type:"text",value:t.value.replace(/\r?\n|\r/g," ")};e.patch(t,n);var a={type:"element",tagName:"code",properties:{},children:[n]};return e.patch(t,a),e.applyData(t,a)},linkReference:function(e,t){var n=e.definition(t.identifier);if(!n)return Oa(e,t);var a={href:ya(n.url||"")};null!==n.title&&void 0!==n.title&&(a.title=n.title);var r={type:"element",tagName:"a",properties:a,children:e.all(t)};return e.patch(t,r),e.applyData(t,r)},link:function(e,t){var n={href:ya(t.url)};null!==t.title&&void 0!==t.title&&(n.title=t.title);var a={type:"element",tagName:"a",properties:n,children:e.all(t)};return e.patch(t,a),e.applyData(t,a)},listItem:function(e,t,n){var a=e.all(t),r=n?function(e){var t=!1;if("list"===e.type){t=e.spread||!1;for(var n=e.children,a=-1;!t&&++a<n.length;)t=La(n[a])}return t}(n):La(t),i={},o=[];if("boolean"===typeof t.checked){var s,l=a[0];l&&"element"===l.type&&"p"===l.tagName?s=l:(s={type:"element",tagName:"p",properties:{},children:[]},a.unshift(s)),s.children.length>0&&s.children.unshift({type:"text",value:" "}),s.children.unshift({type:"element",tagName:"input",properties:{type:"checkbox",checked:t.checked,disabled:!0},children:[]}),i.className=["task-list-item"]}for(var c=-1;++c<a.length;){var u=a[c];(r||0!==c||"element"!==u.type||"p"!==u.tagName)&&o.push({type:"text",value:"\n"}),"element"!==u.type||"p"!==u.tagName||r?o.push(u):o.push.apply(o,D(u.children))}var d=a[a.length-1];d&&(r||"element"!==d.type||"p"!==d.tagName)&&o.push({type:"text",value:"\n"});var h={type:"element",tagName:"li",properties:i,children:o};return e.patch(t,h),e.applyData(t,h)},list:function(e,t){var n={},a=e.all(t),r=-1;for("number"===typeof t.start&&1!==t.start&&(n.start=t.start);++r<a.length;){var i=a[r];if("element"===i.type&&"li"===i.tagName&&i.properties&&Array.isArray(i.properties.className)&&i.properties.className.includes("task-list-item")){n.className=["contains-task-list"];break}}var o={type:"element",tagName:t.ordered?"ol":"ul",properties:n,children:e.wrap(a,!0)};return e.patch(t,o),e.applyData(t,o)},paragraph:function(e,t){var n={type:"element",tagName:"p",properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},root:function(e,t){var n={type:"root",children:e.wrap(e.all(t))};return e.patch(t,n),e.applyData(t,n)},strong:function(e,t){var n={type:"element",tagName:"strong",properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},table:function(e,t){var n=e.all(t),a=n.shift(),r=[];if(a){var i={type:"element",tagName:"thead",properties:{},children:e.wrap([a],!0)};e.patch(t.children[0],i),r.push(i)}if(n.length>0){var o={type:"element",tagName:"tbody",properties:{},children:e.wrap(n,!0)},s=Ea(t.children[1]),l=Ta(t.children[t.children.length-1]);s.line&&l.line&&(o.position={start:s,end:l}),r.push(o)}var c={type:"element",tagName:"table",properties:{},children:e.wrap(r,!0)};return e.patch(t,c),e.applyData(t,c)},tableCell:function(e,t){var n={type:"element",tagName:"td",properties:{},children:e.all(t)};return e.patch(t,n),e.applyData(t,n)},tableRow:function(e,t,n){for(var a=n?n.children:void 0,r=0===(a?a.indexOf(t):1)?"th":"td",i=n&&"table"===n.type?n.align:void 0,o=i?i.length:t.children.length,s=-1,l=[];++s<o;){var c=t.children[s],u={},d=i?i[s]:void 0;d&&(u.align=d);var h={type:"element",tagName:r,properties:u,children:[]};c&&(h.children=e.all(c),e.patch(c,h),h=e.applyData(t,h)),l.push(h)}var p={type:"element",tagName:"tr",properties:{},children:e.wrap(l,!0)};return e.patch(t,p),e.applyData(t,p)},text:function(e,t){var n={type:"text",value:Aa(String(t.value))};return e.patch(t,n),e.applyData(t,n)},thematicBreak:function(e,t){var n={type:"element",tagName:"hr",properties:{},children:[]};return e.patch(t,n),e.applyData(t,n)},toml:Ua,yaml:Ua,definition:Ua,footnoteDefinition:Ua};function Ua(){return null}var Da={}.hasOwnProperty;function Fa(e,t){var n=t||{},a=n.allowDangerousHtml||!1,r={};return o.dangerous=a,o.clobberPrefix=void 0===n.clobberPrefix||null===n.clobberPrefix?"user-content-":n.clobberPrefix,o.footnoteLabel=n.footnoteLabel||"Footnotes",o.footnoteLabelTagName=n.footnoteLabelTagName||"h2",o.footnoteLabelProperties=n.footnoteLabelProperties||{className:["sr-only"]},o.footnoteBackLabel=n.footnoteBackLabel||"Back to content",o.unknownHandler=n.unknownHandler,o.passThrough=n.passThrough,o.handlers=l(l({},Ma),n.handlers),o.definition=function(e){var t=Object.create(null);if(!e||!e.type)throw new Error("mdast-util-definitions expected node");return Ca(e,"definition",(function(e){var n=Ra(e.identifier);n&&!za.call(t,n)&&(t[n]=e)})),function(e){var n=Ra(e);return n&&za.call(t,n)?t[n]:null}}(e),o.footnoteById=r,o.footnoteOrder=[],o.footnoteCounts={},o.patch=Na,o.applyData=_a,o.one=function(e,t){return Ga(o,e,t)},o.all=function(e){return Ha(o,e)},o.wrap=Ba,o.augment=i,Ca(e,"footnoteDefinition",(function(e){var t=String(e.identifier).toUpperCase();Da.call(r,t)||(r[t]=e)})),o;function i(e,t){if(e&&"data"in e&&e.data){var n=e.data;n.hName&&("element"!==t.type&&(t={type:"element",tagName:"",properties:{},children:[]}),t.tagName=n.hName),"element"===t.type&&n.hProperties&&(t.properties=l(l({},t.properties),n.hProperties)),"children"in t&&t.children&&n.hChildren&&(t.children=n.hChildren)}if(e){var a="type"in e?e:{position:e};(function(e){return!e||!e.position||!e.position.start||!e.position.start.line||!e.position.start.column||!e.position.end||!e.position.end.line||!e.position.end.column})(a)||(t.position={start:Ea(a),end:Ta(a)})}return t}function o(e,t,n,a){return Array.isArray(n)&&(a=n,n={}),i(e,{type:"element",tagName:t,properties:n||{},children:a||[]})}}function Na(e,t){e.position&&(t.position=function(e){return{start:Ea(e),end:Ta(e)}}(e))}function _a(e,t){var n=t;if(e&&e.data){var a=e.data.hName,r=e.data.hChildren,i=e.data.hProperties;"string"===typeof a&&("element"===n.type?n.tagName=a:n={type:"element",tagName:a,properties:{},children:[]}),"element"===n.type&&i&&(n.properties=l(l({},n.properties),i)),"children"in n&&n.children&&null!==r&&void 0!==r&&(n.children=r)}return n}function Ga(e,t,n){var a=t&&t.type;if(!a)throw new Error("Expected node, got `"+t+"`");return Da.call(e.handlers,a)?e.handlers[a](e,t,n):e.passThrough&&e.passThrough.includes(a)?"children"in t?l(l({},t),{},{children:Ha(e,t)}):t:e.unknownHandler?e.unknownHandler(e,t,n):function(e,t){var n=t.data||{},a=!("value"in t)||Da.call(n,"hProperties")||Da.call(n,"hChildren")?{type:"element",tagName:"div",properties:{},children:Ha(e,t)}:{type:"text",value:t.value};return e.patch(t,a),e.applyData(t,a)}(e,t)}function Ha(e,t){var n=[];if("children"in t)for(var a=t.children,r=-1;++r<a.length;){var i=Ga(e,a[r],t);if(i){if(r&&"break"===a[r-1].type&&(Array.isArray(i)||"text"!==i.type||(i.value=i.value.replace(/^\s+/,"")),!Array.isArray(i)&&"element"===i.type)){var o=i.children[0];o&&"text"===o.type&&(o.value=o.value.replace(/^\s+/,""))}Array.isArray(i)?n.push.apply(n,D(i)):n.push(i)}}return n}function Ba(e,t){var n=[],a=-1;for(t&&n.push({type:"text",value:"\n"});++a<e.length;)a&&n.push({type:"text",value:"\n"}),n.push(e[a]);return t&&e.length>0&&n.push({type:"text",value:"\n"}),n}function qa(e,t){var n=Fa(e,t),a=n.one(e,null),r=function(e){for(var t=[],n=-1;++n<e.footnoteOrder.length;){var a=e.footnoteById[e.footnoteOrder[n]];if(a){for(var r=e.all(a),i=String(a.identifier).toUpperCase(),o=ya(i.toLowerCase()),s=0,c=[];++s<=e.footnoteCounts[i];){var u={type:"element",tagName:"a",properties:{href:"#"+e.clobberPrefix+"fnref-"+o+(s>1?"-"+s:""),dataFootnoteBackref:!0,className:["data-footnote-backref"],ariaLabel:e.footnoteBackLabel},children:[{type:"text",value:"\u21a9"}]};s>1&&u.children.push({type:"element",tagName:"sup",children:[{type:"text",value:String(s)}]}),c.length>0&&c.push({type:"text",value:" "}),c.push(u)}var d=r[r.length-1];if(d&&"element"===d.type&&"p"===d.tagName){var h,p=d.children[d.children.length-1];p&&"text"===p.type?p.value+=" ":d.children.push({type:"text",value:" "}),(h=d.children).push.apply(h,c)}else r.push.apply(r,c);var f={type:"element",tagName:"li",properties:{id:e.clobberPrefix+"fn-"+o},children:e.wrap(r,!0)};e.patch(a,f),t.push(f)}}if(0!==t.length)return{type:"element",tagName:"section",properties:{dataFootnotes:!0,className:["footnotes"]},children:[{type:"element",tagName:e.footnoteLabelTagName,properties:l(l({},JSON.parse(JSON.stringify(e.footnoteLabelProperties))),{},{id:"footnote-label"}),children:[{type:"text",value:e.footnoteLabel}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:e.wrap(t,!0)},{type:"text",value:"\n"}]}}(n);return r&&a.children.push({type:"text",value:"\n"},r),Array.isArray(a)?{type:"root",children:a}:a}var Wa=function(e,t){return e&&"run"in e?function(e,t){return function(n,a,r){e.run(qa(n,t),a,(function(e){r(e)}))}}(e,t):function(e){return function(t){return qa(t,e)}}(e||t)};var Va=n(7),$a=p((function e(t,n,a){d(this,e),this.property=t,this.normal=n,a&&(this.space=a)}));function Qa(e,t){for(var n={},a={},r=-1;++r<e.length;)Object.assign(n,e[r].property),Object.assign(a,e[r].normal);return new $a(n,a,t)}function Ka(e){return e.toLowerCase()}$a.prototype.property={},$a.prototype.normal={},$a.prototype.space=null;var Ya=p((function e(t,n){d(this,e),this.property=t,this.attribute=n}));Ya.prototype.space=null,Ya.prototype.boolean=!1,Ya.prototype.booleanish=!1,Ya.prototype.overloadedBoolean=!1,Ya.prototype.number=!1,Ya.prototype.commaSeparated=!1,Ya.prototype.spaceSeparated=!1,Ya.prototype.commaOrSpaceSeparated=!1,Ya.prototype.mustUseProperty=!1,Ya.prototype.defined=!1;var Za=0,Xa=ir(),Ja=ir(),er=ir(),tr=ir(),nr=ir(),ar=ir(),rr=ir();function ir(){return Math.pow(2,++Za)}var or=Object.keys(t),sr=function(e){m(a,e);var n=S(a);function a(e,r,i,o){var s;d(this,a);var l=-1;if(lr(v(s=n.call(this,e,r)),"space",o),"number"===typeof i)for(;++l<or.length;){var c=or[l];lr(v(s),or[l],(i&t[c])===t[c])}return s}return p(a)}(Ya);function lr(e,t,n){n&&(e[t]=n)}sr.prototype.defined=!0;var cr={}.hasOwnProperty;function ur(e){var t,n={},a={};for(t in e.properties)if(cr.call(e.properties,t)){var r=e.properties[t],i=new sr(t,e.transform(e.attributes||{},t),r,e.space);e.mustUseProperty&&e.mustUseProperty.includes(t)&&(i.mustUseProperty=!0),n[t]=i,a[Ka(t)]=t,a[Ka(i.attribute)]=t}return new $a(n,a,e.space)}var dr=ur({space:"xlink",transform:function(e,t){return"xlink:"+t.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),hr=ur({space:"xml",transform:function(e,t){return"xml:"+t.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function pr(e,t){return t in e?e[t]:t}function fr(e,t){return pr(e,t.toLowerCase())}var mr=ur({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:fr,properties:{xmlns:null,xmlnsXLink:null}}),gr=ur({transform:function(e,t){return"role"===t?t:"aria-"+t.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:Ja,ariaAutoComplete:null,ariaBusy:Ja,ariaChecked:Ja,ariaColCount:tr,ariaColIndex:tr,ariaColSpan:tr,ariaControls:nr,ariaCurrent:null,ariaDescribedBy:nr,ariaDetails:null,ariaDisabled:Ja,ariaDropEffect:nr,ariaErrorMessage:null,ariaExpanded:Ja,ariaFlowTo:nr,ariaGrabbed:Ja,ariaHasPopup:null,ariaHidden:Ja,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:nr,ariaLevel:tr,ariaLive:null,ariaModal:Ja,ariaMultiLine:Ja,ariaMultiSelectable:Ja,ariaOrientation:null,ariaOwns:nr,ariaPlaceholder:null,ariaPosInSet:tr,ariaPressed:Ja,ariaReadOnly:Ja,ariaRelevant:null,ariaRequired:Ja,ariaRoleDescription:nr,ariaRowCount:tr,ariaRowIndex:tr,ariaRowSpan:tr,ariaSelected:Ja,ariaSetSize:tr,ariaSort:null,ariaValueMax:tr,ariaValueMin:tr,ariaValueNow:tr,ariaValueText:null,role:null}}),br=ur({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:fr,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:ar,acceptCharset:nr,accessKey:nr,action:null,allow:null,allowFullScreen:Xa,allowPaymentRequest:Xa,allowUserMedia:Xa,alt:null,as:null,async:Xa,autoCapitalize:null,autoComplete:nr,autoFocus:Xa,autoPlay:Xa,capture:Xa,charSet:null,checked:Xa,cite:null,className:nr,cols:tr,colSpan:null,content:null,contentEditable:Ja,controls:Xa,controlsList:nr,coords:tr|ar,crossOrigin:null,data:null,dateTime:null,decoding:null,default:Xa,defer:Xa,dir:null,dirName:null,disabled:Xa,download:er,draggable:Ja,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:Xa,formTarget:null,headers:nr,height:tr,hidden:Xa,high:tr,href:null,hrefLang:null,htmlFor:nr,httpEquiv:nr,id:null,imageSizes:null,imageSrcSet:null,inputMode:null,integrity:null,is:null,isMap:Xa,itemId:null,itemProp:nr,itemRef:nr,itemScope:Xa,itemType:nr,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:Xa,low:tr,manifest:null,max:null,maxLength:tr,media:null,method:null,min:null,minLength:tr,multiple:Xa,muted:Xa,name:null,nonce:null,noModule:Xa,noValidate:Xa,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:Xa,optimum:tr,pattern:null,ping:nr,placeholder:null,playsInline:Xa,poster:null,preload:null,readOnly:Xa,referrerPolicy:null,rel:nr,required:Xa,reversed:Xa,rows:tr,rowSpan:tr,sandbox:nr,scope:null,scoped:Xa,seamless:Xa,selected:Xa,shape:null,size:tr,sizes:null,slot:null,span:tr,spellCheck:Ja,src:null,srcDoc:null,srcLang:null,srcSet:null,start:tr,step:null,style:null,tabIndex:tr,target:null,title:null,translate:null,type:null,typeMustMatch:Xa,useMap:null,value:Ja,width:tr,wrap:null,align:null,aLink:null,archive:nr,axis:null,background:null,bgColor:null,border:tr,borderColor:null,bottomMargin:tr,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:Xa,declare:Xa,event:null,face:null,frame:null,frameBorder:null,hSpace:tr,leftMargin:tr,link:null,longDesc:null,lowSrc:null,marginHeight:tr,marginWidth:tr,noResize:Xa,noHref:Xa,noShade:Xa,noWrap:Xa,object:null,profile:null,prompt:null,rev:null,rightMargin:tr,rules:null,scheme:null,scrolling:Ja,standby:null,summary:null,text:null,topMargin:tr,valueType:null,version:null,vAlign:null,vLink:null,vSpace:tr,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:Xa,disableRemotePlayback:Xa,prefix:null,property:null,results:tr,security:null,unselectable:null}}),yr=ur({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:pr,properties:{about:rr,accentHeight:tr,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:tr,amplitude:tr,arabicForm:null,ascent:tr,attributeName:null,attributeType:null,azimuth:tr,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:tr,by:null,calcMode:null,capHeight:tr,className:nr,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:tr,diffuseConstant:tr,direction:null,display:null,dur:null,divisor:tr,dominantBaseline:null,download:Xa,dx:null,dy:null,edgeMode:null,editable:null,elevation:tr,enableBackground:null,end:null,event:null,exponent:tr,externalResourcesRequired:null,fill:null,fillOpacity:tr,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:ar,g2:ar,glyphName:ar,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:tr,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:tr,horizOriginX:tr,horizOriginY:tr,id:null,ideographic:tr,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:tr,k:tr,k1:tr,k2:tr,k3:tr,k4:tr,kernelMatrix:rr,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:tr,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:tr,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:tr,overlineThickness:tr,paintOrder:null,panose1:null,path:null,pathLength:tr,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:nr,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:tr,pointsAtY:tr,pointsAtZ:tr,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:rr,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:rr,rev:rr,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:rr,requiredFeatures:rr,requiredFonts:rr,requiredFormats:rr,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:tr,specularExponent:tr,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:tr,strikethroughThickness:tr,string:null,stroke:null,strokeDashArray:rr,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:tr,strokeOpacity:tr,strokeWidth:null,style:null,surfaceScale:tr,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:rr,tabIndex:tr,tableValues:null,target:null,targetX:tr,targetY:tr,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:rr,to:null,transform:null,u1:null,u2:null,underlinePosition:tr,underlineThickness:tr,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:tr,values:null,vAlphabetic:tr,vMathematical:tr,vectorEffect:null,vHanging:tr,vIdeographic:tr,version:null,vertAdvY:tr,vertOriginX:tr,vertOriginY:tr,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:tr,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),vr=Qa([hr,dr,mr,gr,br],"html"),wr=Qa([hr,dr,mr,gr,yr],"svg");function Sr(e){if(e.allowedElements&&e.disallowedElements)throw new TypeError("Only one of `allowedElements` and `disallowedElements` should be defined");if(e.allowedElements||e.disallowedElements||e.allowElement)return function(t){Ca(t,"element",(function(t,n,a){var r,i=a;if(e.allowedElements?r=!e.allowedElements.includes(t.tagName):e.disallowedElements&&(r=e.disallowedElements.includes(t.tagName)),!r&&e.allowElement&&"number"===typeof n&&(r=!e.allowElement(t,n,i)),r&&"number"===typeof n){var o;if(e.unwrapDisallowed&&t.children)(o=i.children).splice.apply(o,[n,1].concat(D(t.children)));else i.children.splice(n,1);return n}}))}}var kr=n(599);function xr(e){var t=e&&"object"===typeof e&&"text"===e.type?e.value||"":e;return"string"===typeof t&&""===t.replace(/[ \t\n\f\r]/g,"")}var Cr=/^data[-\w.:]+$/i,Er=/-[a-z]/g,Tr=/[A-Z]/g;function Ir(e){return"-"+e.toLowerCase()}function zr(e){return e.charAt(1).toUpperCase()}var Rr={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"};var Pr=n(426),Or=["http","https","mailto","tel"];function Lr(e){var t=(e||"").trim(),n=t.charAt(0);if("#"===n||"/"===n)return t;var a=t.indexOf(":");if(-1===a)return t;for(var r=-1;++r<Or.length;){var i=Or[r];if(a===i.length&&t.slice(0,i.length).toLowerCase()===i)return t}return-1!==(r=t.indexOf("?"))&&a>r||-1!==(r=t.indexOf("#"))&&a>r?t:"javascript:void(0)"}var Ar={}.hasOwnProperty,jr=new Set(["table","thead","tbody","tfoot","tr"]);function Mr(e,t){for(var n,a=[],r=-1;++r<t.children.length;)"element"===(n=t.children[r]).type?a.push(Ur(e,n,r,t)):"text"===n.type?"element"===t.type&&jr.has(t.tagName)&&xr(n)||a.push(n.value):"raw"!==n.type||e.options.skipHtml||a.push(n.value);return a}function Ur(e,t,n,r){var i,o=e.options,s=void 0===o.transformLinkUri?Lr:o.transformLinkUri,l=e.schema,c=t.tagName,u={},d=l;if("html"===l.space&&"svg"===c&&(d=wr,e.schema=d),t.properties)for(i in t.properties)Ar.call(t.properties,i)&&Fr(u,i,t.properties[i],e);"ol"!==c&&"ul"!==c||e.listDepth++;var h=Mr(e,t);"ol"!==c&&"ul"!==c||e.listDepth--,e.schema=l;var p,f=t.position||{start:{line:null,column:null,offset:null},end:{line:null,column:null,offset:null}},m=o.components&&Ar.call(o.components,c)?o.components[c]:c,g="string"===typeof m||m===a.Fragment;if(!kr.isValidElementType(m))throw new TypeError("Component for name `".concat(c,"` not defined or is not renderable"));if(u.key=[c,f.start.line,f.start.column,n].join("-"),"a"===c&&o.linkTarget&&(u.target="function"===typeof o.linkTarget?o.linkTarget(String(u.href||""),t.children,"string"===typeof u.title?u.title:null):o.linkTarget),"a"===c&&s&&(u.href=s(String(u.href||""),t.children,"string"===typeof u.title?u.title:null)),g||"code"!==c||"element"!==r.type||"pre"===r.tagName||(u.inline=!0),g||"h1"!==c&&"h2"!==c&&"h3"!==c&&"h4"!==c&&"h5"!==c&&"h6"!==c||(u.level=Number.parseInt(c.charAt(1),10)),"img"===c&&o.transformImageUri&&(u.src=o.transformImageUri(String(u.src||""),String(u.alt||""),"string"===typeof u.title?u.title:null)),!g&&"li"===c&&"element"===r.type){var b=function(e){var t=-1;for(;++t<e.children.length;){var n=e.children[t];if("element"===n.type&&"input"===n.tagName)return n}return null}(t);u.checked=b&&b.properties?Boolean(b.properties.checked):null,u.index=Dr(r,t),u.ordered="ol"===r.tagName}return g||"ol"!==c&&"ul"!==c||(u.ordered="ol"===c,u.depth=e.listDepth),"td"!==c&&"th"!==c||(u.align&&(u.style||(u.style={}),u.style.textAlign=u.align,delete u.align),g||(u.isHeader="th"===c)),g||"tr"!==c||"element"!==r.type||(u.isHeader=Boolean("thead"===r.tagName)),o.sourcePos&&(u["data-sourcepos"]=[(p=f).start.line,":",p.start.column,"-",p.end.line,":",p.end.column].map(String).join("")),!g&&o.rawSourcePos&&(u.sourcePosition=t.position),!g&&o.includeElementIndex&&(u.index=Dr(r,t),u.siblingCount=Dr(r)),g||(u.node=t),h.length>0?a.createElement(m,u,h):a.createElement(m,u)}function Dr(e,t){for(var n=-1,a=0;++n<e.children.length&&e.children[n]!==t;)"element"===e.children[n].type&&a++;return a}function Fr(e,t,n,a){var r=function(e,t){var n=Ka(t),a=t,r=Ya;if(n in e.normal)return e.property[e.normal[n]];if(n.length>4&&"data"===n.slice(0,4)&&Cr.test(t)){if("-"===t.charAt(4)){var i=t.slice(5).replace(Er,zr);a="data"+i.charAt(0).toUpperCase()+i.slice(1)}else{var o=t.slice(4);if(!Er.test(o)){var s=o.replace(Tr,Ir);"-"!==s.charAt(0)&&(s="-"+s),t="data"+s}}r=sr}return new r(a,t)}(a.schema,t),i=n;null!==i&&void 0!==i&&i===i&&(Array.isArray(i)&&(i=r.commaSeparated?function(e,t){var n=t||{};return(""===e[e.length-1]?[].concat(D(e),[""]):e).join((n.padRight?" ":"")+","+(!1===n.padLeft?"":" ")).trim()}(i):i.join(" ").trim()),"style"===r.property&&"string"===typeof i&&(i=function(e){var t={};try{Pr(e,n)}catch(a){}return t;function n(e,n){var a="-ms-"===e.slice(0,4)?"ms-".concat(e.slice(4)):e;t[a.replace(/-([a-z])/g,Nr)]=n}}(i)),r.space&&r.property?e[Ar.call(Rr,r.property)?Rr[r.property]:r.property]=i:r.attribute&&(e[r.attribute]=i))}function Nr(e,t){return t.toUpperCase()}var _r={}.hasOwnProperty,Gr={plugins:{to:"remarkPlugins",id:"change-plugins-to-remarkplugins"},renderers:{to:"components",id:"change-renderers-to-components"},astPlugins:{id:"remove-buggy-html-in-markdown-parser"},allowDangerousHtml:{id:"remove-buggy-html-in-markdown-parser"},escapeHtml:{id:"remove-buggy-html-in-markdown-parser"},source:{to:"children",id:"change-source-to-children"},allowNode:{to:"allowElement",id:"replace-allownode-allowedtypes-and-disallowedtypes"},allowedTypes:{to:"allowedElements",id:"replace-allownode-allowedtypes-and-disallowedtypes"},disallowedTypes:{to:"disallowedElements",id:"replace-allownode-allowedtypes-and-disallowedtypes"},includeNodeIndex:{to:"includeElementIndex",id:"change-includenodeindex-to-includeelementindex"}};function Hr(e){for(var t in Gr)if(_r.call(Gr,t)&&_r.call(e,t)){var n=Gr[t];console.warn("[react-markdown] Warning: please ".concat(n.to?"use `".concat(n.to,"` instead of"):"remove"," `").concat(t,"` (see <").concat("https://github.com/remarkjs/react-markdown/blob/main/changelog.md","#").concat(n.id,"> for more info)")),delete Gr[t]}var r=pt().use(ba).use(e.remarkPlugins||[]).use(Wa,l(l({},e.remarkRehypeOptions),{},{allowDangerousHtml:!0})).use(e.rehypePlugins||[]).use(Sr,e),i=new rt;"string"===typeof e.children?i.value=e.children:void 0!==e.children&&null!==e.children&&console.warn("[react-markdown] Warning: please pass a string as `children` (not: `".concat(e.children,"`)"));var o=r.runSync(r.parse(i),i);if("root"!==o.type)throw new TypeError("Expected a `root` node");var s=a.createElement(a.Fragment,{},Mr({options:e,schema:vr,listDepth:0},o));return e.className&&(s=a.createElement("div",{className:e.className},s)),s}Hr.propTypes={children:Va.string,className:Va.string,allowElement:Va.func,allowedElements:Va.arrayOf(Va.string),disallowedElements:Va.arrayOf(Va.string),unwrapDisallowed:Va.bool,remarkPlugins:Va.arrayOf(Va.oneOfType([Va.object,Va.func,Va.arrayOf(Va.oneOfType([Va.bool,Va.string,Va.object,Va.func,Va.arrayOf(Va.any)]))])),rehypePlugins:Va.arrayOf(Va.oneOfType([Va.object,Va.func,Va.arrayOf(Va.oneOfType([Va.bool,Va.string,Va.object,Va.func,Va.arrayOf(Va.any)]))])),sourcePos:Va.bool,rawSourcePos:Va.bool,skipHtml:Va.bool,includeElementIndex:Va.bool,transformLinkUri:Va.oneOfType([Va.func,Va.bool]),linkTarget:Va.oneOfType([Va.func,Va.string]),transformImageUri:Va.func,components:Va.object};var Br=new RegExp(/^\w+:/),qr=function(e){m(n,e);var t=S(n);function n(){return d(this,n),t.apply(this,arguments)}return p(n,[{key:"render",value:function(){var e=this,t=this.props.tech,n="";return n=n+"# "+t.name+"\n",t.slides.forEach((function(t){if(!e.props.slide||e.props.slide.subtitle===t.subtitle){n=n+"### "+t.subtitle+"\n";var a=!1;t.texts.forEach((function(e){var t=e.startsWith("* "),r=Br.exec(e);r&&(e=e.replace(r[0],"__"+r[0]+"__")),n=n+(a&&!t?"\n":"")+e+"\n"+(t?"":"\n"),a=t})),(t.imageURLs||[]).forEach((function(e){n=n+(a?"\n":"")+"![Image]("+e+")\n",a=!1}))}})),n+="### Sources\n",t.sources.forEach((function(t){var a=e.props.sources[t];a?n=n+"["+a.description+"]("+a.url+")  \n":console.error("Unknown source: "+a)})),(0,E.jsx)(E.Fragment,{children:(0,E.jsx)(Hr,{children:n,style:{fontFamily:"WorkSans"}})})}}]),n}(a.Component),Wr=JSON.parse('[{"uuid":"e17143ca39f9723fc4640df4e014c475676fa216","index":1},{"uuid":"0bf2ca4937e639b25bee86072d4aa7d72cef9f3b","index":2},{"uuid":"b9b6f8d3bec5aa2e08be3571d54e5cd92a2007e8","index":3,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"1","total":"5"},"title":"Road to Dynamic Server Meshing","subtitle":"","texts":["Welcome to the Unofficial Road to Dynamic Server Meshing! This presentation is trying to offer a centralized place about almost everything related to Dynamic Server Meshing."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/4/2/1/7/3a28ad54a1e87d3e9e82d69287e1200.png"},{"uuid":"0b14bb137a5afeb88e0508e31775daccc435ead5","index":4,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"2","total":"5"},"title":"Road to Dynamic Server Meshing","subtitle":"","texts":["We will go over the the major and minor technologies that create the functionality of Dynamic Server Meshing. For each tech feature, an overview slide summarizes the technical challenges and CIG\'s approach to enable the required functionality. For all of the major tech features, there have been additional slides provided which dive into more detail.","There are also some introductory topics which go over some of the basic concepts in hardware, software and video games, which try to convey a basic understanding of their inner workings and limitations. Of course, you can skip them and jump right in by reading about the Object Container tech. But I will always recommend checking the introductory topics out if you do have the time and interest.","What to expect from this presentation:"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/1/4/0/1/dd320a147fdb35ef5cdf6ff31b41200.png"},{"uuid":"b5aad4e67edfb7d05a04674624fcbf345c984508","index":5,"pageIndicators":{"current":"3","total":"5"},"title":"Road to Dynamic Server Meshing","subtitle":"How to navigate this presentation","texts":["You can see the page number of the current topic in the bottom right corner of your screen (e.g. for this slide it says 5 total slides and we are currently on the 3rd slide). To go back and forth between the slides, you can use the left and right arrow keys on your keyboard or the buttons at the bottom of the page. Pressing backspace always brings you up one level.","You can check out individual technologies freely by clicking on them with your mouse. You can also zoom in and out of topics with your mouse wheel. However I recommend reading this presentation in order, because of the nature of these technologies building upon and utilizing each other."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/4/8/2/d/a08d2b24be480dbc756482e70881200.png"},{"uuid":"e269243e8625b98d7da723c0b66f2ba4fdfcde71","index":6,"imageURLs":["https://media.preziusercontent.com/media/b/f/c/d/d/8b930ec4032a4ea3a6293ac6b3c.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"4","total":"5"},"title":"Road to Dynamic Server Meshing","subtitle":"Visual Examples","texts":["Throughout this presentation, I tried to incorporate images to help visualize how these technologies work and what their purposes are.","So lets get started! The usual game level is three dimensional and therefore has three axis (x, y and z). We will leave out the z dimension and represent the level as a flat 2D area. We do this for simplicity reasons, but remember that all the presented technologies are actually operating in 3D. A first example of a level can be seen in the image below. It features two players (blue and red) inside the level.","On the following slides you find further explanations and visual representations of technical topics that will lay the foundation for all the subsequent technologies."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/7/e/e/4/f09069a4f45a1890295e5dd33971200.png"},{"uuid":"0b07510d1656606d85cd16ea0edc6ce69250ecde","index":7,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"5","total":"5"},"title":"Road to Dynamic Server Meshing","subtitle":"","texts":["Even though there was a great effort made to use official information and sources, be aware that some aspects of how these technologies work are deduced and therefore speculated. Whenever that was the case, I tried to make sure that it was noted as such, either in the slide title or in the text itself, so have a lookout for them. Therefore, the information presented here are my own understanding at this moment in time and are therefore subject to change. In the light of additional insights, the information in this presentation will be updated accordingly. Feel free to contribute with information that I may have missed.","Feel free to check out the sources that were used in creating this overview for yourself. I listed all of them at the end of this presentation.","If you feel like something is missing, incorrect, incomplete, unclear or you just have a question or just want to say hello, feel free to notify me on Spectrum:","https://robertsspaceindustries.com/spectrum/community/SC/forum/3/thread/road-to-dynamic-server-meshing-tech-overview-with-","Quick Disclaimer before we start"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/4/e/d/e/7af9e9f48fa94c8f42f1dd784ae1200.png"},{"uuid":"25feff7813fde15ceb6a6b5e020aedcf09e2a4c8","index":8},{"uuid":"df410d6e54a35cc1e3629aa4b66f5c79b5de8f38","index":9,"pageIndicators":{"current":"1","total":"5"},"title":"Road to Dynamic Server Meshing - Introduction","subtitle":"How does the computer compute?","texts":["1","0","when electrons are moving,","when electrons are not moving.","Let us start from the very bottom and build our way up:","Electrons move through conduit material.","This allows us to represent different states:","We can then use tiny transistors to control this flow of electrons.","A transistor acts like a switch. But instead of manually switching it by hand - like we would a normal button switch - a transistor can be automatically controlled, by another electron flow. This allows state/data to change automatically.","When putting multiple transistors together in specific configurations, they create logic gates. And putting multiple logic gates together, one can perform binary math, comparisons, etc."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/3/4/8/f/52fb5e048c9ad388fca1a47fc701200.png"},{"uuid":"c620f297f475d58c71584816a85738b4bd53821a","index":10,"pageIndicators":{"current":"2","total":"5"},"title":"Road to Dynamic Server Meshing - Introduction","subtitle":"How does the computer compute?","texts":["Since electrons require time to flow through the logic gates, to give them enough time to do so, we introduce a CPU clock. And we only check the resulting state at certain time intervals, meaning after each clock cycle.","Depending on the clock speed, modern CPUs can have billions of clock cycles each second. For example a CPU with a clock speed of 4.0 GHz can perform 4.000.000.000 clock cycles per second! That makes each clock cycle last 0.25 nanosecond (that\'s 0.00000000025 seconds). Light in a vacuum merely travels 7 centimeters in that time span (~2,8 inches)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/e/8/b/8/44f53fb4aec98556a64a91c3c311200.png"},{"uuid":"0783af19c840f7bc68792dd7b4e6ae4821f98e1b","index":11,"pageIndicators":{"current":"3","total":"5"},"title":"Road to Dynamic Server Meshing - Introduction","subtitle":"How does the computer compute?","texts":["In each clock cycle, we can tell the CPU what to compute. Rather than having to tell the CPU where electrons need to flow, the CPU provides us with a defined set of instructions, a CPU instruction set, which abstracts all of that low-level hardware stuff away for us. In each clock cycle, we can have the CPU execute one such instruction.","Different instructions are responsible for different things: some instructions do math, others compare, move data around in memory or even alter the execution of our program.","CPU instructions are the interface between the hardware (our logic gates) and the software. Executing multiple CPU instructions in sequence (or even in parallel) allows us to perform more complex calculations and logic. Programs emerge.","Note: These days, modern CPUs are further optimized and can sometimes perform multiple instructions in one clock cycle.","Note: All software programs written in a programming language are translated into these CPU instructions at some point. The CPU does not know about any programming languages, except its instruction set. But since instructions are very very atomic operations, programming languages abstract these away to help us create complex programs easier and faster."],"sources":["w12"],"originalSlideImageURL":""},{"uuid":"b35a07e91fd34d61ed56389f90e7a3aa7a22431f","index":12,"pageIndicators":{"current":"4","total":"5"},"title":"Road to Dynamic Server Meshing - Introduction","subtitle":"How does the computer compute?","texts":["In video games, we can use these instructions to simulate a game world. This game world is directly made up of game objects. Updating each game object requires a certain amount of instructions to perform its simulation logic. For example, their change in position and orientation in the game world, as well as other state attributes of the object (e.g. a door might be in an open, close, opening or closing state).","But remember that there can only be one instruction executed in each clock cycle? And we \\"only\\" have e.g. 4.0GHz = 4.000.000.000 clock cycles (and thus instructions) per second available? This means we are limited in the amount of instructions per second. And this consequently means we are also limited in the number of game objects we can update and simulate. Although, the number of instructions a game object requires may vary, as it depends on the complexity of the game object.","So when adding more and more game objects, eventually, we won\'t have enough instructions available to update all of them in a timely manner. We are not allowed to skip the update of game objects as that would seemingly \\"freeze\\" parts of the game world. Instead, the next round of updates for ALL game objects is delayed. This is usually referred to as \'low tickrate\' and will talk more about tickrate and the game loop later."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/e/2/3/5/5730ddc4ac3a3abfe244a3a17d21200.png"},{"uuid":"ff8cf1a14f36622826268327e896e43231c0bf03","index":13,"pageIndicators":{"current":"5","total":"5"},"title":"Road to Dynamic Server Meshing - Introduction","subtitle":"How does the computer compute?","texts":["Of course to support more game objects, we could simply throw faster hardware at the problem. Use a CPU with 5.0GHz instead. Done! However, this only works up to a certain point. There are hard limits to hardware and better hardware becomes exponentially more expensive as well. Using better hardware is called vertical scaling.","Another and more promising option is horizontal scaling. Here, we simply use another CPU, an additional computer. By using multiple computers, each one with a CPU, connecting them via a network and having them exchange relevant data, they can work on a much larger workload.","If done right, as in having solved memory management, loading of data (memory is still limited resource on each machine, so as the game world grows not every game object needs to be loaded into memory), game simulation (a game object doesnt have to be simulated on all machines, but just one), networking (data is only send to computers that need it) and persistence (read and write data in databases for later use), then you have huge amounts of processing power at your finger tips. You could execute trillions of instructions across hundreds of computers/servers each second and simulate a large, game object-rich game world.","Note: As is often the case, it is more complicated than this, but this is a good first introduction of what Dynamic Server Meshing is about."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/8/2/0/2/1e39aa240a89f5dd24a58f809101200.png"},{"uuid":"8ce8ce18b182f72744c9e5addd1a8c6bd57d51a7","index":14},{"uuid":"9391b307a9e68b3f3760330e864e7729367bdfd8","index":15,"imageURLs":["https://media.preziusercontent.com/media/d/0/d/5/a/f709d6b4bd496c1a59dffbc6d0c.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"1","total":"5"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Overview of Computer Hardware and its Limitations","texts":["Some more technical background information first! A computer usually consists of 5 major parts:","* Drive (HDD/SSD/NVMe)","* Random Access Memory (RAM)","* Central Processing Unit (CPU)","* Graphics Processing Unit (GPU)","* Mainboard"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/0/4/0/8/44ba73c45c78b79cb9162257b7a1200.png"},{"uuid":"773e921a71f86f2790c6ef8d5179bce3efe8ff7a","index":16,"imageURLs":["https://media.preziusercontent.com/media/d/0/d/5/a/f709d6b4bd496c1a59dffbc6d0c.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"2","total":"5"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Overview of Computer Hardware and its Limitations","texts":["Drive (HDD/SSD):","Digital data can be persistently stored on drives. Data can be loaded from and saved to","the drive. Data can be stored on mass, like terabytes of data on a single drive, since drives can be cheaply produced. Hard Disk Drives (HDDs) have mechanical parts and are therefore slower when it comes to read and write speeds. Solid State Drives (SSDs) are not mechanical and therefore data can be directly read and written, resulting in much faster read and write speed performances, but consequently are more expensive.","Random Access Memory (RAM):","Another way to store data is in the Random Access Memory. This type of memory performs even faster than SSDs when it comes to read and write speeds, however makes it even more expensive which is why RAM is usually in the ranges of a few gigabytes (4-32GB), not terabytes like drives are. However, data in RAM is volatile, meaning that if power is cut, the data stored in the RAM is lost, making RAM a great (because fast) storage while the computer is running and processing data, but useless as a long term storage device once the computer is turned off."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/6/0/b/1/6ff4d264a7a9fa6e1f5126f7bc61200.png"},{"uuid":"a7deb5237c31d790cee12f8077c46cedd3ad7fa2","index":17,"imageURLs":["https://media.preziusercontent.com/media/d/0/d/5/a/f709d6b4bd496c1a59dffbc6d0c.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"3","total":"5"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Overview of Computer Hardware and its Limitations","texts":["Central Processing Unit (CPU):","The CPU is responsible for the execution and monitoring of code instructions which allows the computer to be programmed by software for various purposes. The CPU transforms data from one state/form into another by making calculations and logic comparisons. While the CPU itself has a few MB of very fast memory (L1, L2 and L3 memory cache), the CPU still heavily utilizes the RAM to load and save data. The program that runs on the CPU determines which data is loaded from the drive into RAM (as well as saving data from the RAM onto the drive). This usually happens when the program is started, but data can also be loaded/streamed-in while it is running.","Graphics Processing Unit (GPU):","While the CPU is great at certain tasks like program execution, it usually is not great at rendering digital images fast. Another processing unit designed specifically for rendering graphics called the GPU allows for much faster and better results. It also has its own form of memory, the VRAM, to store textures and assets. The CPU usually tells the GPU via a rendering API what it should render.","Mainboard:","All these previous parts are connected with each other via the mainboard. All computer components communicate over connections, called the bus system (e.g. PCI and SATA). They basically are data highways from one component to another, the flow of data being controlled by the CPU."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/1/7/5/8/5cc2c0b4bd289097f576ddde09e1200.png"},{"uuid":"5a2c506b12eda0e5b7d35a515b9d749038cafea9","index":18,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png","https://media.preziusercontent.com/media/c/b/0/5/d/a2a42b84144b875e82266e0a7ab.png"],"pageIndicators":{"current":"4","total":"5"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Overview of Computer Hardware and its Limitations","texts":["So what do all of these components do? It comes down to executing code: commands which instruct the computer to perform math and logic on the data in memory. These code instructions alter the data, turning that data from one state into another state. And depending on the processor architecture, cores and clock speed (e.g. 4.8GHz) there can be multiple billion instructions executed per second. Those results are then send over a network and/or used to create an image on our monitor screens.","In the example on the right, we have four instructions that load two values from memory (from the two memory addresses 128 and 256) then perform addition on them and the result is stored back into memory at memory address 128 (essentially overwriting the previous value that was stored there). In the context of a videogame, these could be the position x and the velocity vx of our player character. So the computer calculated our character\'s next position in the level. More on this \\"Game Update Loop\\" chapter in this Introduction.","1) load r1, 128","2) load r2, 256","3) add r3, r1, r2","4) store r1, 128"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/1/9/3/c/216361246edb07d29f26708c7d11200.png"},{"uuid":"8fa2382178d50dd5ca66f51816662c6ab00446db","index":19,"imageURLs":["https://media.preziusercontent.com/media/d/0/d/5/a/f709d6b4bd496c1a59dffbc6d0c.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"5","total":"5"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Overview of Computer Hardware and its Limitations","texts":["In general, all computer components have their own limitations. Memory (drives","and RAM) are limited by how much maximum data capacity they have as well","as how fast they can read and write data (and if they are volatile or not).","Meanwhile, processing units (CPUs and GPUs) are mostly about how many code","instructions they can execute each second, as well as how fast they are able to access the data from the memory devices.","With these limitations all software is created, games included. CIG set out to create a large universe with thousands of players, NPCs and other entities which all require to be in memory and need to be computed by the CPU in the game loop (and rendered on the GPU). Not even the most powerful computer will be capable of providing that much memory and computational power on its own.","Therefore, the load has to be distributed onto multiple computers/CPUs and connected over a network, to let the computers communicate and exchange only the currently relevant data with each other. Mainly the game servers need this functionality while the players only need to connect to a small amount of game servers at any given point in time and load and compute only the entities close to them. Such a system is generally called a Server Mesh, because multiple servers are being meshed together over a network (local or over the internet). That makes multiple computers act as one large one with a lot of memory and lots of computation power. This is the system Star Citizen plans to utilize to create its vast and rich universe."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/8/d/0/0/76a2ac04863acf2683a6354b7931200.png"},{"uuid":"020103073acba628305b1694f64493acaf036522","index":20},{"uuid":"9aee02ad5df90309b2ad11bac3a7691c0e807713","index":21,"imageURLs":["https://media.preziusercontent.com/media/3/2/e/3/5/3c5ccd0486b958f8c74089399d5.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"1","total":"1"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Networking - The Client-Server Architecture","texts":["Since Star Citizen is a multiplayer online game with many players playing in the same game world, the data has to be shared and communicated between the players over the internet. Star Citizen uses the common client-server architecture to accomplish this.","In such an architecture, you usually have a computer that acts as the server and other computers which act as the clients. All computers are connected over a network (e.g. the internet). The clients can connect themselves to the server and then the server and the clients can exchange information over the network between each other. Clients don\'t establish connections between each other, and instead all clients are connected to the server. The server distributes/relays the information from one client to the other clients.","In the case of Star Citizen, each player starts their game and their game client will establish a connection to a game server. The game server runs just another instance of the game, just like the player game clients. However, the server instance is special because it does not actually act as a player. The server simulates the game world while listening to the incoming actions from the player clients, then sends the resulting changes back to all clients which will then in turn update their own game world accordingly.","Since communication between multiple computers over a network always introduces latency between the sending and receiving of data packages, the state of the game world will always be slightly different on each player client and the server. To ensure that the game provides a reliable gameplay experience for all players, the server instance is deemed to be the \\"ground truth\\" about the state of the game world. Basically the server has the authority of the game state. That means that the player clients will always trust the data that comes from the server over its own current world state. Since the server always simulates the game world and thus","validates the player actions, this guarantees that all clients will stay synchronized with the server and that","the game world a player sees wont deviate drastically from what other players see on their screens."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/1/4/e/2/b583b5649a8af21686921a98c9a1200.png"},{"uuid":"9b40bfcef3418ef49d27d21432a63e1b1e2dbc49","index":22},{"uuid":"6ab8a0b150365310d9742163dae81798c2c2a1c1","index":23,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png","https://media.preziusercontent.com/media/9/a/e/3/1/18912304fe6a203c04099ac946e.png"],"pageIndicators":{"current":"1","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop","texts":["Games come to life thanks to the game update loop. It simulates the game world by updating all entities multiple times a second. Doing one cycle in the loop is considered to be one game tick and many games execute around 30 game ticks per second.","At the start of each game tick, the game processes the input done by the player. For multiplayer games it also checks for any network updates that were received. The game world is then simulated by executing the update logic of entity (dynamic game objects) in the game world (more on this in the next slides). Once that is done, the game may send the changes made over the network (to a server or client). On the game client, it then triggers the graphics renderer to have it prepare and render a new frame which will then be displayed on the player\'s monitor.","Server Meshing is about the Simulation and Networking parts of the game update loop to having multiple game servers work together to simulate the same game world without being noticeable for the players."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/b/6/f/1/88652cb4a2197cfc5f00cf461a81200.png"},{"uuid":"db0cde5e454f0f49f76c111e3ce9f3600ff895b8","index":24,"imageURLs":["https://media.preziusercontent.com/media/2/d/e/d/b/d9dfad34c7196589220ec9d1f69.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"2","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Game Simulation 1/4","texts":["For the state of each entity, there is an area of memory reserved. Each location in memory can be addressed by a unique \\"identifier\\": its memory address. Therefore, memory can be thought of as one long tape where data/values/state can be read from, changes made and written back to.","On each game tick, the state of the entities are updated when the game is simulated. For example, the position of the entity (e.g. a player or spaceship) in the game world.","In the image on the right we have a player positioned at coordinate x=10 and y=25. Those two values exist at the memory addresses 192 and 256."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/2/3/b/c/a543b174c76bac9f98f7e3b90061200.png"},{"uuid":"876bb456246faf29e1592d607531e40fffff1f58","index":25,"imageURLs":["https://media.preziusercontent.com/media/f/1/a/c/3/aac81c74345a3d8d8adf5005d67.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"3","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Game Simulation 2/4","texts":["On each game tick when simulating, these values are read and then incremented by the current velocity of the player, then saved back in the same position in memory.","In our example on the right, in the first game tick, the x position was increased by 5 and the player moved a short distance in the game world.","A game tick can be thought of like one \\"move\\" when playing a board game. Just that all object in the game world receives their move in one game tick. So all objects make their move at once and, ideally, 30 times per second."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/d/6/6/3/0d5139443d681e1603d61bb92491200.png"},{"uuid":"fa6699da1532ef227a95fc1f213802c1932ff9bc","index":26,"imageURLs":["https://media.preziusercontent.com/media/4/c/8/7/0/23784764c72a301dfc2c686cdcb.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"4","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Game Simulation 3/4","texts":["In the second game tick, both x and y values were increased by 5 and the player moved a small distance diagonally."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/7/6/d/3/02a9e184dd3b45a32dcbdb8e63e1200.png"},{"uuid":"1d6a3c643e2e63850c1c4c98f374dc9ee06645af","index":27,"imageURLs":["https://media.preziusercontent.com/media/6/d/7/b/8/cfdae924919a99b33fc55b6dcc8.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"5","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Game Simulation 4/4","texts":["Therefore, on each game tick, all entities only ever teleport from one position to the next. Smooth motion emerges because they are updated and teleported multiple times a second (~30 times). This is how the game world is simulated on the CPU.","These values (and/or player inputs/actions) may be send over a network (to either the clients or the server) as well as used to render an image on the player client\'s GPU.","In terms of rendering, there are a few tricks like Interpolation to have smooth motion of entities when the frame rate is higher than the update tick rate of the game loop. E.g. with 30 game ticks/sec but 60fps, every second position of an entity is estimated on the current and previous position to ensure smooth motion on screen.","TODO: collision checks between game objects"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/1/3/c/2/45519204a70bbf9b3af3b56bd0b1200.png"},{"uuid":"da09ad92c4d9e4ab5347f7dab09405f50c89071a","index":28,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png","https://media.preziusercontent.com/media/7/7/d/6/f/e433eef438a9044dfa07030d47f.png"],"pageIndicators":{"current":"6","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Networking Entity State 1/3","texts":["Whenever there was a change in the game world - that is after the simulation - the game server prepares a data packet with these changes. In our case, it uses the x and y coordinates."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/1/3/a/3/db148a14ff192020536e886ed2d1200.png"},{"uuid":"41b485964260b6c64b6620d66b9369e463243762","index":29,"imageURLs":["https://media.preziusercontent.com/media/b/4/e/f/3/cec18a34f1ea2f4a49e59a06a22.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"7","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Networking Entity State 2/3","texts":["This data packet is then send over the network to the clients."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/f/c/9/e/f299cce415dad3e260397fe46141200.png"},{"uuid":"a00c7348179ceb2cdc580047a5a9142f705fa34b","index":30,"imageURLs":["https://media.preziusercontent.com/media/5/1/f/8/c/9d8fd3b4db6a4d5be7c870982a5.png","https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"8","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop - Networking Entity State 3/3","texts":["Each client receives the data packet, opens it and saves it into its memory. Now the client would be up to date with the server again and reflect the current state of the game world (e.g. by rendering a frame on the screen).","Although in the image, the coordinate values were saved at the same memory address on the client, in a real application they usually are in different locations in memory. Each computer manages their own memory and determines for itself to which memory addresses the values have to be saved. This just covers the basic networking logic. There are further optimizations (such as client-side prediction and server reconciliation) which is generally know as netcode. However, we wont go into too much detail on such optimizations over the course of this presentation. This current knowledge on networking game state will suffice for now."],"sources":["s105","n1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/d/4/8/a/e457ba645a0870e3bce83a676611200.png"},{"uuid":"8cf5ceb3a675f269431c0b75cb47a63aa0328f29","index":31,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png","https://media.preziusercontent.com/media/2/f/6/8/1/633409c4790a83c7a88fb6e85c4.png"],"pageIndicators":{"current":"9","total":"9"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Game Update Loop","texts":["However, one important note before we continue: In most online games, the client usually simulates the game world just like the server does. This is done because exchanging data via a network introduces latency. While waiting for the server network updates to come back, the client will use information from the previous entity state updates send from the server (essentially the entities\' last known actions) to simulate and therefore predict the entities behavior. Later, the network update from the server will be used to ensure its correctness and correct the client\'s entities state if necessary. This solution helps with creating a smoother experience for the client while benefiting from the server verification at the same time."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/1/2/2/2/464bf7a494d907f61f9c545446d1200.png"},{"uuid":"0d6b10caa86229f56114ead90d19b6e2f501d0e9","index":32},{"uuid":"338868bf36806d2262d1d3c8a55b8930976d46e4","index":33,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"1","total":"1"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Frame Rate and Game Ticks - Difference between Rendering (GPU) and the Game Loop (CPU)","texts":["One important topic we should discuss as well is the difference between Frame Rate (Rendering on the GPU) and Game Ticks (Game Simulation and Networking on the CPU).","The game loop is executed by the CPU, not the GPU. That is because the game code and game logic is executed on the CPU. If there was no game loop, then no changes would happen in the game, and the GPU would only ever render the same image/frame with no changes over and over again. Only because of the game loop, it is made possible that objects change state in the game world. The CPU periodically sends the current information of the objects of the game world to the GPU to have it create a new image. This is done by the renderer, also running on the CPU, which optimizes the scene data before it is send to the GPU. There are a few tricks like Interpolation to have smooth motion of objects at high frame rates even if the game loop only runs at 30 ticks per second.","Since the game servers only need to simulated the game world, they just run the game loop without rendering the game (which actually frees up some CPU load because the CPU does not have to tell the GPU what it is supposed to render). Thus there usually is no GPU installed in the computer configuration of game servers.","Note: Sometimes the game tick rate on the server is referred to as frame rate as well. Frame here refers to a frame of time or execution, and not an image.","Every game has a game loop in its code to simulate that time has passed in the game world. In each game loop cycle, called a \\"game tick\\", all/some objects in the game world are being updated as well as the inputs of the players handled to have an effects in the game world. In many games, the game loop is set to 30 ticks per second (every 33.3 milliseconds one tick), in some highly competitive games up to 64 and even 128 ticks per second to allow for the reaction time of players to matter more. The game tick rate is usually independent from the frame rate.","The frame rate is usually determined by how many images/frames the render engine and the GPU can create within one second. This is usually determined by a lot of factors, like what the renderer and GPU are capable of, how many objects are on screen, in which ways the objects are being rendered, etc. At 24+ frames per second (fps), the brain is tricked into seeing motion. In recent years, especially in the competitive gaming scenes, monitor screens allow for 144fps and more. Of course, the GPU still has to be capable of providing these high frame amounts first before they can be displayed."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/e/d/6/e/11a9fd44bac977c133f6dccf6791200.png"},{"uuid":"4b1cf4f571f475c3d65ccb363da7f91992f1bf9c","index":34},{"uuid":"e718ba034d32375fb3cd12c7df8218307041b0cc","index":35,"imageURLs":["https://media.preziusercontent.com/media/e/b/8/e/c/32328d144f7b2a626649d75d086.png"],"pageIndicators":{"current":"1","total":"1"},"title":"Road to Dynamic Server Meshing - Preamble","subtitle":"Objects and Entities (and Components)","texts":["One last topic before we can finally start our journey toward Dynamic Server Meshing is the difference between objects, entities and components in the game.","The game world is usually created out of static objects. These objects are usually floors, walls, ceilings, stairs, planet surface, etc. These static objects are pure geometry and do not have any special behavior attached to them (except maybe a separate hitbox for collision checks) and therefore do not have to be updated in the update loop at all. Thus, they are very cheap objects CPU computation-wise and merely need to be rendered on the GPU.","However, games usually feature dynamic objects as well, like players, NPCs, ships, other vehicles, doors, etc. Essentially everything that moves, interacts or has behaviors are considered dynamic objects. They are usually referred to as entities (entity in singular) and are the ones which are updated in the game loop on the CPU.","Based on the number of game tick per second the game runs on, the CPU only has a few milliseconds to go through all entities that require an update and update them. Star Citizen has a tick rate of 30 and therefore 33 milliseconds (ms) computation time available for each game tick. Usually a modern computer can handle a few thousand entities depending on the complexity of those entities. When there are too many entities or too many complex entities being updated, then the game starts to slow down which can have a noticeable impact on the player experience. Therefore, the goal is to keep the entity computation low enough for a smooth experience by staying under those 33ms for each game tick.","As we will see later, Star Citizen reworked its entity system to an Entity Component architecture and splits each individual behavior in the game into its own component which then can be attributed to any entity. Therefore, it matters how many components are being updated in the game update loop, not necessarily the amount of entities."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/9/5/c/3/82cabe145c0a3fa1396fa545ba51200.png"},{"uuid":"021530e528f3346f5c73a2633d38e0c631fa213d","index":36},{"uuid":"1d0f3d284f2701c1ad655bb756ec6c93c1be731b","index":37},{"uuid":"f3b0c55f37b73f7bff813d0585c3c8d2c62ad387","index":38,"pageIndicators":{"current":"1","total":"8"},"title":"Object Container","subtitle":"Introduction","texts":["Our multi-step journey to Dynamic Server Meshing begins with the creation of Object Containers.","Challenges:","* traditional game levels consist of a list of objects (static and dynamic) which are loaded all on level start behind a loading screen","* to eventually be able to create a seamless universe with no loading screens and thousand of players, we can\'t load all objects into our memory all at once since the large amount of data would exceed our memory capacity","Solution: Object Containers","Goals:","* instead of designing a level, introduce the idea of level building blocks called Object Containers which make up individual parts of the level from which the entire level is made out of","* this will later allow parts of the level to be loaded and unloaded into/from the level at anytime while playing","* this requires the functionality to stream objects in and out of memory, even after the initial process of loading the level finished","* the current system does not allow for such functionality, so we need to implement a unified system which will allow objects to be loaded at any time","* it will then be used to build upon toward the final Server Meshing implementation where different parts of the level is going to be computed by different game servers.","Approach:","* put all unique objects referencing their resources (like geometry, assets and entity type) into their own Object Containers","* allow Object Containers to reference and have other Object Containers as children so that the final level emerges out of many nested Object Containers","* rework the existing levels to use the Object Containers and create all future content with Object Containers which requires changes to the engine editor","* on level start, load the level via the Object Containers. There does not exist any logic yet that loads Object Containers while playing and will be the functionality later introduced by Object Container Streaming which loads/unloads objects at any time","* Object Containers themselves were first introduced in Alpha 2.6.1 (Feb 2017) but many of the other features (Megamap, 64bit coordinates, Entity Components, etc.) made its debut with Alpha 3.0 (December 2017)"],"sources":["jp1","cc2df2","atv1","atv4"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/1/0/7/b/08451ac4c66bc2b7334a94146fa1200.png"},{"uuid":"0db6b569968d18243917bebaf088592401bf5178","index":39,"imageURLs":["https://media.preziusercontent.com/media/0/5/4/5/3/5864a8545578e06ed919e929c2a.png"],"pageIndicators":{"current":"2","total":"8"},"title":"Object Container","subtitle":"Example","texts":["In the visual example on the left, we have loaded three players into the level. The red and green players are near each other on the same planet while the blue player is on a different planet far away. However, to avoid visual clutter, the planets, ships and other objects were left out of the image and we only show the connected players. We are going to revisit this example in the upcoming major technologies again.","Underneath, we also see a visual representation of the load on the individual computer components. The load on the CPU (blue) and GPU (red), how much RAM (orange) is in use, which part of the drive we loaded into memory (grey area). In this case the data of all objects were loaded from drive into memory, the load of CPU and GPU and memory occupied is quite high. (In the context of Server Meshing, the GPU is not as relevant as the CPU and memory.)","With the level split into different building blocks (Object Containers), the game could load and unload parts of the level at anytime. Therefore, we would only ever need to load the parts of the level into memory which are near and visible to the player (like a few kilometer sphere around the player) instead of having to load the entire level from drive into memory. This allows the game to keep memory consumption low enough to not exceed the maximum memory capacity.","However, the functionality to stream objects from the drive into memory after the initial level load wasn\'t actually introduced yet with the release of the Object Containers. The player client and game server still had to load all objects of the level at its initial load because there was no logic yet that would tell client and server which objects it should load or unload. The functionality for streaming objects in and out of a level at any time became only possible with the introduction of Object Container Streaming which we will talk more about later."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/4/e/4/f/e9db6104476972332b1edff537b1200.png"},{"uuid":"33eaefd865c7de9ebb2e5e2d1d1b55478728dfb2","index":40,"imageURLs":["https://media.preziusercontent.com/media/2/5/3/0/0/2fbc4014f7da4c48fc5ca3b5283.png"],"pageIndicators":{"current":"3","total":"8"},"title":"Object Container","subtitle":"The Implementation 1/3","texts":["Object Containers are wrappers for object types. A container acts as a template from which one or multiple instances (entity) of the same object type can be created. An entity might a player character, coffee cup, a ship or even planets and solar systems. Each object type (and thus Object Container) might have a unique identifier (either a name or a number) with which it can be referred. Each container has a list of the resources it uses, e.g. models, geometry, textures, zones and entity components.","Some Object Containers might represent atomic objects. Others Object Container may represent an entire or partial level. This is done because Object Container can reference of other Object Containers. Thus, Object Containers can be nested. A tree structure of Object Containers is created. For example the Stanton system would be a Object Container which references the Stanton star and its four planetary systems as its child Object Containers. The landing zone Area 18 would be referenced from the ArcCorp planet container, and so on."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/9/7/a/0/9/c7dfa6a469db810b2c3647bb3671200.png"},{"uuid":"d5c365971c0c8d90d90e9ed519f28da4ec043c10","index":41,"imageURLs":["https://media.preziusercontent.com/media/a/9/4/7/e/5cf6444430ca87f058ac470368b.png"],"pageIndicators":{"current":"4","total":"8"},"title":"Object Container","subtitle":"The Implementation 2/3","texts":["With Object Containers the level is now split into individual building blocks. Artists and developers do not develop individual levels anymore, but instead individual objects or parts of a level. Those can then be reused anywhere in the level and be part of other Object Containers. Therefore, the final level is made up of nested Object Containers from which game objects (entities) are spawned.","An artist making a change to an object container, changes all entities that originate from that object container in all places in the level. For example, a chair design used all across a landing zone. Instead of having to make changes to all hundred chairs individually, the artists just have to make the change once to the chair Object Container. This makes it easy to make changes, rework and update existing objects without having to update every single object individually. Just the Object Container has to be altered."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/f/4/3/7/c63ada545f9b577069748ca61de1200.png"},{"uuid":"55552cad5ed44e4cceb5acd6072ac9906625ff73","index":42,"imageURLs":["https://media.preziusercontent.com/media/9/1/d/c/5/714ca05498cb6ef76cff6c3cac5.png"],"pageIndicators":{"current":"5","total":"8"},"title":"Object Container","subtitle":"The Implementation 3/3","texts":["When an object is loaded into the level, either on initial level load or later while playing, the Object Container is loaded into memory. Then a new object is created from the Object Container. This is done by allocating the required space in memory to later hold the object\'s state (like position). The resources that are listed in the container, like textures and geometry, are loaded into memory into the MegaMap and/or into the memory of the GPU.","The MegaMap consists of various memory managers which check, if a resource was already loaded by other objects. If that is the case then the already loaded resource is simply reused rather than loading it again which would waste memory space by introducing duplicates. The object is initialized with its values and positioned into the level. Most of these values are going to be loaded from a save file but later are going to be loaded out of a database. An Object Container can consist of multiple child Object Containers which will be loaded and initialized and relatively positioned to its parent object into the level (for example, the clothes a character wears, the gun that is attached to the character and the bullets that are in its magazine and bullet chamber).","Once loading and initializing is done, and the object is dynamic - meaning it has behavior and can be interacted with - then this entity is ready to be computed by the CPU in the game update loop, thus state changes and stuff happens in the game world, e.g. a player or NPC can walk around, a ship can fly, a terminal can be accessed, a ship spawned, a wall can be run into, etc."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/5/f/8/7/8937152463f94338ed3d783ead41200.png"},{"uuid":"af955ded819bf386abec2a03d4cc8748990d846f","index":43,"imageURLs":["https://media.preziusercontent.com/media/8/9/c/4/6/d5fecad489090e86bc22ba17bc0.png","https://media.preziusercontent.com/media/c/c/4/4/8/44934b84d668602bfa26b463211.png"],"pageIndicators":{"current":"6","total":"8"},"title":"Object Container","subtitle":"Entity Components","texts":["Alongside the development of Object Containers, CIG also reworked the entire simulation code of the engine. They rewrote the code by splitting and reusing code pieces across multiple different object types.","An entity is not just a whole thing. It consists of many small behaviors and interactions, like physics, player health, movement input, etc. Each of these behaviors were put into their own Component. And thus there exists a PhysicsComponent, a HealthComponent, a InputComponent, etc. When a new entity is spawned, then the components of that entity are initialized and memory reserved to hold their state. The entity is therefore a composition of components.","In the code, these components can then be used on different entities, speeding up development and reducing bugs by not having to write or copy the same code over and over again into different object types. For example, player characters, ships and other items can all make use of the same PhysicsComponent, to experience gravity and other forces as well as collide and bounce off each other. Of course, depending on the behavior of the object, it will be attributed different Components. For example, not all entities need the InputComponent, only the player character."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/b/c/6/d/aa35be74a9887e60af912b88c8f1200.png"},{"uuid":"7881a235496d9b7a950ce69599458ffa1d63db01","index":44,"imageURLs":["https://media.preziusercontent.com/media/c/9/3/c/3/7156940414f90c66429d7819c63.png","https://media.preziusercontent.com/media/6/9/e/d/c/bca111e4ed39c0d0c666064cbe2.png"],"pageIndicators":{"current":"7","total":"8"},"title":"Object Container","subtitle":"Zone System","texts":["Additionally, the new Zone System (speculated: a custom hybrid between a space partitioning data structure and a scene graph) splits the game world into areas. All objects inside such an area are grouped together. For example, a zone can be a spaceship. All objects inside that spaceship are grouped, thus being part of that zone. When the spaceship moves, its zone is moved as well, thus moving all objects inside of the spaceship with it. This is made performant by giving each zone its own coordinate system and objects inside are placed and moved relative to the zone center coordinate instead of the game world level center coordinate. And thus, the positions of the objects inside do not need to be updated when the ship moves.","This system replaces the old Octree partitioning system. Octrees split the game world in cubic, immovable chunks. Each cube can be split into 8 smaller sub-cubes. Those sub-cubes can be split into 8 more cubes again. Rinse and repeat. In memory, a tree structure emerges which can be traversed by all sorts of algorithms. The image shows the difference between Octrees and Zones. Be aware that our level example is 2D, thus we are actually showing Quadtrees (the 2D version of the 3D Octrees, using squares instead of cubes thus splitting a square into 4 sub-squares).","With the 64bit conversion, the levels have become extremely large. The Zone System splits the game world much more efficiently, as it is able to concentrate on areas where lots of objects and activity are, instead of splitting empty space into hundreds of empty cubes which creates larger tree data structures which requires more memory and takes longer to traverse.","The Zone System is used for optimizing rendering, physics collisions as well as for networking entity updates and loading/streaming objects in Object Container Streaming. The room atmosphere and physics grid systems are (most likely) directly build upon the zone system as well."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/2/5/3/0/3/0635f834a76a308f6ac30f31e9e1200.png"},{"uuid":"fb9cdddc4868920e20369a069675673f9aeb80f2","index":45,"imageURLs":["https://media.preziusercontent.com/media/3/b/0/4/8/699a1da4d689badeb97e338518d.png"],"pageIndicators":{"current":"8","total":"8"},"title":"Object Container","subtitle":"Serialized Variables (API)","texts":["Optimization was done on the networking to reduce bandwidth. On each game tick the server has to send the state of entities to the player clients. With the high amount of data of entities in Star Citizen, this will result in a lot of data and thus bandwidth. Therefore, CIG implemented an system which detects any entity state changes. It then only sends those changed values across the network instead of the entire state of the entity, which would include unchanged values as well. This network optimization made it possible to reduce the bandwidth up to 80% for certain Entity Components."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/9/7/7/a/f/73737cd48ed916355c5b8b01cd71200.png"},{"uuid":"a034331b21ec9f3eb5a8ed910b1d33157fb99e59","index":46},{"uuid":"3134ef19a4741275fe57e9d267001ade99f45331","index":47,"pageIndicators":{"current":"1","total":"12"},"title":"Client Object Container Streaming","subtitle":"[jp1,cc2,rtv2,rtv1,s111,s113,","texts":["pn33,pn335,w1,lc1]","Overview","With Object Containers it is now possible to split a level into separate game areas and load them into a level anytime. However, that functionality cant be utilized yet. Client Object Container Streaming (sometimes Client Side OCS or CSOCS or COCS) sets out to change that.","Challenges:","* by increasing the amount of objects in the level, more and more system memory is required","* by adding more entities into the level, the load on the CPU for entity computation each game tick increases","* the CPU of the client has to keep entities in sync with the server by updating its state","* too many entities computed currently results in not enough CPU load available to help render the game","* frame rate and performance on the client drops","Solution: Client Object Container Streaming, an intermediate step toward complete Object Container Streaming","Goals:","* reduce the memory requirements on the player client","* reduce the load on the CPU on the player client","* allow for more objects and entities to be added into the level on the server (e.g. more planets, locations and players)","Approach:","* reduce memory usage by only loading the nearby/visible objects of the level around the player","* dynamically stream Object Containers in and out of the level while the player is traveling across the level or entities (like other players and their ships) approaching/leaving the player","* the server notifies the player clients whenever the player clients should load objects","* streaming entities in and out reduces the amount of entities that have to be computed by the client CPU","* for far away entities, the server stops/skips network updates based on the entity\'s distance to the player to save client CPU usage"],"originalSlideImageURL":""},{"uuid":"dc60ed46848d7473f45ea118c7748e81a2b4b1a0","index":48,"imageURLs":["https://media.preziusercontent.com/media/9/1/b/6/1/8dfb4144402812aac8b0358a7ff.png"],"pageIndicators":{"current":"2","total":"12"},"title":"Client Object Container Streaming","subtitle":"Initial Situation","texts":["Without Client Object Container Streaming, all clients and the server have the entire level loaded. This means that all object have to be loaded from drive into memory on level start or when connecting to the server. The server CPU computes all objects/entities and sends state updates to the clients via messages over the network/internet. This leads to CPU usage on the player client being quite high because it receives information about all objects in the level as well as the CPU having to help prepare the next frame to be rendered as well.","The client is overloaded with too much information and the CPU cant help render the game as much anymore and even the frame rate starts to suffer. The server does not have that additional load since no graphics are being rendered on it, only the entities updated on each game tick.","In the picture on the left, at the top, we can see that the entire level is loaded (white area is loaded). CPU (blue) and memory usage (orange) are quite high since all entities are loaded from drive into memory and being computed on the CPU."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/1/f/8/8/48bbea44e7ea6ead830d8e7c0751200.png"},{"uuid":"a4ce79b85a9e7389c58f79eedd684dff0a722e7f","index":49,"imageURLs":["https://media.preziusercontent.com/media/8/e/7/3/b/280705b4a6c854a7e5dbd2fb5e1.png"],"pageIndicators":{"current":"3","total":"12"},"title":"Client Object Container Streaming","subtitle":"The Solution 1/2","texts":["With Client Object Container Streaming, clients do not have to load the entire level anymore, only the nearby objects around them. This may be another player standing right in front of the player, the enemy space ship the player is shooting at, the space station in orbit, or the moon far away in the sky. Which objects are being loaded is determined by how far away and how large the object is, so that the moon in the sky will be computed and","displayed but not the small players which are on that far away moon.","In the picture on the left, we now see that for each player client only the area around that player is loaded. The remaining level is not loaded which is represented with the greyed out areas. We also see the expected reduction in memory usage (orange) and the load on the CPU (blue) since we have to load less data into memory and need to update less entities on each game tick.","(Note: All percentages are purely for visualization, not real world performance statistics!)"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/d/3/4/3/581ba3f489aba8b7eec905bc3111200.png"},{"uuid":"1114d397545ab391fbb6ac374eaae61ab88a734a","index":50,"imageURLs":["https://media.preziusercontent.com/media/6/1/6/b/b/25ffe4c4d83b597841db8ea77ed.png"],"pageIndicators":{"current":"4","total":"12"},"title":"Client Object Container Streaming","subtitle":"The Solution 2/2","texts":["When a player moves around in the level, object containers behind/far away from the player can be being unloaded while object containers that are about to come \'into view in front\' of the player are being loaded into memory (e.g other players, ships and items) (Note: \\"view\\" refers to objects all around the player, not just the objects directly in front where the player is currently looking at, since the players view can change rapidly, faster than data can be loaded from drive into RAM.) This requires communication between the client and the server where the server notifies the client to load objects via Object Container into memory.","In the example on the left, the blue player (Client A) moved around in the level toward the red player. As the red player came into view, he was loaded into memory on the blue players computer and started receiving updates from the server to stay in sync. The same for the red player who loaded the blue player into memory and started computing him each tick."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/f/b/5/c/63fa2f8408c9e607f0b31c926581200.png"},{"uuid":"1179294160f290847039e9311d5e11ee307f9512","index":51,"pageIndicators":{"current":"5","total":"12"},"title":"Client Object Container Streaming","subtitle":"Multiple systems working together","texts":["Since the client does not need to know about all entities that are on the server anymore, Client OCS and its functionality was initially referred to under the name Network Bind Culling (or Network LOD). Essentially the data on the client is culled via the network by the server. However, it seems as if Network Bind Culling is just one part of many that brought us the final Client OCS functionality. Here is a quick summary:","Serialized Variables: Introduce network update policies to entities and their variables, e.g. a variable being constantly networked on each game tick or only when its state changed to reduce and optimize network bandwidth.","Entity Component Update Scheduler: Provides information of how far away an object is to the player. It supported the functionality of starting and stopping (essentially skipping) network updates of entities that are too far away from *all* players.","Serialized Variable Culling: The Entity Component Update Scheduler stopped networking entities to the clients that were too far away from all players, but all clients still were send network updates of all entities around ALL players on that server, no matter how far apart the players were from each other. Serialized Variable Culling changed that: The server now only sends each client the updates of entities which are near that specific player, not all players anymore.","Network Bind Culling: The previous features were only about limiting network updates, all entities were still loaded on the client even if they did not receive network updates anymore. This was changed with Network Bind Culling. This feature added the functionality for the server to tell the client when to load objects on each client from/into memory. This makes use of the Object Containers.","With Client OCS, a player client is able to load and stay in sync with the entities on the server which are relevant to that specific client. Therefore, information on the client has been reduced, selected based on the object size and distance to the player in the level. More features, like loading these objects into memory in the background in other CPU threads as well as the Serialized Variables feature for efficient networking, accumulated in the final Client OCS feature."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/b/e/6/7/470a07e4243b4d69fd57c307a721200.png"},{"uuid":"e123af35aefeecf76779390a6d2ad521980d089a","index":52,"imageURLs":["https://media.preziusercontent.com/media/1/d/3/b/9/dda27034bafb97c4ccc5610fbb6.png"],"pageIndicators":{"current":"6","total":"12"},"title":"Client Object Container Streaming","subtitle":"The streaming bubble","texts":["The bubble doesnt actually exist as such. We are just using it to visualize more easily that stuff is loaded around the player. But in reality, whats loaded are the individual game objects.","(On a similar note, the actual (empty) space of a level doesnt need to be loaded, as \'nothingness\' does not have to be represented as a game object in memory).","But we might think of the bubble as the spatial query which determines which game objects to load. This makes use of the 3D 64bit geohash \\"StarHash\\" and a Radix Tree which are suited to perform such spatial queries. It factors in the distance between each game object and player, as well as the size of each object.","Therefore far away and/or small objects might not be loaded because those wouldnt be visible to the player anytime soon. Likewise, objects that are really large - like moons or planets -might still be loaded from far away. With Object Containers being nested, not all contents of a location need to be loaded all at once either. While the planet ArcCorp might be loaded already, the Area 18 city or parts of its interior might not be loaded yet as it is still too small. In a similar fashion, these small objects are unloaded first as well when a player departs and moves away from such location."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/2/9/2/f/6a4193a4676bb31d5d62741eb9d1200.png"},{"uuid":"f61ea0d23b72eacda7f66af921fb166d529d66b4","index":53,"imageURLs":["https://media.preziusercontent.com/media/e/1/7/d/c/93e7b3a43a982d7614b3d787a5d.png"],"pageIndicators":{"current":"7","total":"12"},"title":"Client Object Container Streaming","subtitle":"Client OCS in-depth 1/5","texts":["So how does the client load objects?","Afterall, the client cant simply use a level save file anymore to load entities, since now those initially only exists in the game server\'s memory. The client only has a small section of the game world loaded, and everything that isn\'t loaded is therefore unknown to the client. Thus, it has to be the game server that has to let the client know which objects to load.","In our case, the red player client does not know about the blue player yet, because the blue player is on the other side of the level and too far away still. But, the blue player is traveling toward the red player\'s position. So lets see how this plays out."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/d/1/e/b/c56f74543708928c04a27fe422e1200.png"},{"uuid":"921655e9adeccb3741d99408635ce1f1b587f06a","index":54,"imageURLs":["https://media.preziusercontent.com/media/0/4/a/a/5/76fd5904564be3a5d21ce9e362c.png"],"pageIndicators":{"current":"8","total":"12"},"title":"Client Object Container Streaming","subtitle":"Client OCS in-depth 2/5","texts":["Once an object moves close enough to a player, the server notices this and considers it relevant for that specific player client. Again, this also takes into account the size of the object, not just the distance to the player. Once identified, the server makes use of Object Containers to communicate it to the client.","Both the client and the server have the same list of Object Containers and each Object Container has the same identifier. In our example, player characters have the id #001. This allows the server to sends a network packet to our red client, which contains the Object Container ID #001.","This reduces the network bandwidth required while playing the game. Sending only the identifier of an Object Container means that the server does not have to send the actual Object Container itself nor any resources associated with the Object Container. Resources like textures, geometry, sounds, etc. are all downloaded onto the player\'s drive while downloading and patching the game. That is also the time when the list of Object Containers is downloaded."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/6/5/3/2/00f5903456bb9695e42864665f21200.png"},{"uuid":"875014f37346e0a802d55aad5d2fa2c4fb2555c1","index":55,"imageURLs":["https://media.preziusercontent.com/media/e/8/d/2/8/2936d2f4e2f97469442b6da0aa9.png"],"pageIndicators":{"current":"9","total":"12"},"title":"Client Object Container Streaming","subtitle":"Client OCS in-depth 3/5","texts":["Once the player client receives the network packet, it will use the ID to look up the Object Container its own list of Object Containers. In this case, it will find the player character object. This Object Container acts as a blueprint to spawn new player characters from. So all player characters are spawned from the same Object Container.","However, not all players are the same, for example the player wears have different armor and holds a coffe cup. So the server might already sends additional information and more Object Container IDs within the same network packet already.","Even tho the blue player character is now loaded, the character might not be shown and simulated in the game world yet. For now, it just resides somewhere in memory on the red client\'s computer.","Of course, in our example, this same process is also happening for the client of the blue player. It needs to load the red player into its memory and is notified in the same way. However, we don\'t show the blue client in the example."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/3/4/f/0/f484f12467dbfe84f5057036d671200.png"},{"uuid":"91092904590718bcba1ec7fa68a1dd77634b6508","index":56,"imageURLs":["https://media.preziusercontent.com/media/b/d/0/c/0/3a44d904223851bac9319a5b19b.png"],"pageIndicators":{"current":"10","total":"12"},"title":"Client Object Container Streaming","subtitle":"Client OCS in-depth 4/5","texts":["Once the blue player moves even closer to the red player, the server notices this again. This time it sends the entire entity state of the blue player as a so called Entity Snapshot to the client.","When the red client receives it, it is used to properly position and initialize the player character. At this point, both server and client have synced up the blue character, as both have the same state in memory.","Note: The player client loads and receives state updates prior to when they would start moving into actual view on screen."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/7/0/0/7/642f3314060a3431edf8ddfaffd1200.png"},{"uuid":"bb3af9a24bd8ac9980e21f79967274c39929a350","index":57,"imageURLs":["https://media.preziusercontent.com/media/a/b/b/6/b/938daf04b45b4525d10240315de.png"],"pageIndicators":{"current":"11","total":"12"},"title":"Client Object Container Streaming","subtitle":"Client OCS in-depth 5/5","texts":["Since the Entity Snapshot syncs up the entity, the game server can send - on the next and subsequent game ticks - the entity state updates to the client, like it would have done in any traditional client-server architecture without OCS.","This continues until one of the player exits the game or moves far away again and the object becomes irrelevant. Then the server stops sending entity state updates to reduce the CPU load and bandwidth. The server decides when to stop and resume networking for each individual client based on the network policies (like distance, object size and other more situational rule sets).","Even if network updates were stopped once, entities can move in and out of \'networking distance\' again multiple times. If the object didn\'t move too far away yet, then it might still reside in memory and doesn\'t have to be loaded again. A new Entity Snapshot is being send each time networking starts up again. But once an object is continuously networked the server only sends values which change based on the networking policies of the Serialized Variables software system."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/6/2/a/c/b06c3014e128f14935657c4da8f1200.png"},{"uuid":"bc761be07c242bb0f90aace8c578778e1c0b93f3","index":58,"pageIndicators":{"current":"12","total":"12"},"title":"Client Object Container Streaming","subtitle":"Summary","texts":["Client OCS now provides each client a partial view into the entire level on the server. The server has to lift the majority of the work by letting each client know which objects to load from its drive into memory so that the client CPU can start receiving the entity updates from the server and have entities stay in sync with the equivalent entity on the server. (Speculation: It is likely that the client itself decides when to unload objects from memory based on its available RAM capacity.) The server figures out when a client needs to load and receive state updates. Whenever that is the case, the server communicates that to the client. Therefore, Client OCS put some additional load onto the server, to allow for a significant computation reduction and performance on the client.","This technology allowed CIG to improve performance for players significantly, because the amount of entities that had to be computed on the client was drastically reduced, thus the computation time for each game tick reduced. That also left the CPU with more time to help render more frames. The addition of multi-threaded loading and unloading of entities also reduced a ton of freezes and stutters. Client OCS allowed more objects like planets and their locations to be added into the Stanton solar system level (and more solar systems in general) without putting more load onto the player client."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/d/e/1/4/750ed37476f8acdbeaea07626901200.png"},{"uuid":"4dccfcc61e46985afc116112aa39093aa6eb1169","index":59},{"uuid":"6eb31f1f2481eea11d95aaf14969f1f16faf9122","index":60,"pageIndicators":{"current":"1","total":"5"},"title":"Server Object Container Streaming (SOCS)","subtitle":"Overview","texts":["With Client Object Container Streaming (COCS) we have improved the performance and memory requirements on the client side which improved the performance for the players noticeably. On the server, we can now increase the level size by adding more objects into the level, for example more areas like planets and locations without effecting the performance on the client as much as it did.","Challenges:","* the server still has to compute all entities and have all Object Containers loaded in memory","* while adding more objects into the level does not effect the player client as much anymore, the server still has to load all and compute most of them, no matter if players are nearby or not","* adding more and more objects into the level starts to exceed the server CPU and memory load which prevents us to create even larger levels with more content","Solution: Server Object Container Streaming (sometimes Server Side OCS or SSOCS or SOCS)","Goals:","* Reduce the memory requirements on the server.","* Reduce the load on the CPU on the server.","* This is going to help performance later under Server Meshing, where multiple servers will simulate a game world, but don\'t have to load the entire game world and instead only their little corner section of it.","Approach:","* Dynamically stream game objects in and out of the level on the server while players are moving around","* Serialize entities via Serialized Variables and stream/save/load entity data into and out of a database (pCache, later iCache) to free up memory, thus the server only has a portion of the entire database loaded","* Thus only load the level areas where players are nearby to reduce the memory consumption","* With certain areas of the level not loaded, the amount of entities that have to be computed on the CPU is being reduced and performance does not deteriorate on the server anymore"],"sources":["jp1","cc2","scl1","s101","s106","pn38","lc1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/b/e/4/a/5c395e041d6a2ede46184df6cd91200.png"},{"uuid":"c5cf9092b81d5c405141f5d85fa341447e69f29d","index":61,"imageURLs":["https://media.preziusercontent.com/media/8/e/7/3/b/280705b4a6c854a7e5dbd2fb5e1.png"],"pageIndicators":{"current":"2","total":"5"},"title":"Server Object Container Streaming","subtitle":"Example - Initial Situation","texts":["With the implementation of Client OCS, we have reduced the memory and CPU load for the clients. However, the server still has to have all areas loaded into memory and all entities in those areas (like NPCs and players) computed each game tick, whether there are players in that area or not. That uses valuable memory and CPU computation time. This prevented the addition of new planets and locations since the server would exceed its memory capacity and CPU load.","The idea to solve this is simple: Implement the same Object Container Streaming functionality for the server as well. That means: Only load those areas with players and unload all areas with no players.","The difficulty here is, that the server defines the \\"ground truth\\", the universal state, for all the clients. Therefore, the server has to make sure that it has loaded all objects around players itself first, before being able to load and communicate state changes of those objects on/to the clients."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/9/8/2/a/a52cde04fc0965e0f8e539b5d8b1200.png"},{"uuid":"4a8c48732a7d2ad5fc2e0cf9d499c6d09930ecda","index":62,"imageURLs":["https://media.preziusercontent.com/media/6/d/c/2/5/d4e8090457aa5ab0ab3b8d20718.png"],"pageIndicators":{"current":"3","total":"5"},"title":"Server Object Container Streaming","subtitle":"Example - The Solution","texts":["With Server OCS being implemented, the server too now only loads the areas with players in them. When players move around the level, the server dynamically loads the level in front of the player and unloads the level behind the player (if there are no other players in that area already/anymore, that is). CPU and memory loads are now reduced on the server, allowing more objects to be added into the level again. The server sends periodic queries to a database to check if objects around players are about to come into view. If that is the case the server will lookup the Object Container identifier of those objects and load the object into its memory.","This technology allowed CIG to add more planets and moons of the Stanton system into the level which was previously impossible without exceeding the server resources.","Unfortunately, Server OCS did not increase the player count of servers. Most computation intensive areas (like landing zones) were always populated by players and thus are usually never unloaded. Load was still high on the servers. Therefore, CIG had to decide between more players or more content. They went with more content."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/f/2/2/2/0699e2b40388ce7ae50402d3b801200.png"},{"uuid":"d2b3e69b14eff734561cb63e30e56c3e65567f25","index":63,"pageIndicators":{"current":"4","total":"5"},"title":"Server Object Container Streaming","subtitle":"Summary and Future Features 1/2","texts":["While Client OCS allowed clients to have a partial view into the level of the server, Server OCS now allows the server to have a partial view into the entire level. The entire level is now stored in a database on the server drive (and later into the large database at first pCache, then the new horizontally scalable EntityGraph).","The server now does not have to load the entire level anymore, only select parts of it. Thus, even if the level size increases into hundreds of GBs (or even terabytes) in the database, it only needs to load a couple GB of it into memory at all times.","Additionally, Server OCS will also be used for the Squadron 42 singleplayer game to load and unload objects on demand. A local database (EntityGraph) running on our computer along side the game, will act as the game save files by serializing the game objects from memory onto the drive and then loading it again from the drive into memory via Server OCS."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/d/f/8/7/bf5765f42279f23042e7a4a4e601200.png"},{"uuid":"a61b50fa06528dfb1cda657afa75fbf2d9b57941","index":64,"pageIndicators":{"current":"5","total":"5"},"title":"Server Object Container Streaming","subtitle":"Summary and Future Features 2/2","texts":["With the first version of Server OCS, whenever an area of a level is unloaded onto the drive/database, the entities in those areas wont be computed in the game loop anymore, thus no changes are occurring. Essentially, that specific section of the world is frozen in time until a player moves back into that area again. That is not ideal in a simulated, immersive and economy driven universe.","To solve this, in the future, another server/service will take those unloaded areas and quickly simulate the time that has passed. This way, the computation resources required are greatly reduced by abstracting the simulation to a minimum. The universe would still appear alive. For example, NPCs who are busy repairing a ship wont have to be simulated running around and doing their job if no player is around to witness them doing it, only the ship hull values have to be increased in the database in the background. When a player enters the area again, the ship will be in a more repaired state compared to when the player left the area. Meanwhile, the NPCs are loaded back into the area again as if they were busy the entire time, even thought they did not actually exist to work on repairing the ship. This way, the entire universe will always feel alive, even thought most of the universe won\'t even be actively loaded and computed on the game servers themselves. This feature heavily relies on Global Persistence to be completed, since values have to be update in the database, then accessed and loaded into memory by the game servers. Simulating the game world on a higher abstraction level is also going to be the main functionality of the \\"Quantum\\" Economy Simulator.","Another major future feature of Server OCS relying on Full Persistence as well will be Server Recovery. Once all states of all entities are continuously persisted into a database it becomes possible to recover a server after a crash. If a crash happens, a new server can be started in its place, the database provides the information about the entities that were present on the server at the time of the crash, load those entities back into memory via Server OCS and connect the player clients back to the server again. Therefore, in case of a server crash, players would only have to experience a couple seconds of interruption and barely any loss of progress in the game before being able to continue playing the game again where they left off."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/f/0/4/3/ec296fd4b5c8d54768fc8eecdc81200.png"},{"uuid":"03803a0251a06b80aed4f8e638d23f07da096aac","index":65},{"uuid":"ae9da52226c296a70377437874874ea47f0f4e2f","index":66,"pageIndicators":{"current":"1","total":"10"},"title":"Persistent Entity Streaming (PES)","subtitle":"Challenges:","texts":["* with eventually all items physically present and stored in the game world, with physicalized damage and degradation, with thousands of NPCs going about their lifes, with thousands of dynamic missions and events generated by AI and players, with a fully simulated economy, all in a single-shard server mesh, all of the game world needs to be persisted into databases and then accessed by the game servers in real-time, requiring an architecture that is able to handle high amounts of data","Solution: Persistent Entity Streaming (sometimes just Persistent Streaming)","Requirement for: Server Meshing, Full Persistence","Goals:","* have a persistent world where everything is stored into databases and loaded (streamed-in) by the game servers and various services that need that data","* allow for all items to be placed anywhere in the game world and persisted over large amounts of time","* split State Persistence and State Replication from the Game Simulation by moving that logic out of the game servers and into services","Approach:","* introduce a highly scalable, cloud-native service backend architecture for high data throughput, low latency, high responsiveness, fault tolerance and crash recovery.","* besides new logic, this requires a lot of logic to be moved out of the game server and into their own services/servers.","* introduce an horizontally scalable graph database (EntityGraph) and cache (Replication Layer) to store the state of the game world (entities). The game server is just left with simulating the game load partial data via Server OCS.","* Its scalability spreads the load across multiple database servers and thus reduces the load on each individual database instance.","* simulate the economy in a high-level abstraction environment to create a realistic action-reaction system. Its effects will be reflected in the game world by the game servers.","* Implement logic on the game servers which (indirectly) access databases like Global Database (LTP), EntityGraph, Reputation database, Probability and Mission data generated by the Quantum Economy Simulator, etc. and then use all of this data to create their section of the game world with.","* uses gRPC (Remote Procedure Calls) for communication between services.","* this only comes fully online when the Hybrid/Replication Layer service goes live.","* the initial persistence solution was attempted with a relational database which, after internal testing, didnt live up to perofrmance requirements, so a switch to a graph database was done end of 2020/early 2021","* A first version comes online with Alpha 3.18, aiming for feature parity. Full Persistence will follow when more and more services come online, such as smart Matchmaking and proper Player Item Shard Transitions (or even Server Meshing with larger shards)."],"sources":["scl2","cc2","qa1","lc1","s117","scr"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/0/d/2/1/467ac7147dda6e36dfd957587041200.png"},{"uuid":"aa485d22af52d23d1a62187df1a3f89afa1fc6ee","index":67,"pageIndicators":{"current":"2","total":"10"},"title":"Persistent Streaming","subtitle":"EntityGraph & Global Database","texts":["The data of the game world(s) will be stored into two different database:","EntityGraph database","* This is the successor to the pCache database which was introduce when SSOCS came online.","* EntityGraph was initially referred to as iCache.","* EntityGraph is a sharded, horizontally scalable graph database.","* It stores the entities which physically exist in the game world.","* Referred to as \'unstowed items\'.","* This includes spawned ships, players, coffee cup, etc.","* Each game world has its own EntityGraph database to store its unique state of the game world independently from other game worlds.","* speculated: EntityGraph uses ArangoDB.","Global Database","* The Global Database is the successor to the Long Term Persistence (LTP) database which was introduced shortly after SSOCS came online.","* It consists of three separate data collections:","* Stowed Items","* Wallet (aUEC)","* Reputation","* It stores the entities which are hidden away, only exist inside of inventories or are stored away (e.g. un-/despawned ships). Referred to as \'stowed items\'.","* There only exists one Global Database for all game worlds.","* This allows ships and inventory contents to be accessible from every game world.","* Even if players change to another game world, their stuff will still be available in that game world as well."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/7/9/2/a/2ebc80343d8991e7e8da4906c791200.png"},{"uuid":"012e1612b7842e58f51c4a47ffd7268b7f89da15","index":68,"imageURLs":["https://media.preziusercontent.com/media/7/4/5/e/a/9c82b854636bb60eeaf08bab44d.png","https://media.preziusercontent.com/media/6/a/e/a/e/aef21824370b0e9ceccb831fa00.png","https://media.preziusercontent.com/media/c/5/0/1/e/76929ab4861bad2951b43fa5193.png"],"pageIndicators":{"current":"3","total":"10"},"title":"Persistent Streaming","subtitle":"EntityGraph 1/3 - Graph database","texts":["EntityGraph is a graph database and is the successor and replacement for the pCache, introduced with Server OCS.","Inside the graph database, game objects are represented as \'nodes\'. Connections are made between nodes to symbolize a relation, also called \'edges\' in the graph. A ship is a node and all entities inside - like players and any entities the ship consists of - would also be nodes and be connected to the ship via an edge. The two main strengths of a graph database is that each edge can further describe the relation between two nodes. It also allows for arbitrarily complex queries.","This works perfectly with how Object Containers, Entity Hierarchies and the ZoneSystem work, as well as how this information has to be read and written. Adding, updating and removing nodes and edges are cheap database operations, which make up the majority of performed actions while simulating the game.","When new entities are spawned, a new document containing the state of the entity is easily added into the graph. The same happens when items are unstowed from inventories. Likewise, while entities are moving around in the game world or interacting with one another, edges between nodes can easily be added and removed as well. This also happens when entities move from one zone into another."],"originalSlideImageURL":""},{"uuid":"ba9bb67483abd05a686524ca730a308228793f08","index":69,"imageURLs":["https://media.preziusercontent.com/media/5/7/a/2/5/87848154507930bfcba305f81cc.png","https://media.preziusercontent.com/media/b/5/3/5/0/8448e6c4fe0bf6b7895c1639f2a.png","https://media.preziusercontent.com/media/8/0/2/d/0/321fecf414e955b8672a6bab324.png"],"pageIndicators":{"current":"4","total":"10"},"title":"Persistent Streaming","subtitle":"EntityGraph 2/3 - Database Sharding 1/2","texts":["In terms of storage space, a single database might be able to store the entire universe data. But, in terms of processing power, when one day serving dozens or hundreds of game servers, it most definitely cant keep up. Too many read and write requests would hit a single database server. Just like game servers, databases have limited computing power. The solution? Splitting the data and thus distributing the load by horizontally scaling the database across multiple servers. Something similar will be done with the game servers under Server Meshing."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/8/7/0/4/067e847410f9dd295cd9c8047151200.png"},{"uuid":"649b6474ac6d505703d7c6564dc159d442f863ce","index":70,"imageURLs":["https://media.preziusercontent.com/media/4/2/2/6/4/2deb93745ee84e93c62d007e69e.png","https://media.preziusercontent.com/media/f/3/a/4/a/7779de94bacbb22fd4d0606b82a.png"],"pageIndicators":{"current":"5","total":"10"},"title":"Persistent Streaming","subtitle":"EntityGraph 2/3 - Database Sharding 2/2","texts":["For example, the data of each planetary system could be its own database shard sitting on its own server. These sub-sets can be created through a sharding key and chunks. With these techniques, a router service is able to determine, in which sub-set and thus database shard a specific piece of data is being read from and written to. Therefore, the (also horizontally scalable) router service makes sure that the read and write requests reach the correct database shard. These router lookups are fast operations compared to the actual queries on the DB shards, so dont add a lot of latency.","Speculated: The amount of sub-sets and thus database shards can change and scale automatically, depending on the load.","EntityGraph uses the common \'Database Sharding\' technique. Instead of one database server containing the entire data, the data is instead logically split into sub-sets. And each sub-set is then stored on its own database server, a Database Shard (Important Note: this has nothing to do with \'Game World Shards\' which we will learn more about in the Server Meshing topics)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/b/2/c/e/1f17cb041b6a085cc46b550640c1200.png"},{"uuid":"0aab9dd5eabcd26a30eaed0974cab68baebcdb5f","index":71,"imageURLs":["https://media.preziusercontent.com/media/7/9/0/4/e/cea97bc4042af759f1942a50abf.png"],"pageIndicators":{"current":"6","total":"10"},"title":"Persistent Streaming","subtitle":"EntityGraph 3/3 - Database Replication and Crash Recovery","texts":["But what would happen if one such database shard crashes or is not reachable? To minimize the loss of data and increase fault tolerance and service availability, EntityGraph also makes use of Database Replication. A data sub-set does not exist on just one database shard, but across additional database shards, which are called Replicas. With this, the same data exist on multiple database servers at once (also known as Data Redundancy).","This enables database crash recovery functionality: If one database shard goes down, the other replica shards can still take over. A new database shard (or replica) can be spun up and the data can be copied/replicated back to this new one to ensure that there are always enough servers with copies of the data available and no data is ever lost. The replicas can also be used to read from, which makes the data available to more consumers.","Going forward we will show and talk about EntityGraph as if it is just one database server. But remember, especially once game worlds are simulated by multiple game servers, that each game world will have its own EntityGraph, consisting of many database shards and router services. (Or - speculated - each game world has its own collection in one large EntityGraph database.)"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/c/4/5/3/6e5cdbf43d89649d79ab23c23d41200.png"},{"uuid":"430d3f25bbe216532573d041484502be75b74e8d","index":72,"pageIndicators":{"current":"7","total":"10"},"title":"Persistent Streaming","subtitle":"Global Database 1/2 - Another database","texts":["Alongside the EntityGraph databases, there exist another database: The Global Database. But why another database? Why the need for two databases?","The reason for this is that each game world has its own state. And this state is saved into its own EntityGraph database where all physicalized entities of that specific game world are saved into.","In comparison, the Global Database allows specific data to be made available to all game worlds. Therefore there exists only one Global Database for all game worlds, in contrast to one EntityGraph database for each game world. This is required for player ships, all items on the player character or inventories in general, which should be available in the same state, independent on which server the player is currently playing on.","The Global Database stores data related to Reputation, Currency (aUEC) and - most interesting here - Stowed Items. Items are interesting because they can be persisted in either the EntityGraph or the Global Database. We have a deeper look about items on the next slide."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/b/b/f/5/a522d8d45b3b9178c528e9689681200.png"},{"uuid":"377425eefafbd84b85bc7db0be3a0f1cc430eae9","index":73,"imageURLs":["https://media.preziusercontent.com/media/7/a/0/9/0/97fee604350b7d297c3a90333a2.png"],"pageIndicators":{"current":"8","total":"10"},"title":"Persistent Streaming","subtitle":"Global Database 2/2 - Stow & Unstow","texts":["The Global Database and especially Stowed Items are important in the context of Persistent Streaming. Even though the goal is a single game world, a single shard, until Server Meshing provides the performance for this, there will still exist multiple game worlds in parallel. Therefore, initially players have to be able to move between game worlds, determined by matchmaking whenever they log-out and back in. In this case, the player items need to move with our player characters between game worlds. The Global Database enables this capability and makes our data accessible to all game worlds.","The game now differentiates between stowed and unstowed items. When an items exist physicalized in the game world, it is an unstowed item and is stored in the EntityGraph database of that game world. When an item exists inside inventories or are un/despawned ships - and therefore only interactable from the UI - then they are considered stowed items and are stored in the Global Database instead.","Therefore, whenever items are moved into an inventory, its node (e.g. Gun #9001 in the image) is removed from the EntityGraph database and a new entry is created into the Global Database (e.g. into the Inventory of Box #123). If an item is taken out of an inventory or a ship is spawned, then it is removed from the Global Database and a new node is created in the EntityGraph (an edge as well)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/0/a/5/e/2b4b5c44927b013a936e5e6338f1200.png"},{"uuid":"8b82ae9107d3ca80253d06e6f5688b561eb6aa34","index":74,"imageURLs":["https://media.preziusercontent.com/media/d/2/e/e/8/c31284540758221e6dda47f4e77.png"],"pageIndicators":{"current":"9","total":"10"},"title":"Persistent Streaming","subtitle":"Hybrid service / Replication Layer","texts":["While a first cache (holding game world state) and the Global Database were able to come online in a first version in Alpha 3.15, the Persistent Streaming feature was not completed just yet. The Persistent Streaming feature is considered to come first online with the EntityGraph (and Replication Layer).","We will talk more about the Replication Layer (sometimes called the Hybrid service) in a lot more depth in the upcoming Static Server Meshing topic. For now, all we need to know is, that it is a service that sits between the database, game servers and player clients. It will copy parts of the EntityGraph into its own memory (the in-memory cache that came online in 3.15) to coordinate the loading and networking processes.","Initially, when it first comes online, there will only be a single game server connected to the Replication Layer. Only once it has been tested and considered to work, the number of game servers are slowly increased over the next subsequent patches, at which point Server Meshing starts to comes online.","This shows that Persistent Entity Streaming and Server Meshing are two tightly coupled features and were developed alongside each other. We will go into more detail about the Hybrid service and the Server Meshing architecture as a whole in the next major topic."],"originalSlideImageURL":""},{"uuid":"1370340c2697f73a1409030389ecfb4bca77ec81","index":75,"pageIndicators":{"current":"10","total":"10"},"title":"Persistent Streaming","subtitle":"Service Migration & Economy Simulation","texts":["Last but not least, a lot of additional work was done toward Server Meshing in order to allow multiple game servers to share and access the same data of the game world. Many more services had to be created, some with entirely new functionality, others with existing logic which had to be moved out of the game server code into own services (e.g. the ATC logic responsible for having players and NPC request and being assigned a free hangar/landing pad).","Similarly, data which is generated from the Economy Simulation will also be made accessible to all game worlds and game servers. And events within all game servers will be fed back into the Economy Simulation, to have all players effect each other, even if they are not all playing in the same game world."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/d/e/6/e/8a551b84a71bbd0ac765a7026041200.png"},{"uuid":"2492bb07989183e8f0a835163ab095d179be7e19","index":76},{"uuid":"daf7dac327c48799aba6502fe978315c50a130ab","index":77,"pageIndicators":{"current":"1","total":"27"},"title":"Static Server Meshing","subtitle":"Overview","texts":["After the first version of Client OCS was released, Server Meshing could finally be worked on/toward.","Challenges:","* the game server is still overloaded with the amount of players/entities, and adding more increases CPU load even more.","* using better server hardware isnt a scalable enough option, so we need to make game servers horizontally scalable instead.","Solution: Static Server Meshing, a first version and intermediate step toward the Dynamic Server Meshing implementation","Goals:","* make use of Distributed Computation to have multiple game servers compute the same game world by sharing the computational load.","Approach:","* introduce the concept of Entity Authority which allows the simulation load to be distributed/shared across multiple game servers:","* each game server can now be assigned \'authority\' over specific entities (meaning only that game server determines that entity\'s state).","* a game server can now simulate just a subset of entities of a game world, instead of all entities by default.","* introduce the feature of Authority Transfers where the authority over an entity can be seamlessly handed off from one game server to another. Note: While playing, players can only move between game servers of the same game world, not between different game worlds.","* a new Hybrid service is introduced (which is also the cornerstone of Persistent Streaming):","* connects to and coordinates the communication between clients, game servers and the EntityGraph databases.","* relays entity state updates between clients and game servers.","* determines which objects should be loaded via OCS on which clients and game servers.","* also manages the Shard as a whole, starting up the game servers and connecting them to the Hybrid.","* consists of multiple components: Replicant, Gateway, Atlas, Scribe. These will be turned into their own scalable services later.","* New terminology specific to Server Meshing is introduced:","* a game world that is simulated by multiple meshed game servers is referred to as a \'Shard\' (a Game World Shard, not Database Shard!)","* a game server is sometimes referred to as \'Server Node\' as it is now part of a larger network/mesh.","* For the static version of Server Meshing, limitations are set in place (which will be lifted under Dynamic Server Meshing):","* the game world is spatially split into multiple sections and each game server is responsible/limited to simulating one such section.","* these sections limit the area a game server can have authority over.","* the area of these sections stays fixed/static, as well as the amount of game servers that compute the same game world stays fixed.","* design for Server Meshing was changed end of 2020/early 2021 to utilize the Replication Layer (speculated: instead of direct server-to-server communication)"],"sources":["qa1","cc2","lc1","cad1","scr","s201","s202","s203","s204","s205","s206","s207","s208","s209","w11"],"originalSlideImageURL":""},{"uuid":"512c7409c87be6c4d108c9c9658c74741ca42365","index":78,"imageURLs":["https://media.preziusercontent.com/media/6/d/c/2/5/d4e8090457aa5ab0ab3b8d20718.png"],"pageIndicators":{"current":"2","total":"27"},"title":"Static Server Meshing","subtitle":"Introduction - Initial Situation","texts":["With the first versions of Object Container Streaming (OCS) for both client and server done, we are finally able to move onto the initial goal: Server Meshing. Even with the OCS software systems in place, it is not possible to increase the player count to thousand of players nor add tens of thousands of objects into the game world to make 100+ detailed solar systems a reality. A single game server alone is simply not powerful enough.","Since the software technology that is Server Meshing is very complex, it is to be expected that it will take a long time to develop. To provide players a first version sooner, CIG decided to release a simpler, intermediate version of it first: Static Server Meshing.","This should theoretically allow AI improvements, gameplay mechanics and more solar systems and locations as well as slightly higher player counts to be added to the game sooner, even before work on the final Dynamic Server Meshing implementation would be completed. We will talk more about the different versions shortly."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/6/f/b/7/3177dfe40a2abf6394a919d95ea1200.png"},{"uuid":"66270b2409952a15e5cf200cda2960cb032a5f01","index":79,"imageURLs":["https://media.preziusercontent.com/media/0/0/3/d/b/11f28bc4fa28f06000794a2bee2.png"],"pageIndicators":{"current":"3","total":"27"},"title":"Static Server Meshing","subtitle":"A simpler visual abstraction for game servers and clients","texts":["Since we are now entering the topic of Server Meshing, we need to represent the network connections of servers and clients in a more simplified fashion.","The left half of the picture shows the server at the top and the connected players with their game clients at the bottom. Together they are forming a single Game World. There exist dozens of these Game Worlds independently from each at the same time. As before, the clients and servers are connected via a network (which in this case would be the internet) to allow information to be exchanged as data packets to have the server and clients stay synchronized.","The right half the picture shows our new simplified version. We now represent the game servers as rectangles and player clients as circles. Since each server and client is unique, we will sometimes identify them with numbers (and colors in the case of the player clients)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/c/5/d/6/d2baed5455dbeb1c956888d21d61200.png"},{"uuid":"0f891085e629a79d8437b92182e70fa1cfe2c41d","index":80,"imageURLs":["https://media.preziusercontent.com/media/3/e/2/3/7/b799efc4ed5a7c221fdbf6f47ad.png"],"pageIndicators":{"current":"4","total":"27"},"title":"Static Server Meshing","subtitle":"Introduction - Initial Situation","texts":["So far, each game world was simulated by a single game server (also sometimes called Dedicated Game Server or DGS). Furthermore, we can think of each Game World as its own \\"Star Citizen universe\\" with its own, independent state and happenings.","We can think of all these game worlds/universes creating a \\"multiverse\\". We can see this multiverse in the image on the right. Each game world is computed by a single game server/DGS. (Clients connected to the DGS are not shown).","The main downside is that each DGS currently simulates the entire game world and thus only supports a limited amount of entities, only up to 50 players and after some time ends up being under heavy load from all the loaded entities. Which makes player interactions and events rather rare and limited."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/1/3/d/f/edf41e747deaa6e72bbbb188f701200.png"},{"uuid":"a9472e69e1711ce11f4282cbd5af350ad3070784","index":81,"imageURLs":["https://media.preziusercontent.com/media/7/6/c/6/7/8bd11c24f03a74b05113f98c8d9.png"],"pageIndicators":{"current":"5","total":"27"},"title":"Static Server Meshing","subtitle":"Endgoal of a Single Game World","texts":["Therefore, the end goal is to have all players in the same game world and thus can meet up, see and interact with each other freely. With only one game world, there would only be one universe and no \\"multiverse\\" anymore.","This is going to be achieved by having all DGS compute the same game world. For this to work, different entities are be computed by different DGS. So each game server only has to simulate a small amount of entities instead of all entities in the game world. The game server that is responsible for simulating an entity is said to have authority over that entity. This authority can also be handed off between game servers.","At the same time, the networking logic of Client OCS will make it possible for players on two different DGS to still see and interact with each other.","Under Server Meshing, a game world is referred to as a Shard, a term coined by the MMO Ultima Online. Note: These are \'Game World Shards\', not Database Shards (see the Persistent Streaming topic).","However, while this is the end goal, for this single Shard/Game World to work it might require a very mature Dynamic Server Meshing implementation and capable lag compensation netcode. Until then - before all DGS are computing one and the same game world - we will have multiple intermediary versions of Server Meshing. In those versions, we will continue to have multiple game worlds (and thus still a multiverse)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/1/a/c/2/a885a6842c5b54ad1380af7d6ba1200.png"},{"uuid":"4b4e46dfbcec605b0fb72ae24343d578e988ee55","index":82,"imageURLs":["https://media.preziusercontent.com/media/3/2/0/0/0/893c87d4b44868354e73ce6dd2c.png"],"pageIndicators":{"current":"6","total":"27"},"title":"Static Server Meshing","subtitle":"Intermediate steps","texts":["Over time and across many patches, the amount of DGS/server nodes per Shard is going to to be increased. And in turn the number of entities (more locations with more items) and players per Shards can be increased as well. Fewer and fewer Shards will be required, until potentially - one day - a single Shard consists of enough DGS so that it can handle the load of all players (of a region/continent or world-wide).","CIG likes to refer to their game servers - on which a game server executable/program runs - as a Dedicated Game Server (DGS). Under Server Meshing, they are also referred to as Server Nodes to highlight the meshed environment. We will use the terms game server, DGS and Server Node interchangeably as they mean the same thing. A server that simulates (a part of) the game world.","However the difference - even in the intermediate Server Meshing versions - is that each game world is already being simulated by more than one game server. And DGS of the same Shard exchange entity state data with each other. With these network connections, the DGS are \\"meshed\\" together, forming a \\"mesh network\\" of DGS. The game servers end up being meshed: (Game) Server Meshing.","Once a game world is computed by more than one DGS, we refer to that game world as a \\"Shard\\". This helps us differentiate the game worlds being simulated by multiple meshed DGS, from the game worlds running on a single DGS (\'game world instances\' vs \'game world shards\'). Each Shard will still be its own SC universe, with its own Stanton, Pyro, Nyx, ect. but do share the same economy from the Quantum Simulator."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/2/c/a/9/b58d012496c95f3f874d31693ea1200.png"},{"uuid":"db611414e06f9c982fdd30f9a6af7198be42f88b","index":83,"imageURLs":["https://media.preziusercontent.com/media/b/7/7/9/f/97c78424719b2b46eca81b90939.png"],"pageIndicators":{"current":"7","total":"27"},"title":"Static Server Meshing","subtitle":"Shard Transitions vs Entity Authority & State Replication","texts":["There are going to be different types of transfers happening under Server Meshing.","* Entity Authority Transfers will only be used within a Shard to pass authority beween two game servers of that Shard. That means authority can never be passed to a game server of a different shard. Remember that each game world has its own contained state of the game world and its own game servers that simulate only that state. An Authority Transfer means that another game server is responsible for simulating the entity. These authority transfers are happening infrequently and will be more frequent, once Shards are scaled with more game servers simulating different parts of the same game world.","* (Player Item) Shard Transfers are transitions that happen across two shards. This can only happen while a player is not playing and will eventually be triggered by matchmaking when we are put into a different shard rather than the one we last played on (e.g. because we want to play with a friend on another shard). These Shard Transitions will become less and less frequent the larger shards are scaled, because players are more likely to play in the same Shard across multiple play sessions. Ideally (!) we would have just one Shard, so that no Shard Transfers are necessary.","* There is also State Replication, which could be seen as a kind of transfer of entity state. Here, entity state is send to different machines, such as player clients, the EntityGraph database and other game servers (more on this later). Like Entity Authority Transfers, the replication of state occurs only within the same shard and is performed by the Replication Layer. Sending this state is very frequent and can happen multiple times a second, sometimes on each game tick. Serialized Variables and OCS optimize this."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/a/8/e/c/3cda44046ed879470faac0890d51200.png"},{"uuid":"966058d058c7d934d95c05448455d4de3009cee7","index":84,"pageIndicators":{"current":"8","total":"27"},"title":"Static Server Meshing","subtitle":"Major and Minor versions of Server Meshing","texts":["In the very first version of Server Meshing, each Game World (universe/Shard) will mostly likely only be computed by few game servers (server nodes). Mainly to be able to test the functionality in a simple and controlled environment.","Afterwards, it will be increased to more and more server nodes across many patches. While there are going to be many of these gradual increases, there are going to be two major versions which Server Meshing can be categorized into:","Static Server Meshing","* A game world is going to be split manually into sections by the developers. Each section will be simulated by one game server/server node.","* The name \\"static\\" means that these sections stay unchanged in their virtual size and amount (and thus also the amount of server node).","* Server nodes (indirectly) exchange information whenever necessary, e.g. to allow for seamless transitions and interactions of entities, as well as server nodes exchanging entity state with each other where necessary (e.g. for collision checks).","* There will still exist many Game Worlds/Shards along side each other, since not enough computing power will be available yet to fit all players into a single Game World/Shard.","* A performance issue with this implementation exists: when all players of a Shard meet up in one section, then all have to be computed by one server node. Then that server node will be overloaded again, dropping in tick rate and negatively impacting the player experience.","Dynamic Server Meshing","* The game world wont be split into these sections anymore. Instead each game server is now able to follow a set of players wherever they go.","* The name \\"dynamic\\" means that the amount of server nodes can increase and decrease. And that the entities a game server is responsible for simulating can be changed on-demand anytime rather than just at the border between sections.","* All of this is done programmatically, meaning that - for each Shard - an algorithm is monitoring the performance on all server nodes and then tries to optimally distribute the load across the server nodes. More server nodes can be spun up or existing ones shutdown.","* There will also be multiple minor versions of Dynamic Server Meshing, each increasing the number of server nodes per Shard, until eventually all players of a geographical region (EU; US, etc.) fit into one single regional Shard, maybe even all players world-wide into a single word-wide Shard."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/c/1/c/c/5ff827a48e6936b08ace43b48a91200.png"},{"uuid":"91cbbf5de064b5e8448cad8b0273d3bf9d7b4ef6","index":85,"imageURLs":["https://media.preziusercontent.com/media/7/5/0/8/e/4d5a0984e939905e41a3445815d.png","https://media.preziusercontent.com/media/b/4/e/e/3/06d6e124816b41be7fd4fc876dc.png"],"pageIndicators":{"current":"9","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 1/8","texts":["Static Server Meshing splits the level into multiple sections to simulate each one on its own server. For example, the Stanton solar system could be split in half. Then two game servers could compute two planets each.","In our example on the right, this split has been the green and red boxes. We only split the level into two sections, however Static Server Meshing could allow for dozens of sections (e.g. each of the major planets and each of their moons in the Stanton system on their their own server). However, this might be an inefficient use of servers since it could lead to a lot of empty or low load servers. Therefore, it initially will be divided in as few sections as possible for testing purposes, then slowly increased in numbers over subsequent patches.","In our example, we split the game world into two sections, red and green.","We are going to explore the concepts of Server Meshing by following the journey of the blue players which is about to travel from Microtech to Hurston."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/9/1/f/a/2/a266fc44835a2e530ab4d22d5df1200.png"},{"uuid":"556ed044a75959c3c4e3df810f08c6e310fca5e7","index":86,"imageURLs":["https://media.preziusercontent.com/media/c/e/7/2/3/5568e6a4d9c85f63f911ad4d663.png"],"pageIndicators":{"current":"10","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 2/8","texts":["In our example, we will have our three players again, just like we did in our previous examples for Client and Server OCS. The difference is that we now have two game servers instead of just one.","We don\'t show the clients anymore, but remember that loading on the clients via Client OCS is still happening. We rather want to focus on how the game servers simulate and handoff entities between game servers (or \'server nodes\' how they are also called under Server Meshing).","We can see the split in the level by the green and red boxes. Players Red and Green are busy on the second game server (green box). Meanwhile, player Blue is loading cargo on the first game server (red box). We can see that the servers don\'t load the entire game world anymore - even if there are players - and instead only focus on their box/section. However, that might not be entirely accurate."],"originalSlideImageURL":""},{"uuid":"100452471dfca5b342430908c2d89fac5b861bb3","index":87,"imageURLs":["https://media.preziusercontent.com/media/1/9/2/a/3/9aa9fb947b18d666e8dc4a62e77.png"],"pageIndicators":{"current":"11","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 3/8","texts":["Speculated: To make server handoffs smooth and seamless, there might be an area at the border in which game servers overlap slightly where both servers load the same entities. Therefore, we have updated the boxes to also overlap.","We also need to highlight which server computes which entities. For this reason, we now color the players by the color of the game server who currently is responsible for simulating it. Our blue player being computed by Server Node 1 turned red, and the other two players on Server Node 2 turn/stay green.","When a game server simulates an entity, then we say that this game server has authority over the entity and its state. This feature is called Entity Authority and we will explore this in more depth in later slides.","For now, let us see what happens, when the Blue player (now red to signify that game server 1 has authority and simulates it) is about to transport cargo from Microtech on Server S1 to Hurston on Server S2."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/7/d/f/c/e07d7f84c2681c1807463b87e741200.png"},{"uuid":"fcb323b5266eebb121f00616a33dd6de0646e930","index":88,"imageURLs":["https://media.preziusercontent.com/media/8/0/1/5/5/2dd6a2740558df0742e58fe3a0e.png"],"pageIndicators":{"current":"12","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 4/8","texts":["Once the blue player starts quantum traveling, Server OCS will continue loading and unloading the game world around the players. However, game servers are now limited, in what they can load and can have authority over, to their box. Once the Blue player closes in on the section/box of the server 2, the server will start to load the game world.","This implies multiple game servers may have the same game objects loaded into their memory. Which is one of the requirements to ensure a smooth handoff.","Speculated: How this is going to work exactly is still unclear. Even tho we show that game server 2 would gradually load the game world while the player approaches its section, it might be that a server only starts loading an area once the player entered its section."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/2/4/8/a/a8f47d143438dcc0995566cef921200.png"},{"uuid":"e82814bdb9350dc3d8fb1a8360d1c6c87e7e6e71","index":89,"imageURLs":["https://media.preziusercontent.com/media/3/a/f/6/e/01cc7b7480fb564af8730bc2ccf.png"],"pageIndicators":{"current":"13","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 5/8","texts":["The Blue player continues to travel through the level and now the player entity is in the overlapping section. Server OCS continues to do its job and now the player entity is loaded into the memory of both game servers.","At this point, game server 1 starts sending entity state of the blue player to game server 2. This allows both servers to have the same/similar entity state. This is referred to as game server 2 receiving a \'client view\' of the Blue player. This view is send via the new Hybrid service which we will learn more about soon.","It is important to note that game server 1 still has authority over the Blue player. But it is in this overlapping area (or at the zone/box border) that authority can be handed off to another game server. When a handoff occurs, authority is taken away from game server 1 and given to game server 2. We will see on the next slide that the color of player Blue will turn green."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/0/a/8/5/6c144ba4de3b443f0544d167e3e1200.png"},{"uuid":"3ca1a08a1773d39e152bcccef7e50a19c2a8efca","index":90,"imageURLs":["https://media.preziusercontent.com/media/7/6/7/f/4/407fd184bf68c95979d8760c542.png"],"pageIndicators":{"current":"14","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 6/8","texts":["The Hybrid service is responsible for assigning authority to game servers and decides when authority is transferred between game servers. In the first version of Server Meshing, transfers will only happen in deep space somewhere between planets, but the dynamic versions it is supposed to happen anywhere anytime.","Only one game server can have authority over an entity at a time, never more. However, other game servers can receive state updates of an entity which the game server with authority sends (more on this on the next slide).","As we can see, authority of the Blue player was handed off to game server 2 and we changed to colors to green accordingly. Game server 1 does not simulate the Blue player anymore and instead receives the client view from game server 2."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/2/e/b/c/985e1744184980d573cc3c4be751200.png"},{"uuid":"dc5cbb596f1565f76f8edba588ab49a784b2013a","index":91,"imageURLs":["https://media.preziusercontent.com/media/2/a/e/0/b/26b944c41dab5b49a6ebaeed575.png"],"pageIndicators":{"current":"15","total":"27"},"title":"Static Server Meshing","subtitle":"INTERMISSION: State Replication (Client Views for Game Servers)","texts":["When game servers overlap in the virtual space, they load the same entities into their memory. This is what Server OCS does. Since only one game server can have authority over the entity at any given point in time, the Hybrid/Replicant service can decide to send state updates to other game servers which do not have authority over that entity. This is the same or similar entity state data which the player clients receive. Which is why CIG initially explained it as \\"client views for game servers\\".","This way game servers can let each other know whats up and keep entities synchronized on multiple game servers. This can then be used for those seamless authority transfers between the game servers.","Speculated: For collision checks between two entities on different game servers there might have to be a consensus reached by the game servers or decided by the Hybrid/Replicant service."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/8/5/a/c/90f3d684c94a735860df3f52b951200.png"},{"uuid":"6207d630826afc24adbf1f7f47f1eaba9b79952d","index":92,"imageURLs":["https://media.preziusercontent.com/media/b/7/7/3/2/b8fd9554c07b88e51c68a4b856d.png"],"pageIndicators":{"current":"16","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 7/8","texts":["The Blue player continues their journey, now simulated by the second game server. Server OCS continues to load and unload the game world accordingly on both game servers. However, the decision making (what needs to be loaded) is not done by the game servers individually anymore and instead the Hybrid service figures out which Object Containers have to be loaded on which game server (and clients as well for Client OCS).","For this, the Hybrid services/Replication Layer makes requests to the EntityGraph database and loads the game world - around the players - into its own memory cache. That is why we can think of the level shown on the left in our example as the Hybrid service. However, the Hybrid server does not simulate anything. That is the responsibility of the game servers. But we can think of the Hybrid service as having client views of all entities on the game servers."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/c/c/8/4/8c694fd400abf800451e20c1bf21200.png"},{"uuid":"7235a5ab3691c5f745556acea70f544d431e3fdc","index":93,"imageURLs":["https://media.preziusercontent.com/media/3/4/2/2/5/325b61947dc944b5679c1ca686d.png"],"pageIndicators":{"current":"17","total":"27"},"title":"Static Server Meshing","subtitle":"Entity Authority & Authority Transfers 8/8","texts":["In our example, the Blue player has now arrived at Hurston and starts selling his cargo for a profit.","We notice that game server 1 now has no players in its section of the game world anymore while all players are on server 2 and have most of the locations loaded. This showcases the bottlenecks of Static Server Meshing very well:","Empty of half full game servers are underutilized (costing as much to rent as game servers under full load), while game servers with too many players/entities can still end up being overloaded again.","These downsides will be overcome with Dynamic Server Meshing, where game servers can be spun up and shutdown on-demand and where the green and red boxes do not exist anymore. There, this \\"area limitation on Entity Authority\\" - by assigning sections of the game world to specific game servers - wont exists anymore. Instead, authority will be much more fluid and game servers can follow its players and keep authority over them wherever they go. We will explore this in the Dynamic Server Meshing topic tho. For now lets have a deeper look at the Hybrid service."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/0/b/2/1/b85631a462f9841c985af6a540f1200.png"},{"uuid":"96aa6d7005471aa0b3a8b04ade5dd24ceeb2b0c7","index":94,"imageURLs":["https://media.preziusercontent.com/media/b/1/6/e/f/2ff05f14c488f26d77170231082.png","https://media.preziusercontent.com/media/2/c/f/f/1/126ad634679965cbe857c3d8303.png","https://media.preziusercontent.com/media/6/9/e/d/c/bca111e4ed39c0d0c666064cbe2.png"],"pageIndicators":{"current":"18","total":"27"},"title":"Static Server Meshing","subtitle":"Territories - Game World splitting via the ZoneSystem 1/2 (SPECULATED)","texts":["To understand Entity Authority and Authority Trasnfers some more, we also need to talk about \\"Territories\\". In order to be able to have different server nodes of a Shard compute different sections of the level, there needs to be logic that splits that Game World into these sections. These in-game sections are referred to as Territories. Splitting the Game World may make heavy use of the ZoneSystem (physics grids). It already splits the Game World into areas. Therefore, a Zone can be a room, spaceship interior, landing zone or even a planet/moon, planetary system or an entire solar system.","Multiple Zones may be used to form the Territories. Thus one Territory could be considered a collection/group of Zones. All these Zones of a Territory and all entities within would be computed by exactly one DGS.","Without Server Meshing, the entire Game World can be thought of to be just one single large Territory. The entire Game World is therefore computed by a single game server. This is shown in the images on the right, where all zones are marked with a red color. But once we can have multiple DGS (server nodes) working together, there will be many Territories in a single Game World (see next slide)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/e/9/9/b/20e75e94d44bd817b48d3e7cedb1200.png"},{"uuid":"e02fd0bb900dcdd68b3cf4298477a6002e471247","index":95,"imageURLs":["https://media.preziusercontent.com/media/8/f/6/7/5/730afe34539bfb1e24b234f6968.png","https://media.preziusercontent.com/media/b/8/1/0/7/1277eb744e3a3876cdaad0f2ecc.png","https://media.preziusercontent.com/media/6/9/e/d/c/bca111e4ed39c0d0c666064cbe2.png"],"pageIndicators":{"current":"19","total":"27"},"title":"Static Server Meshing","subtitle":"Territories - Game World splitting via the ZoneSystem 2/2 (SPECULATED)","texts":["As Zones can be nested (e.g. a landing zone on a planet or a vehicle inside a spaceship and the spaceship inside a hangar on a planet), a tree data structure of Zones emerges. Such a tree data structure can be split into multiple sub-trees.","One such sub-tree could then be considered a Territory and thus computed by one server node. Sub-trees themselves can be further split or merged into more or fewer sub-trees and thus Territories. Especially in Dynamic Server Meshing, it\'s algorithm would then determine, which Zones are going to be part of which Territory, factoring in on the load in those Zones.","More speculation: Therefore, the smallest Territory is going to be a single Zone, e.g. a single room inside a spaceship (unless individual entities like players also have their own zone). However, for certain situations, it might be necessary to spawn Zones dynamically (e.g. for a large space battles somewhere in space or on a planetary surface when a lot of players meet up in one place) to handle such loads specifically."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/9/e/a/c/32c4d254c988e3816b2959d5c421200.png"},{"uuid":"9856cbdbe159af63b8ac10251ae7a504e3ee5a47","index":96,"imageURLs":["https://media.preziusercontent.com/media/1/4/a/7/a/7067a4442e9be66cd5896a60842.png"],"pageIndicators":{"current":"20","total":"27"},"title":"Static Server Meshing","subtitle":"Humble Beginnings - The Hybrid Service 1/3","texts":["The Hybrid is a new service and the initial heart of Server Meshing.","The Hybrid service sits between the game servers, player clients and the EntityGraph database of a Shard. It can be seen as the glue that connects everything together by coordinating and communicating between clients (represented as circles with a C), game servers (server nodes) and database.","Initially, each Shard will have one such Hybrid service. The server nodes and player clients establish a network connection to the Hybrid to be able to send and receive data from it. The Hybrid will establish a connection to a EntityGraph database to request and store the state of the Game World.","Using a mediator service like this - which sits between everything - makes it easier for the logic on the clients and servers as they don\'t have to be aware of where their data goes to or comes from. It all goes to the Hybrid first, which takes care to further relay it to the actual destination(s). Furthermore, each server node and client only needs to establish a single connection to the Hybrid, rather than every participant having a connections to all other participants of a shard. The Hybrid reducing the number of direct interactions and required decision making that would otherwise have been done on each game server.","When the Hybrid first comes online, it will only feature a single server node to test it. Once this new infrastructure is working, more server nodes are added and Server Meshing comes online."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/9/7/d/9/797bb7944b3a68bf672ab5124361200.png"},{"uuid":"8cfb0f7f411a885ffb8ca136f73de3af99ed6355","index":97,"imageURLs":["https://media.preziusercontent.com/media/9/0/c/e/1/fd46e3b41bab86246fb856f2a2f.png"],"pageIndicators":{"current":"21","total":"27"},"title":"Static Server Meshing","subtitle":"Humble Beginnings - The Hybrid Service 2/3","texts":["The Hybrid service itself actually consists of multiple components, each one with its own functionality that is vital to bring Server Meshing online. The components that we know of so far are:","* Atlas","* Manages Entity Authority and Authority Transfers","* Replicant","* takes care of loading the game world on both client and servers","* takes care of networking the game state for both clients and game servers","* has the game state cached in its own memory, but does not simulate it, as that is the job of the game servers","* Gateway","* takes care of sending data from/to player clients","* Scribe","* Functionality still unknown. Database-related?","This is just a quick overview. These services have been talked about in lots more detail in their own Minor Tech slides. But, we are still going to drill down on the Replicant and Gateway components, as these play key roles in Server Meshing.","More types of services have been teased but not elaborated on yet."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/a/b/3/0/ab6d2aa4452b8aef2437697a51a1200.png"},{"uuid":"f0cdb36abf0cd534066d4014a55f5d9ae0e00fd2","index":98,"imageURLs":["https://media.preziusercontent.com/media/9/0/c/e/1/fd46e3b41bab86246fb856f2a2f.png"],"pageIndicators":{"current":"22","total":"27"},"title":"Static Server Meshing","subtitle":"Humble Beginnings - The Hybrid Service 3/3","texts":["However, the plan is to eventually move all these components out of the Hybrid to have them be their own services, running on their own servers. Once all components have been taken out, the obsolete Hybrid service will then be removed. This work is done when working on/toward Dynamic Server Meshing, after Static Server Meshing has released.","The individual service types are going to be horizontally scalable, meaning that multiple Replicant services could be running alongside each other. This is how Server Meshing is planned to be scaled up to support many more entities and players.","But - because the Shards for the very first versions of Server Meshing are still going to be very small (few server nodes and player clients) - a need for many services is not there yet. To bring Server Meshing online, have its functionality tested and made robust, a smaller, more manageable environment with a single Hybrid service is much more suitable. The infrastructure complexity and its overhead is minimal and the focus can be on maturing the functionality itself. Once that is working fine, the components will be turned into services and scaled up."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/4/5/d/c/b25b7d546f299d83cc67135aa3c1200.png"},{"uuid":"be75aae7e3c9ac2d60b94b876568fbf356869dc7","index":99,"pageIndicators":{"current":"23","total":"27"},"title":"Static Server Meshing","subtitle":"Replicant & Gateway 1/4 - The Deeper Look","texts":["The Replicant & Gateway are components of the Hybrid service.","Not all of their code is new. Parts of their functionality already exist as OCS functionality. OCS had already introduced various logic to load Object Containers on both clients and servers, as well as optimized the networking by only sending entity states to the individual player clients that need it. For Server Meshing, most of that OCS logic is moved into the Hybrid service as part of the Replicant and Gateway components.","Player Clients and Game Servers wont connect directly anymore. Instead Game Servers are connecting themselves to the Replicant, while the Player clients connect themselves to the Gateway."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/f/b/3/e/b99e9a6499c8362e4d2962fe2521200.png"},{"uuid":"31fc961b1c7938654384ff92afb1a7a4e37762bc","index":100,"imageURLs":["https://media.preziusercontent.com/media/4/1/1/2/d/bc3101648b0a1082b041561acf1.png"],"pageIndicators":{"current":"24","total":"27"},"title":"Static Server Meshing","subtitle":"Replicant & Gateway 2/4 - Object Container loading","texts":["The Replicant & Gateway include what could be considered the decision making logic of OCS. Mainly functionality of Network/Entity Bind Culling and Serialized Variables Culling that were introduced as part of Client OCS. If we remember, these were responsible for","* determining which Object Container to load on both the clients and on the game server","* determining which entity state updates have to be send to which player client","Note: The loading logic of OCS that actually load & unload the entities into memory via Object Containers are still on the server nodes and player clients.","In the image below we can see the Network/Entity Bind Culling functionality in action. Previously, under OCS, the game server determined which Object Containers it had to load. After the game server had successfully loaded these Object Containers, it then told (some of) the player clients to load those Object Containers as well. Under Server Meshing, the Replicant is going to take over this part for the clients AND game servers. This has the benefit that Object Containers can be loaded on clients and servers in parallel (came online with Alpha 3.17). They dont have to load on the game server first anymore before the client is notified (which was a bottleneck without the Replicant)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/d/b/7/b/5b454c14a1d816bc3e173ffa8891200.png"},{"uuid":"16ae47238cca974e4690ea0ede014d72eeb05923","index":101,"imageURLs":["https://media.preziusercontent.com/media/a/0/2/5/c/778eebf4270b2ba4500deb86cb3.png"],"pageIndicators":{"current":"25","total":"27"},"title":"Static Server Meshing","subtitle":"Replicant & Gateway 3/4 - Entity State Network Replication","texts":["The entity state updates from server nodes are send to select clients and other server nodes of the Shard. This was previously determined by Serialized Variable Culling (part of OCS) in the game server logic, but now done by the Replicant service.","Note: How and where exactly the decision is being made (Replicant and/or Gateway) was not clear to me. But we do know that the Replicant is copying parts of the EntityGraph database into its own memory - to cache entity states for quick read and writes, to know about the position of all entities. We also know that the Gateway is supposed to be a very lightweight.","Speculated: Therefore, the Replicant might already be determining to which client(s) it has to be send and the Gateway just replicates and sends the data to the correct clients.","This allows players to receive entity state updates from multiple server nodes. This enables players to look into multiple server nodes and see entities and other players that are computed on other server nodes. This is also used when two server nodes have to sync up entities for a authority transfer/handoff when entities are about to cross from one Territory to the other.","The Replicant will update the data in its own in-memory cache with the data which was send from the server nodes (with authority) and persist these changes back to the EntityGraph database."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/4/9/b/c/22930d944ee9e4e36395295ab871200.png"},{"uuid":"cdf18b8aa26c30d29ad7d571f7570c1ea4693bb2","index":102,"imageURLs":["https://media.preziusercontent.com/media/a/f/2/8/d/58322434da2acbe5e13d81f4c39.png"],"pageIndicators":{"current":"26","total":"27"},"title":"Static Server Meshing","subtitle":"Replicant & Gateway 4/4 - Player Action Network Replication","texts":["In a similar fashion, the clients send their actions to Gateway which will relay those to the Replicant. And those Replicants will relay it to the correct server nodes that require this information.","Speculate: It might be that the Gateway service also relays client actions directly to other clients, and not just to the Replicants. This would mean that player actions might end up on each others screen quicker. This would minimize latency until the verification from the server nodes would arrive, which in this case would follow shortly after (if the server node disagreed then the client will have to make rollbacks and adjust the entity state). This might be especially useful in a world-wide shard where the latency to the server node in another datacenter might be higher."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/b/0/8/a/e3f941f41f9a2851e201c79cbb81200.png"},{"uuid":"31397b0092c57962dcdaf4e06afee4de1cd64ca1","index":103,"imageURLs":["https://media.preziusercontent.com/media/0/b/1/2/d/9d6a411462c885eb4b0b4116fc6.png"],"pageIndicators":{"current":"27","total":"27"},"title":"Static Server Meshing","subtitle":"Clients partially looking into multiple server nodes","texts":["All entities in the game world are persisted in the EntityGraph database which can be accessed by the Hybrid service (Replication Layer or Replicant).","The image on the right visualizes OCS and Server Meshing very well. Specifically how the individual game servers are partially loading and simulating parts of the entire game world with the help of Server OCS. As well as how the player clients looking partially into one or multiple game servers via Client OCS."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/d/a/b/a/f6088d940e38d365b9549c13e3f1200.png"},{"uuid":"521d71e281b3f43a5c895ca553124fda39d7b46c","index":104},{"uuid":"2930cb3b4d3e7fd88c62527b3b256154ed8f591c","index":105,"pageIndicators":{"current":"1","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Overview","texts":["With splitting the game world and its simulation with Entity Authority, the next step is to make this solution dynamic for better scalability. (Disclaimer: Many details about Dynamic Server Meshing are still unclear!)","Challenges:","* while the individual servers are now less likely to hit their memory and CPU load capacities, the issue of too many players being in the same section of the game world, and thus on the same game server, still exists","* one solution would be to make the sections of all game servers very small, so that each one only has very few locations and spaces to compute. However, this increases server expenses and potentially to a lot of unoptimally used servers.","Solution: Dynamic Server Meshing","Goals:","* allow for (theoretically) unlimited player and entity count in a Shard (at least on the server-side, but not client-side)","* ideally, allow all players to play in one single Shard (either one Shard per region and/or even a single world-wide Shard)","Approach:","* The Entity Authority limitation for the game servers - game servers always responsible for a section of the game world - is lifted.","* Instead game servers follow their \'authorized\' players freely while those travel through the game world.","* Game servers can now overlap, exchange \'client views\' with each other and transfer authority anywhere in the game world.","* New functionality is introduced as well:","* An algorithm/heuristic is introduced, which continuously monitors the computational load in the game world and decides for an optimal distribution of the computational resources (servers), by moving entities and their authority from an overloaded game servers to a underutilized game server.","* Whenever a Shard becomes too crowded/overloaded, an additional game server is spun up to provide more computational power. Likewise, game servers can be shutdown, if there is not much load. Less servers rented, more cost-efficient Shards."],"sources":["rtv1","s204"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/8/7/2/7/1da4ad342f584b3d1598f2320a11200.png"},{"uuid":"a7f8c9efacf4674461770f808106738ce7a40193","index":106,"imageURLs":["https://media.preziusercontent.com/media/5/4/c/a/7/1e9f21b409aa0bfb15c8d5bc9ec.png"],"pageIndicators":{"current":"2","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["Under Dynamic Server Meshing, most of the logic of Static Server Meshing will stay intact. It is merely iterated upon and improved to be able to achieve larger Shards with more players and entities in it, while also managing the real world economical side of renting just the necessary/optimal amount of game servers. This is done by scaling the number of server nodes and other services (Replicants and Gateway services) to the optimal amount.","The big difference between Static and Dynamic SM is that, the limitation we previously had on the game servers. This limitation is now lifted and thus they are not assigned a specific section of the game world anymore. For this reason we have removed the red and green boxes in the image below. The functionalities of Entity Authority, \'client views\' between game servers and Authority Transfers still exist and are utilized."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/7/8/7/a/53312bf45fc9c0ab36f3e0bf2b41200.png"},{"uuid":"0c470c339e6aeb0b0950357f7edd83a8d7476515","index":107,"imageURLs":["https://media.preziusercontent.com/media/2/c/d/d/f/b7c36694ca0812ce4fb726f0a37.png","https://media.preziusercontent.com/media/d/b/0/f/7/fe7400647b4bf145506185755ba.png"],"pageIndicators":{"current":"3","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["Without these sections, game servers are now able to load any part of the game world - but still limited to those around their authorized player - and have authority over certain entities within those loaded areas. They will follow their players - over which they have authority over - and load the game world wherever they travel to.","In this case, the green players spread out in the level and their game server followed them."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/a/9/8/8/e5b3bda44f385945c2a7410f7441200.png"},{"uuid":"ca5a3448afe2ffd9fd1e9e94b0466b09b3f5021e","index":108,"imageURLs":["https://media.preziusercontent.com/media/2/0/a/f/f/c3758d240d780335d003528ebe4.png"],"pageIndicators":{"current":"4","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["When players from different game servers meet up in the same location and the game servers overlap, then they will load all entities in that area and start exchanging \'client views\' with each other. Like they did at the section overlaps under Static Server Meshing."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/a/3/5/9/7bae0ad4e6f96b5ea080bf030211200.png"},{"uuid":"86e0a269c9c1f79fbbd39686c3e7a15458c51810","index":109,"imageURLs":["https://media.preziusercontent.com/media/0/a/7/4/5/1844ae44ad3a5e5d777bd3ed35c.png"],"pageIndicators":{"current":"5","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["At this point, authority might be handed off anytime to one of the game servers. But it could also be decided that these players stay on their game servers, so it is also very possible that players stay on their assigned game server throughout their whole play session.","Maybe, most of the time, only interacting entities need to be moved onto the same game server (for example reduce server-to-server communication, the need for consensus techniques and ultimately to reduce computational load and save on game servers). For example, entities that travel past each other (like while flying, especially in Quantum Travel) do not need to be moved onto the same game server."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/f/c/7/b/dbd7ce84e989cd8558ffcd3277a1200.png"},{"uuid":"7fe9598ea645e9674d1261b3a5f3b048fb0aab9d","index":110,"imageURLs":["https://media.preziusercontent.com/media/3/d/2/4/4/d9316104190849bc3a121ec4858.png"],"pageIndicators":{"current":"6","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["When more players are joining the Shard, or there is more activity and load happening (like a spacebattle), then more game servers can be spun up and connected to the Shard.","Likewise, in the case where a game server crashes, a new one can be spun up, load the entities again and continue the simulation again with only minor disruption to gameplay."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/0/3/1/5/3/60c58ab41a1a47873a51362afea1200.png"},{"uuid":"6616530bf7dc3398b490bbe5089e675d6df96e19","index":111,"imageURLs":["https://media.preziusercontent.com/media/2/2/2/5/9/9ccd3294ba1b4d07f8870db166a.png"],"pageIndicators":{"current":"7","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Free roaming of entities","texts":["As mentioned, the load will be continuously monitored to try to have a smooth player experience and an economically optimal amount of game server used. Entities of underutilised game servers might be moved to another game server and so that those game servers can be shutdown down. In our example, the green players/entities of server node 2 were moved to server node 3 (blue)."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/2/0/5/7/e/ab8cbc742868cf45db05664cd1e1200.png"},{"uuid":"e8007ffe90569d906728f65784367b8ed14a9137","index":112,"imageURLs":["https://media.preziusercontent.com/media/f/a/d/2/c/4e467574811afd71ed9d26380e1.png"],"pageIndicators":{"current":"8","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Horizontally Scalable Architecture","texts":["For Dynamic Server Meshing, the individual components of the Hybrid services will be split out into their own services. For example, the Replicant & Gateway were components of the Hybrid service, but are then individual service, of which there can be multiple running alongside each other to share the load across.","Player Clients and Game Servers wont connect to the Hybrid service anymore. Instead Server Nodes are connecting themselves to a Replicant service, while the Player clients connect themselves to a Gateway service (note: if connected to only one or multiple is not known yet).","Each Gateway service establishes connections to one or more Replicant services. All of these connections are mostly likely managed by another service (Atlas?), since service, game servers and connections have to be added and removed on-demand.","More types of services have been teased but not elaborated on yet.","The name \\"Replication\\" stems from data being copied/replicated. \\"Layer\\" suggests that the data is passed through a layer before reaching its actual destinations (clients, server nodes and/or the EntityGraph database). A data packet is received, replicated, then send out to multiple, different computers/consumers.","How many Gateways, Replicants and Server Nodes are required is not known yet. The image shown might not be accurate, it just tries to visualize the general idea."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/a/e/f/b/dfdf2724c43973972000ec45e1d1200.png"},{"uuid":"7ec5271f226e67abe3f2e84e01721e2be938d14d","index":113,"imageURLs":["https://media.preziusercontent.com/media/f/9/f/2/e/6e8ecb4479094cec4a5e77e216c.png","https://media.preziusercontent.com/media/f/a/d/2/c/4e467574811afd71ed9d26380e1.png"],"pageIndicators":{"current":"9","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Multiple Shards","texts":["Multiple Shards can independently exists at the same time alongside each other (the multiverse). Players can only play in one shard and thus can not see what happens in other shards. Certain data still has to be made available to all Shards tho. This data is stored in the Global Database that exists outside the Shard environments. It also make it possible to let players switch between shards.","So far, we have talked about how the Server Meshing functionality is built up and how the individual services, layers and the overall architecture emerge from it. It is important to note that each Shard consists of one such architecture. Each Shard will have its own Gateway, Replicant, Scribe and Atlas services, as well as its own server nodes, clients and Entity Graph database."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/f/f/f/d/1168e354d388f73ff37d814646c1200.png"},{"uuid":"5af8e64d6d4f44ea119c2474e003aacf051fb572","index":114,"pageIndicators":{"current":"10","total":"10"},"title":"Dynamic Server Meshing","subtitle":"Services and Databases","texts":["With this system we can dynamically scale the universe based on the current activities in the game world. Other services and databases like the \\"Quantum\\" Economy Simulation, Dynamic Mission System, Item Cache, Account Database, etc. will be accessible to all game servers.","Ideally, all of these services will be designed in a way that allows them to be horizontally scaled, meaning they can be copied and distributed onto more than one data center. Or they all receive their own cache layer. To achieve a good performance, databases have to be replicated onto multiple data centers across the globe for all game server to have quick access. This also enables redundancy, basically the data is present in multiple identical databases, which in case of a database crash, a new database can quickly be spun up in its place by replicating the data from one of the other, still running databases. This might allow for one single world-wide instance where all players from around the world are able to play together without major interruptions and lag since there will always be a database server near a game server.","Theoretically, with later versions of Dynamic Server Meshing, game servers and Replicant and Gateway services could be geographically re-positioned on-the-fly to another data center where the latency of the currently connected players is the most similar to create a fair playing field for all players by reducing the chance of issues like peekers advantage from occurring. In general, as long as latency is stable and there is not a lot of jitter, code systems like lag compensation can guarantee a smooth and fair player experience even with higher latency to servers."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/2/7/a/e/d/17ea5ad4eebac8564f4e548a0e51200.png"},{"uuid":"d07a35ac7365d7e69356c91dbd279f8d8b969281","index":115},{"uuid":"2e4b5d1e3024a0e83232d1b97f92603102a2f1cf","index":116,"pageIndicators":{"current":"1","total":"6"},"title":"Single Shard","subtitle":"Overview","texts":["Even if a first Dynamic Server Meshing has been released, there is still more work left to be done to have it scale up and make a single shard possible.","Challenges:","* the early versions of Server Meshing wont be powerful enough just yet to allow all players to play in the same game world; we will continue to play in a multiverse, albeit less and less over time as shards grow in terms of how many players can support","Solution: Single Shard","Goals:","* have all players of a region or worldwide play in the same game world","* gradually/iteratively improve and scale up Server Meshing until a single shard universe is possible","Approach:","* scale up the amount of servers per Shards high enough so that all players can fit into a single shard.","* The first milestone/goal is going to be one shard per region (all players from US play on their own single shard, all players from EU play on their own single shard, etc.)","* The final goal is offering a world-wide shard","* This will require further R&D on how to reduce the impact of high cross-region latency","* For scenarios where areas have extremely high population, a layering technique might be introduced that puts interacting players into their own layer.","* Speculated: There might be a time period where CIG will offer one shard per region as well as one world-wide shard. For the developers, this would provide a testbed for global shard tech, while offering the players a choice between an experimental experience in the global shard and a more stable one in the regional ones."],"sources":["tw1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/7/2/9/b/cbdc73a48a9863fec0b4f2299bf1200.png"},{"uuid":"33e58f1aca6cdc8d06305c8376eb86410618daa1","index":117,"imageURLs":["https://media.preziusercontent.com/media/5/d/e/3/5/c49be014c2d9fb3c52ea7712fcc.png"],"pageIndicators":{"current":"2","total":"6"},"title":"Single Shard","subtitle":"From Multiple Shards to Single Shard 1/4 - Static Server Meshing","texts":["Initially- under static server meshing - all shards will be statically meshed. That means multiple, small and equally sized shards. Each region will have its own shards. Even tho the individual shards are statically meshed, the number of shards can still change. For example, a new shard is spun up whenever more players login and want to play and all other shards are already full."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/8/7/3/f/0649be641f0ac9ec2f1b6b9c7e21200.png"},{"uuid":"57a18982ec9c0c76da51381b7848973c62e03d2b","index":118,"imageURLs":["https://media.preziusercontent.com/media/2/e/f/e/e/6237e514964b57029df8cdc405c.png"],"pageIndicators":{"current":"3","total":"6"},"title":"Single Shard","subtitle":"From Multiple Shards to Single Shard 2/4 - Dynamic Server Meshing","texts":["Once we have Dynamic Server Meshing online, shards start to be come larger and can end up being of different sizes, depending on the amount of players/entities and activity inside them. Each region will still have multiple shards."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/f/0/c/2/d9ff8f64af7ba06b6cfb44751ff1200.png"},{"uuid":"cd554b5e999bfd6d6e694222cfbe5d0dde91d731","index":119,"imageURLs":["https://media.preziusercontent.com/media/6/d/7/3/0/8bbc7834f469f55e6d241255b0c.png"],"pageIndicators":{"current":"4","total":"6"},"title":"Single Shard","subtitle":"From Multiple Shards to Single Shard 3/4- Regional Single Shards","texts":["Once Dynamic Server Meshing becomes powerful enough to support all players of a region, we will have Single Regional Shards. All players of a region will be playing in the same game world."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/7/7/8/d/2a74d904893a6ac4bcc6ba562d21200.png"},{"uuid":"35c5af7fd28c93a55c233f33db22679050330104","index":120,"imageURLs":["https://media.preziusercontent.com/media/8/5/a/6/9/0e287494b0aa5b968eb80f4e9e6.png"],"pageIndicators":{"current":"5","total":"6"},"title":"Single Shard","subtitle":"From Multiple Shards to Single Shard 4/4 - World Wide Shard","texts":["Once Single Regional Shards are possible, work can begin on improving the latency compensation techniques. Those reduce perceived effects of latency for the players when playing across regions where latencies of over 200ms are possible. Further R&D is required for this. If it is possible and enjoyable, then all players play in a Single Worldwide Shard.","Speculated: CIG might start offering an optional \'Worldwide Region\' that will run alongside the existing regions, so players can choose between the regional and the worldwide shard. And maybe some day, the tech becomes capable enough where only the world-wide shard remains and the regional ones are removed."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/9/d/3/5/aaa8f12484ab10bb0e86ac8d13e1200.png"},{"uuid":"5bfa74195a64b39d1eaf08bffb94b663f9f12fbf","index":121,"pageIndicators":{"current":"6","total":"6"},"title":"Single Shards","subtitle":"Remaining Technical Limitations: Player Client = The Final Frontier","texts":["One final technical hurdle, that might not be completely overcome without some additional tricks and workarounds in the end, will be the rare scenario where thousands of players/entities are very close to each other and thus directly visible to the player client (like on a large flat surface on a planet). Even tho the game servers might be fine, the CPU/GPU computation on the player client might exceed its limits, resulting in dropping performance.","One way to push performance on the client would be to skip network updates and simulation for further away objects to reduce the network bandwidth (Entity Component Update Scheduler can be improved to enable this). In terms of rendering, using the same, low level LOD asset for all far away player characters and vehicles would help with the rendering performance on the GPU (which may look worse but would still give the sense of a large, active crowd). But depending on the size of the crowd and the amount of objects, the experience might still not be great.","A drastic but simple workaround would be to limit the amount of objects to a small radius around the player (leading objects to pop-in and pop-out of existence in the distance), lookdown certain game areas via game mechanics (close jumppoints, NPC blockade, et.) or to create layers (parallel instances?) of the same area, taking into account friend and foe of players, but both of these solutions would have severe implications for gameplay that would need to be worked around.","Anyways, in case of such a rare edge case scenario, this quickly goes into the realm of major speculation with lots of possible solutions, so I guess we will leave it here and know more once that point is reached. For the overwhelming majority of situations in the game, the system of Dynamic Server Meshing is expected to perform very well, because other players and objects will be hidden inside buildings and ships and therefore can be hidden from the player client and reduce memory, CPU and GPU load to feasible levels without the need of workarounds."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/7/0/a/2/2/dbfd1df4fc2a852d4f4142da5f31200.png"},{"uuid":"f4c5a9cb3342f61a579551a2d91a97e27a80cd20","index":122,"pageIndicators":{"current":"1","total":"2"},"title":"Road to Dynamic Server Meshing","subtitle":"Conclusion","texts":["This concludes our journey to Dynamic Server Meshing. So what did we learn today?","Object Containers: Splits the entire level into individual, reusable level building blocks aka Object Containers.","Client OCS: Allows clients to only load and network the nearby level area by being provided a partial view into the server\'s level.","Server OCS: Allows the game server to only load level areas with players inside by being able to load and unload objects into a database. Essentially the game server has a partial view into the entire level which resides in the database.","Static Server Meshing: Splits the level into a fixed number of sections and computes each one on its own game server. Players are seamlessly transferred between servers when traveling between these sections. Players can look into multiple servers/sections at the same time.","Dynamic Server Meshing: The servers are not fixed to a specific sections of the game world anymore and instead are able to follow their players wherever they go. Game servers can be spun up and down whenever the load demands it.","If you made it this far, I hope that this presentation was able to provide a good overview and a new appreciation for these technologies. As we can see, a lot of work has already been completed and we are getting ever closer to Dynamic Server Meshing for Star Citizen being a reality. Even after the release of Dynamic Server Meshing, all these software systems we talked about will most likely be continuously maintained, iterated over and optimized over many years to keep improving on the player experience and allow for larger Shards.","While this is the end of the major tech explanations, there is still much more information about each of the minor and related technologies left to check out. Feel free to keep on reading! And let me know if you found this overview helpful :)","Also don\'t forget to check out the sources at the end of the presentation with all the information for yourself!","And a big thanks goes to the developers at CIG for working on these software systems to make Star Citizen a reality!"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/2/2/1/3/8/346b631480a9eafd67af783d1a81200.png"},{"uuid":"c88611ef170030cefdb7bb19b8bd6c098bea621e","index":123,"pageIndicators":{"current":"2","total":"2"},"title":"Road to Dynamic Server Meshing","subtitle":"Special Thanks goes to the following community members","texts":["Bambooza","LeakimX","StarA","Kenge84","Maarkreidi","FelixReynolds","ShinyHobo","Lannar","AngoGonTal","Nazeris","AstroSam","Star Citizen \u010cesko \u2013 Slovensko","Dani","Mitch van Hayden","Space Tomato","DG360","Sudo","Wurzel","Sawyer"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/1/9/8/b/6/ebe60514a3195ebcbf689bf6c241200.png"},{"uuid":"1e3920161abf3d9636dd29d796fa1bbf95281438","index":124},{"uuid":"acc6a4dd18ff6687061ee3919d9b36f9f7d718f6","index":125,"pageIndicators":{"current":"1","total":"1"},"title":"LUA Removal & C++ Entity Components","subtitle":"","texts":["In order for Object Containers to be implemented, there were a few things that needed to be done first.","Challenges:","* loading and initializing objects from drive into memory takes a long time (>200ms, multiple game ticks long)","* to prevent long wait times, freezes and stuttering in the game, the loading and initialization process had to be executed separately and in parallel to the main thread which runs the game loop and thus game logic","* a lot of the game logic was written in the script language LUA which made it impossible to run the game logic multi-thread safe but is a requirement to run parts of the game code in parallel on other CPU cores","* dynamic objects (or also known under the term \\"entities\\") and their game logic was written in large, monolithic code classes which makes it difficult to maintain, expand and multi-thread the code","Solution: Replace the old LUA game logic code with a new Entity Component architecture in C++ (speculated: not to be confused with an Entity Component System architecture) (may also be known as Item 2.0) (also not to be confused with ship components)","Requirement for: Object Containers","Goals:","* introduce a multi-threadable Entity Component architecture in C++","Approach:","* the monolithic LUA code was converted into a C++ Entity Component where individual behaviors in the game are put into each their own components which could then be easily attributed to any entity","* in October 2019 they had between 300 to 400 individual components implemented and available","* each entity is then composed out of multiple components","* this new game logic written in C++ allows for safe multi-threaded code execution (game simulation, more about this in the Multithreaded Loading & Execution topic)"],"sources":["jp1","atv6","atv7","rtv1","hh1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/1/c/5/5/fcdf79243cbad37605c25a1944f1200.png"},{"uuid":"6642659ecdc1ae7c598706b5bc68b1427a769481","index":126},{"uuid":"7203bc87c7fac607ea011c8c153d1a6f418b15e9","index":127,"pageIndicators":{"current":"1","total":"1"},"title":"Multi-Threaded Loading & Execution","subtitle":"Overview","texts":["In any game there are many Resources (e.g. textures, geometry meshes), which have to all be loaded into memory.","Challenges:","* loading large objects like spaceships into memory caused noticeable stuttering and freezes because the loading and following initialization process can take long amounts of time (>200ms) and this process being performed by the main thread on which the game simulation logic was being executed on, lead to those stutters and freezes.","* the game already loads Resources (like textures and geometry meshes into) the GPUs VRAM in a parallelized and organized way. However, with the introduction of Object Containers, there needed to be additional logic to ensure that Resources are loaded only once whenever they shared by multiple Object Containers and those Object Containers are loaded at the same time in parallel.","Solution: Multi-Threaded Game Simulation and Loading of Resources and Entity Components, an long-going project to move loading into background threads and optimize the logic for parallel loading (work was on-going well into the Alpha 3.x releases)","Requirement for: Object Containers, Object Container Streaming","Goals:","* load each Resource only once instead of multiple times to save memory while being able to load multiple Object Containers in parallel which may or may not share one or more Resources","* run the game simulation in multiple threads to allow for more entities to be computed in one game tick on the server and client","Approach:","* put the loading process of Object Containers, their Resources and Entity Component into a background thread","* use Fibers (similar to Coroutines) to have more control over the loading process of Object Containers","* keep track of the already loaded resources to reuse them for multiple object containers instead of loading them multiple times","* these changes were partially rolled out with Alpha 3.2, reducing stuttering and freezing noticeably","* with the introduction of Entity Components, the simulation logic was changed to have Component updates be executed in parallel. Therefore, the game simulation part of the game loop has been multithreaded as well.","* This is part of the Entity Component Update Scheduler. It also allows the simulation of individual components to be paused. This was based on distance to players, meaning that certain entities might have been loaded, but were not simulated until players were moving closer.","* furthermore, the loading process and the game simulation logic is not allowed to make changes to the same memory areas and therefore have to be managed to not interfere with each other. Otherwise, this may lead to unexpected behavior, like data corruption and game crashes. Therefore, the loading process has to wait until the game simulation of the current game tick has completed and only then add any loaded objects to the level. Likewise, the game simulation has to wait when the loading process is busy with adding objects."],"sources":["jp1","s112","rtv1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/2/0/d/f/c399e9c49178846a1f3ec0dc8a21200.png"},{"uuid":"4648e1e7906ca47eb4f6c6a4dbfa4e594b4bd339","index":128},{"uuid":"fae304d5b445a490e3c587165fc41cce7c7b085d","index":129,"pageIndicators":{"current":"1","total":"1"},"title":"MegaMap","subtitle":"Overview","texts":["Challenges:","* currently, when loading a level (like the PU, Arena Commander, Star Marine, even the main menu because that\'s a level too), first the old level has to be unloaded entirely to then to load the new level into memory. Also network connections to servers have to be disconnected and established again. This increases loading times significantly.","* this also leads to inefficient transition between different levels/scenes from a memory perspective. Some resources (like models and textures) that are used in both levels are first unloaded then directly loaded again unnecessarily and instead could have stuck around in memory to be reused.","Solution: MegaMap","Goals:","* be able to load and unload Object Containers and their Resources \\"globally\\" (rather than loaded as part of a specific level) to be able to reuse them across many levels.","* from a memory perspective, only one large \\"level\\" exists now, in which everything is loaded into, making switches between different levels, gamemodes and servers much more efficient and faster.","Approach:","* all content will be loaded into a \\"single level\\", the MegaMap, where object containers and object resources (like geometry, textures, sounds, etc.) can stay in memory, loaded and unloaded at any time, even being able to easily switch between different gamemodes (singleplayer and multiplayer levels) without having to unload everything first","* this feature will be used someday to seamlessly access Arena Commander, Star Marine and Theatres of War and other gamemodes from inside the Persistent Universe as in-game, in-lore video games","* speculated: the name \\"MegaMap\\" likely refers to the Map data structure. Essentially a lookup table in which all Resources are loaded into and accessed via a key/name. With all resources stored in this Map, it would be a \\"Mega Map\\". Therefore, this would have nothing to do with the 64bit floating point coordinates for large levels (next topic)."],"sources":["atv3"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/0/1/9/4/3/f0e4a7f472791134f9f52e250c21200.png"},{"uuid":"6c1f1257e52132cebe1caccf8cb0f1c6b4e59f2a","index":130},{"uuid":"e12af6d84f58b813042973263a1f2d0e9317a94a","index":131,"pageIndicators":{"current":"1","total":"1"},"title":"64bit floating point coordinates & 64bit integer entity id conversion","subtitle":"","texts":["As explained at the Introduction section of the presentation already, a 3D level has three dimensions: x, y and z. Therefore, each object in the game has three floating point values representing the coordinates in space. The position of an object in the level might be (x=5.12 | y=204.7 | z=-167.826). These numbers arent \\"tracking\\" the objects position, but are actually determining it.","Challenges:","* like most game engines the engine currently uses a floating point type with 32bits for these three coordinate values","* compared to \'integer\' numbers, \'floating point\' numbers can represent very large numbers by using 8bits as exponent and 24bits for the significand/fraction. With this math, the decimal point can be moved around, hence the name \\"floating point\\".","* however the downside is that large numbers lose precision therefore making it only useful for small game levels (~8km max) with sizes of a few kilometers because anything larger would result in more and more precision inaccuracies leading to movement being imprecise and stuttering more and more the further away an object is from the center of the level (x=0, y=0, z=0)","* additionally, with eventually thousands of players and probably billions of unique entities in the game over the course of the games lifetime, each entity in the game requires its own unique id; currently the 32bit value allows for 4,294,967,295 unique entities","Solution: 64bit floating point coordinates (also referred to as Large Worlds) and 64bit integer entity identifierse","Requirement for: Object Containers, zones, 64bit to 32bit converter","Goals:","* larger levels which can contain an entire solar system with its planets and locations","Approach:","* convert all coordinate values from 32bit to 64bit type (double-precision floating-point format) (Large Worlds)","* most of the game logic/code of objects/entities/components has to be changed for this conversion","* with this change, level size doesnt just double, it actually allows for MUCH larger levels (almost 9 billion of kilometers in size)","* for the entity ids, using an unsigned 64bit integer would allow for 18,446,744,073,709,551,615 unique entities which would definitely be plenty for many decades to come; having a global id for each entity in the game will make logic for server meshing much easier when entities are uniquely identified by all game servers"],"sources":["gc1","s114","df1","df2","w7-9"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/c/5/b/1/56df26542e795a307e39a168e4d1200.png"},{"uuid":"4164f09306e666c031186110aaa9115043c13e6e","index":132},{"uuid":"e96a563aeeb9f7c77c280bb3915e87488c322fc8","index":133,"pageIndicators":{"current":"1","total":"1"},"title":"ZoneSystem","subtitle":"Challenges:","texts":["* since the game is going to feature a lot of moving and rotating entities (e.g. planets, spacestations, ships, public transport, other vehicles) a lot of objects inside all of those entities would have to update their position in the level as well","* objects can be inside of other objects thus objects would have to be moved multiple levels deep","* this would lead to a lot of computational load and has a high chance of leading to issues like movement and hitbox jankiness","* currently each code system (rendering, network updates, physics) has its own custom partitioning system some of which dont work well in these new large 64bit coordinate systems","Solution: ZoneSystem and its Zones, a unified, custom spatial partitioning system (despite its name, it has nothing to do with zoning/instacing of game areas like many MMOs do)","Requirement for: Object Containers, 64bit to 32bit converter, OCS, Server Meshing","Goals:","* allow for large groups of objects to move and rotate with little CPU computation required by introducing zones","* have these zones be a unified system for rendering, visibility occlusion, network optimizations, physics, level streaming, AI, etc.","Approach:","* this replaces the Octree datastructure previously used to partition the game level into cubic, immovable chunks","* the new zones can be of different sizes","* each planet, station, ship, room etc. receives its own zone and each zone has its own 64bit floating point coordinate system","* objects which are inside a zone are positioned relative to that zone, not to the level world coordinates","* if a zone moves, its coordinate system moves with it and that in turn moves all objects inside","* therefore, to move all objects inside of a ship/planet/etc., only the position of the ship (\\"zone host\\") has to be updated","* this makes large ships essentially its own moving level inside another even larger level","* zones can be nested, thus smaller zones can be in other zones and move with the parent zone like all the other objects, for example solar system->planet->landing zone->room->ship->vehicle","* those smaller zones can enter and leave larger zones (like the zone of a vehicle parked inside the zone of a ship)","* when objects move from one zone into another the object coordinates have to be correctly calculated to ensure a smooth transition from one coordinate system to the other","* initial work was done/completed in August 2014","* was changed to an AABB tree data strucuture in June 2016","* (speculated: it is highly likely that zones are going to be used for OCS and Server Meshing for networking, streaming and to partition the game world into sections to be run on separate game servers)"],"sources":["z1","z2","z3","gc1","mr1","mr2","w6"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/9/6/c/d/064968f41178c355b6ece39d2101200.png"},{"uuid":"ed0d76e1d3335a85e9362e482d77beb9e345101a","index":134},{"uuid":"93463bf9f514d06397f8f0cba78f846a73566c88","index":135,"imageURLs":["https://media.preziusercontent.com/media/4/4/c/8/2/853c92940ed8b7a1ce68051ed41.png"],"pageIndicators":{"current":"1","total":"1"},"title":"64bit to 32bit converter","subtitle":"Overview","texts":["We now use 64bit floating point value coordinates","to allow for large level sizes.","Challenges:","* however, GPUs are much more efficient when","being able to use 32bit floating point values","for their calculations when rendering images","Solution: 64bit to 32bit converter","Requirement for: Object Containers","Goals:","* have a 64bit world size to simulate the objects within and at the same time allow the GPU to use 32bit coordinates to render the game","Approach:","* therefore, a 64bit to 32bit floating point zone-to-world converter and a world-to-camera relative space converter were implemented that turns those 64bit world coordinates into 32bit coordinates for the renderer where the player camera is being placed at (0,0,0)","* other objects are then positioned relative to the player camera","* this assures that the precision directly around the player is very high; objects further away (like planets or moons) might be slightly mispositioned but that is barely noticeable at such distances"],"sources":["atv4","s114"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/8/3/8/d/a/c16318f4930aa700b413ad883de1200.png"},{"uuid":"349684c4e648d7b4cb05fb454e00242c545cf8f2","index":136},{"uuid":"e2522b387cd2085b39ee66f80301447212d597b3","index":137,"pageIndicators":{"current":"1","total":"1"},"title":"Serialized Variables","subtitle":"Overview","texts":["Since Star Citizen is an online game it has to communicate the state of entities between the server and the clients to have the game world stay synchronized between multiple players.","Challenges:","* entities in games have values attributed to them (essentially their data) which can change on each game tick","* these values (also called variables) are in memory but they also have to be communicated over the network or persisted (e.g. saved on the drive as a save file or into a database)","* sending all values of all entities on every game tick (30 times a second) over the network would be a very high amount of data and would put a lot of load onto the bandwidth, servers and clients","* trying to setup networking on each value manually in the code as a developer can be error prone which results in desyncs and crashes","* the new Entity Component System makes this near impossible because an entity can have any number of components and thus each entity would be unique and had to be manually set up for networking (which kind of defeats the purpose of using components in the first place because they are supposed to be easily reusable with not much additional work)","Solution: Serialized Variables or Serialized Variables API","Requirement for: Object Containers, Save Files, Networking, Persistence, Persistent Entity Streaming, Serialized Variable Culling, EntityGraph/Item Cache","Goals:","* create an unified mechanism, an Application Programming Interface (API), which lets developers easily network variables and persist data","Approach:","* the API lets developers mark variables of entities as serializable/\\"networkable\\"","* not only can they set if a variable is serializable, but also if it needs to be newtorked on every game tick or only when the value changed","* this gives developers greater control of how a variable is supposed to be networked while also making it way less error prone to code","* let developers group variables to have them always be networked together (for performance reasons in case a specific group of variables always or very likely are changing together. If one variable in a group changed, then the check for the other variables in the group can be skipped)","* while the game is running, detect when a variable changed its state","* instead of sending all variables of all entities on each game tick, only send the variables that changed, therefore reducing send data and bandwidth","* bundle/wrap changed variables together and serialize them (basically turning them into a networking friendly format which can then be unserialized again on the receiving end). the same can be used to save/persist the entity data into a file or database","* used by Persistent Entity Streaming in Alpha 3.18 for persisting all serialized variables of all entities. Prior, only some of the serialized variables of some of the entities were persisted."],"sources":["atv1","jp1","scl2","s117"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/9/1/2/a/8/182fa0744aea1234f9fa02b98c71200.png"},{"uuid":"a77c9c6062fdb03ee389e6d72bcb524e6adbde79","index":138},{"uuid":"ca8a053070587df55e7ce0388ac111a4cb9e9cfc","index":139,"pageIndicators":{"current":"1","total":"1"},"title":"Entity Component Update Scheduler","subtitle":"Challenges:","texts":["* for Client Object Container Streaming it will be necessary to load and unload entities to and start and stop sending state updates to the client to reduce RAM and CPU usage so we require information on when we can do that","Solution: Entity Component Update Scheduler (released in 3.0, most likely a result of the Simulation Multithreading initiative)","Requirement for: Serialized Variable Culling, Client Object Container Streaming","Goals:","* update all entity components on each game tick in the game loop on the server","* provide information of the distance and visibility of each entity in regards to each player","* limit network updates to the clients based on those distance and visibility information","Approach:","* the Entity Component Update Scheduler already provides the required information about distance, size and visibility of entities in relation to the players","* since 3.0, the server already used that info to be able to start and stop simulating individual components as well as start and stop sending network updates to client of entities that are too far away from all (!) the players in the level.","* each Component type can be given a different update policy for more fine control when they should be simulated/networked","* This already saves performance as not all entities are simulated and send network updates to the clients.","* However, this still sends entity updates to ALL clients if only a single player is near an entity, even tho other players might be far away from that entity (this was later changed with the Serialized Variable Culling feature)","* these network policies will play a vital role in server meshing to ensure player clients perform well when hundreds of entities are around a player by skipping network updates for far away entities (where such skips are noticed less) thus reducing load on the client CPU","* speculated: interpolation techniques might allow far away entities to still have smooth motion, even though their state might not be 100% accurate all the time","* for OCS, the Entity Component Update Scheduler will be used for the loading and unloading of entities because it already provides the required information about the distance, size and visibility of entities to the players","* The ECUS was updated in Alpha 3.17 improving the simulation performance greatly (made it entity-centric, use Zone Host Updates and more)."],"sources":["jp1","s104","s112","s113","mr3","pn317","s303"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/2/e/c/8/2ba5c45483b9fe74d5d3c2a52181200.png"},{"uuid":"46126a413f96bbc102fba317b7bd9e7db34449d8","index":140},{"uuid":"59cdf9cd07fa3fc9f5039241358506c33a31fe8e","index":141,"pageIndicators":{"current":"1","total":"1"},"title":"Entity Ownership Hierarchy / Entity Aggregates","subtitle":"Overview","texts":["At level design time, Object Containers can be nested to create larger game areas out of smaller objects. However, there needs to be additional logic at runtime. Some entities are made up of smaller entities. And how these are made up can change while playing.","Challenges:","* These entity groups need to be represented in memory.","* These groups and hierarchies can cause issue when these objects are not loaded/unloaded in the correct order.","Solution: Entity Ownership Hierarchy / Entity Aggregates (released in Alpha 3.0) (speculated: scene graph)","Requirement for: Entity Spawn Batches & Entity Snapshots, Client Object Container Streaming","Goals:","* It is required to keep track when those dynamic groups are formed or disbanded.","* Load and unload groups of entities in the correct order (e.g. the ship exterior needs to be loaded before the ship interior, as the inner ship\'s state partially defined by the outer ship)","Approach:","* A group of entities - which are related to each other and form a larger entity - are called an Entity Aggregate (or Entity Root or Logical Entity). Examples:","* A weapon is the entity root and its attachments are entities attached to the weapon.","* A player character (entity root) picks up an item and holds it in its hand and moves around with the player.","* Entities can move in and out of each other, like ships and vehicles moving into other ships (speculated: therefore, this might be related to the zone system)","* How entities are related to each other is kept track in an Entity Ownership Hierarchy.","* Together with the Entity Component Update Scheduler, the server decides which Entity Aggregate(s) to load and unload on each client (by sending the equivalent Object Containers and Entity Snapshot updates).","* In the EntityGraph database, entities that are Entity Roots are labeled as such on the node (for queries)."],"sources":["jp1","c2"],"originalSlideImageURL":""},{"uuid":"09a2ea34847311e2ba355b437a48f6326d2742fc","index":142},{"uuid":"1db3224354fa34dee05460851ef31bacd5e8595d","index":143,"pageIndicators":{"current":"1","total":"1"},"title":"Entity Spawn Batches & Entity Snapshots","subtitle":"Overview","texts":["With the server now being able to notify the client to load entities into memory it was time to handle the loading part on the client.","Challenges:","* entities need to spawn in a consistent way on the client so that client and server end up with the same Entity Aggregates and Entity Hierarchy in memory","Solution: Entity Spawn Batches & Entity Snapshots (released in Alpha 3.0)","Requirement for: Client Object Container Streaming","Goals:","* handle the data send by the server on the client to load objects in the correct order into memory","Approach:","* the server groups entities which should spawn together into an Entity Spawn Batch","* the entities only become active (being computed in the game loop) once all entities in the batch are loaded","* for each entity, the server creates an Entity Snapshot (with the help of Serialized Variables) containing the entire state (all variables and their values) of the entity and sends it to the client (speculated: maybe just those that are non-default values)","* while the entities are being loaded they are not being networked yet to stay synchronized. The process of loading objects in the background takes time which can lead to the object state being different on the server and client. This is solved by the server sending a second Entity Snapshot once all entities are loaded. The client updates the state to be in line with the server and then the entities can become active and networked to stay in sync with continuous updates from the server","* Since networking can be started and stopped (thus network updates skipped) for individual entities any time, entities are not necessarily unloaded directly when they dont receive updates anymore. They might stick around in memory for a while and continue receiving updates again later. Then a Entity Snapshot is send again to ensure the entity has the right state."],"sources":["jp1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/3/e/5/9/d84c99f476694ffda2406a23fae1200.png"},{"uuid":"cd1f88551d6dd4150ad73e6767b4728c8a314cf7","index":144},{"uuid":"f25f91dbc432178cb282860184c08d1ff1c0bfd6","index":145,"pageIndicators":{"current":"1","total":"1"},"title":"Serialized Variable Culling","subtitle":"Overview","texts":["Thanks to the Entity Component Update Scheduler, the server was already able to skip updates of certain entities when they are far away from the players.","Challenges:","* however each client was still send all updates of all entitiy around ALL players and thus had to update their components when new network information was received from the game server","* this put unnecessary load on the client CPU by having it compute objects in far away places (at the time the in-development Persistent Universe consisted of Port Olisar, Levski and GrimHEX and players could already be far apart)","Solution: Serialized Variable Culling (released in Alpha 3.1)","Requirement for: Client Object Container Streaming","Goals:","* only send updates of the entities which are in near proximity of the player to that specific client","* for the first time, it allowed CIG to run the client on partial information about the game world running on the game server","Approach:","* utilize the already created software systems (mainly the Entity-Component-Update-Scheduler and likely its networking policies) to determine which client requires which object data","* put a system in place that will only send network updates to the client that is in the near proximity of the updated entity","* now each client only receives the information that that specific client requires, reducing the load on the client CPU"],"sources":["jp1","rtv1","s113"],"originalSlideImageURL":""},{"uuid":"bd66bf9c68d763728a0de648f37569f9d8788080","index":146},{"uuid":"7f2221509b1ac628176f9286842637df7a275ef3","index":147,"pageIndicators":{"current":"1","total":"1"},"title":"Network Bind Culling / Entity Bind Culling","subtitle":"Overview","texts":["With Serialized Variable Culling each client only received network updates of entities which are near that player.","Challenges:","* however, the player still had to load all entities on level start and keep them loaded in memory even if they were far away and not being networked","Solution: Network Bind Culling (released in Alpha 3.3, also referred to as Entity Bind Culling later on)","Requirement for: Client Object Container Streaming","Goals:","* load and unload entities to/from memory on the client based on the position position in the level","Approach:","* the server tells the client when to load which entities into memory (by using the Object Containers and their identifiers)","* entities are loaded based on the information provided in the Entity Component Update Scheduler","* we are finally at a position where the client has a truly partial view into the game world on the server, completing the functionality of Client OCS","* the game world on the server could now be increased, adding more locations, without requiring clients to load them into memory as well"],"sources":["jp1","rtv1","cc2"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/0/6/0/4/5/9b8fa4d4a96bf755b76d052a11c1200.png"},{"uuid":"4f862faf5803098138e0c4964563ad268aefbe62","index":148},{"uuid":"608b7eb6cfc0853afef5b69a06de6a5b13bb1fdb","index":149,"pageIndicators":{"current":"1","total":"1"},"title":"Entity Streaming Manager & StarHash","subtitle":"Overview","texts":["Without Server OCS, the entire game world was always loaded in memory on the server in the in-process database.","Challenges:","* there needs to be a fast way to query the database for objects in a certain area in the game world so that objects can be loaded around a player who is moving through it","Solution: Entity Streaming Manager with on-drive database, StarHash and StarHash-RadixTree","Requirement for: Server Object Container Streaming, iCache, Global Persistence, Static Server Meshing","Goals:","* make changes to the current in-memory database on the server to have it more in line with the requirements of persisting items in the game world","Approach:","* use a modified version of a Geohash algorithm usually used for map application to find points of interests around the users and call it StarHash","* make the Geohash 3D (xyz axis) instead of 2D (longitude & latitude) and use 64bit floating points for the coordinates","* when saving an object, generate a unique hash code based on the xyz positions of an object in the level","* to perform quick look-ups, the objects are indexed via a Radix Tree data structure (usually has a O(k) worst case look-up performance with k being the length of the hash code)","* when players move around in the level, the Entity Streaming Manager can now look up the database for all objects that exist around the players. Those objects are then loaded into memory, initialized and processed in the game loop","* this database system will most likely be used and expanded upon for the Item Cache databases and Server Meshing"],"sources":["jp1","w4","w5"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/e/e/1/5/54feac947da9fd9414cb31db4bf1200.png"},{"uuid":"a0e9b441499397ddcf2aa07ad8e71a8ef9e9d3f3","index":150},{"uuid":"e511ff2aae6b33cc4e2f853e9193fc91971ab64b","index":151,"pageIndicators":{"current":"1","total":"1"},"title":"Definitive State & Location IDs","subtitle":"Overview","texts":["With the entities not being loaded and accessible in server memory anymore, some issues arose because of it that needed to be deal with before Server Object Container Streaming was able to come online.","Challenges:","* in some situations, especially when players are teleported into an unloaded area (e.g. when (re)spawning), where everything has to be loaded, certain entities have to be loaded before others, like the floor before spawning NPCs, otherwise NPCs fall and are never seen again (this was not an issue for Client OCS because there the second Entity Snapshots from the server was able to adjusted the position of NPCs again and move it on top of the floor)","* some components that are only executed on the server were not yet unloaded to the database (because they previously did not need to since they always stayed in memory)","* when a player connects, its player entity is always spawned at a SpawnLocation which in itself is an entity but that leads to an issue because the system only loads all entities including the SpawnLocation entity when players are nearby (how the system is setup, SpawnLocations cant be an exception and excluded from the streaming process)","Solution: lots of bug fixing and the introduction of Location IDs","Requirement for: Server Object Container Streaming","Goals:","* fix the remaining issues caused by not having all objects loaded in memory at all times anymore","Approach:","* load world geometry and other objects in the correct order to have them loaded just like they were persisted","* finish work to be able to persist all components in the game","* to fix the SpawnLocation issue, a two phase spawning process was introduced: When a player connects it loads the players LocationID which essentially is just a point in space. It is used to spawn in objects at that point which includes the SpawnLocation. Once that is loaded, the player is spawned and the world loads around the player"],"sources":["jp1"],"originalSlideImageURL":""},{"uuid":"468495f2c7daa0f97cc3fc3601b1d095984152e2","index":152},{"uuid":"6164257a1902973d32247775e3a2d828a8d100a7","index":153,"pageIndicators":{"current":"1","total":"1"},"title":"Persistent Item DB & pCache (persistenceCache)","subtitle":"Overview","texts":["Challenges:","* Before Server OCS, all entities are stored in the game engine memory. However, for persistence to come online, if the game server goes down, then all data in memory will be lost. Not ideal, for a game that aims to have a persistent game world where everything has to keep existing, even between game server reboots.","* Looking at the requirements under Server Meshing, multiple game servers will need to access the same game world data, and therefore this data needs to be made accessible to all game servers in a centralized place","* However, for now there only needs to be a prototype database backend put in place to bring the first version of Server OCS online and to figure out which requirements Full Persistence has.","Solution: Persistent Item DB & pCache,","Requirement for: Server OCS","Goals:","* Bring the first version of Server OCS online by creating a prototype a first prototype backend for persistence","Approach:","* Create the prototype persistence backend for Server OCS, using an in-memory database cache called pCache, which (speculated) connects the data to an on-drive database called Persistent Item DB.","* While running, the game server can now offload entities into the cache and database and load it again depending on where players are in the game world. This uses the SOCS functionality.","* This prototype solution used a relational database.","* This prototype was planned to be replaced by a proper and scalable database that would sit outside the game server. This was initially supposed to be iCache. However, the initial R&D continued working out a scalable solution using a relational database, but at the end of 2020 this turned out that it didnt provide the low latency and performance CIG were looking for. Starting 2021, they switched to a graph database instead, which showed results internally for the first time in Mai 2022, expected to come online with PES in the Alpha 3.18 patch."],"sources":["s101","s102","lc1"],"originalSlideImageURL":""},{"uuid":"f83f28146ee47bf4eab5982d848f7505c45e498d","index":154},{"uuid":"6108ac782a0e6d80b597a7697c239002aa05f4b4","index":155,"pageIndicators":{"current":"1","total":"1"},"title":"Global Database / Long Term Persistence (LTP)","subtitle":"Overview","texts":["So far, every three months on each major patch the player progress is wiped because the database was reset.","Challenges:","* players dont have a lot of incentive to work toward ships and other items (especially ever since in-game ship purchases and rentals came available) because they will be removed again every three months","Solution: Long Term Persistence (LTP, Platform Persistence, \\"Baby Persistence\\"), later reworked and renamed to \'Global Database\'","Goals:","* implement a first version of persistence for player account data","* (note: this feature is not Full Persistence because Full persistence is about saving data of the game world which is what the iCache/EntityGraph database is going to do)","Approach:","* the first version released in Alpha 3.8.2 with","* UEC balance","* Ship purchases and rents","* Ship component purchases","* FPS item purchases","* this allowed the introduction of the currency trading app (mo.TRADER) in Alpha 3.10.0 by utilizing the database that stores the information about the players UEC balance","* this database now saves in-game purchases of ships to allow players to work toward and keep their ships across multiple patches","* \\"As of [Alpha] 3.15, Long Term Persistence is broken up into three distinct parts: Items, Wallet (aUEC), and Reputation. Going forward, we will be able to wipe specific parts of LTP individually as needed (for example, wiping Reputation while leaving Wallet and Items intact). This level of flexibility will allow us to do necessary wipes while minimizing the impact on the community.\\"","* The Item part of the database is most likely the Global Database holding inventory items of a player across shards.","* Alpha 3.15 also came with an interim implementation for Server Crash Recovery specifically for ships. This was done by checking the Replication Layer cache (containing a snapshot of the physicalized ship entity of the crashed server) for all player ships. Those ships are then stowed into the Global Database (LTP). From there, it then can be spawned again on any server at a ship terminal. The interior (including cargo) is spawned and available as well. This was a first workaround before the actual server crash recovery that will allow us to keep playing exactly where the game left us of (e.g. inside our ship while in Quantum Travelling)."],"sources":["s108","s115","s116","cad1"],"originalSlideImageURL":""},{"uuid":"78de0a20d2dbf4c7387a6ed4660460eced6307e5","index":156},{"uuid":"ea549542d5a9dd2b85acf1d52381facd130d15cd","index":157,"pageIndicators":{"current":"1","total":"1"},"title":"EntityGraph / iCache (Item Cache)","subtitle":"[cc2,scl2,cad1,s102,s103,s107,s109m,s110,","texts":["s201,sc1,mdb1,mdb2,pn315,lc1]","For the state of the game world universe to be persisted within a meshed server environment, all entity data needs to be stored in such away that they become accessible to all game servers in a responsive, low-latency manner.","Challenges:","* with each game server accessing its own in-memory pCache database, actual persistence of items ingame is barely existent","* the current pCache database does not support the functionality for full persistence yet, e.g. items which are just laying around on the ground","Solution: EntityGraph (initially known as iCache or Item Cache, or Super pCache)","Requirement for: Full Persistence, Physicalized Items and Inventory, Server Meshing","Goals: build a new, horizontally scalable, shardable database that can persists all entities in the game world and serve all game servers in a performant and thus responsive way (and allow for crash recovery down the line)","Approach:","* create a horizontally scalable database called EntityGraph which persist entity data, and a scalable cache (for within the Replication Layer, sometimes referred to be iCache)","* improves the response times for backend database requests","* uses best practices for fault tolerance and recovery via data replication and automatic regeneration in case a database instance crashes","* this should also help reduce the load on each individual database instance, as data can be replicated/sharded onto separate instances","* these services can be scaled freely independent of game servers and shards","* EntityGraph is a graph database: all entities in a level form a large hierarchy which can be represented as a graph data structure","* each entity in the game world is represented as nodes in the database, while relationships between entities are edges","* changing state of individual entities as well as changing relationships by adding or deleting edges are both cheap/fast operations in a graph database","* allows entities to be queried based on shard, star system, xyz position, object size and distance to players, entity type and custom labels","* entities and sub-trees can form entity aggregates which are streamed in together. They can also be given a label which allows for queries that requests specific types of entities to be returned","* with full persistence every entity anywhere in the level can be persisted, not just in pre-determined places such as weapon racks","* speculated: EntityGraph uses ArangoDB.","* Introduces Characters Repairs (instead of Character Resets) as well as Entity Lifetime for Item Cleanup logic."],"originalSlideImageURL":""},{"uuid":"5c5a2bdb76618e16b1b3c344441f9ffffca54303","index":158},{"uuid":"aebab2d1de6a383b94629849d63ebf6018bd2c85","index":159,"pageIndicators":{"current":"1","total":"1"},"title":"Global Persistence","subtitle":"Overview","texts":["With the cache/EntityGraph database we now provide a centralized place for all game servers to access entity data.","Challenges:","* the game servers still access the data in the old pCache database, not the new EntityGraph one","Solution: Global Persistence, which makes Server OCS utilize the new cache/EntityGraph and Global Database, of which a first version came online with Alpha 3.15 (speculated: utilizing the cache in the Replication Layer)","Requirement for: Physicalized and Persisted Items and Inventory, Replication Layer, Static Server Meshing, Squadron 42","Goals:","* let the game servers utilize the entity and inventory data stored in the EntityGraph and Global Database (LTP)","* with state of entities being persisted long-term, more gameplay that utilizes the functionality of items existing in the game world long-term in the game world will be implemented and introduced into the game","Approach (speculated):","* change/extend Server OCS with this new functionality","* this is the interface between the game server and the database(s)","* while players move through the game world, the Replication Layer asks an EntityGraph database if there are any entities in the area that a player is about to move into; or entities moving into the area of a player","* let the game server load those entities into memory via Server OCS and start computing them in the game loop by the CPU","* when players leave an area behind them, serialize and send the entity state to the EntityGraph database (or Global Database in terms of Inventories and ships) to have it be saved and persisted","* unload the entity from memory to make room for new ones which is already part of Server OCS capabilities","* the Replication layer might periodically persist the state of entities to prevent data loss on a server crash","* this functionality will also be used by the singleplayer game Squadron 42 to access the local database (offline)"],"sources":["s101","s102","cad1","jp1"],"originalSlideImageURL":""},{"uuid":"81be80d0ea3d0aa5e0d9085633780e930f48b748","index":160},{"uuid":"fb76f78db316308af31e3cb638f7f2d7f00680fa","index":161,"pageIndicators":{"current":"1","total":"1"},"title":"Local, External and Personal Inventory","subtitle":"Overview","texts":["The first versions of inventory and item management will consist of a personal inventory (what the players can carry directly on them), external inventory (e.g. a cargo box or backpack) and local inventory (ships and landing zones). The local inventory is going to be an intermediate version toward fully Physicalized Items and Inventories. Items will initally be stored on ships in these local inventories and accessible via UI. Through iteration, more and more items will be physicalized as \\"real\\" objects which take up space in the game world and the local inventories will be phased out. At the same time more physicalized inventories will be introduced that will allow players and NPCs to store these physicalized items directly inside physical inventories.","First version came online","in Alpha 3.15."],"sources":["cad2"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/a/b/f/0/6df618a4e0b882401b397cd98cb1200.png"},{"uuid":"748b0a56f1d9957e13e0bdeb19262a9d8244ad41","index":162},{"uuid":"b501435751dbae2d7f7603154ad94b854d3085a0","index":163,"pageIndicators":{"current":"1","total":"1"},"title":"Physicalized Items and Inventory","subtitle":"Overview","texts":["With the cache in the Replication Layer we have a centralized place to store all entity data and with Global Persistence the game servers are able to utilize that data.","Challenges:","* items are still very simple in their design and how the player can interact with them","* character inventories are still very simple in their design because they are merely global account inventories","Solution: Physicalized Items and Inventory, first version came online with Alpha 3.15","Requirement for: Persistent Streaming, Static Server Meshing","Goals:","* have items and inventories be physical objects in the game which take up space","* have items physically present in inventories when you open them (e.g. cargo boxes)","Approach:","* items will be a physical, interactive object in the game","* that even includes stuff like character clothes (with the Cloth Simulation implementation)","* even inventories are going to be physical items in the world, e.g. backpacks and cargo containers which can be put on the ground, moved around and picked up again (utilizing the Grabby Hands implementation)","* allow items to have child items","* allows the player to put items into other items, e.g. a battery into an electronic device (with Item Ports)","* allows hierarchies of nested items (bullets -> magazine -> gun -> backpack -> player)"],"sources":["cad2"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/2/d/a/3/b/6410d3c42d9b51ca35c540c18c01200.png"},{"uuid":"f382eee81e0ddc3b06fcb25534bcb8e06ad0930c","index":164},{"uuid":"9741d483571cad1f19b5575e32044b3377c6cb62","index":165,"pageIndicators":{"current":"1","total":"1"},"title":"Stow & Unstow","subtitle":"Overview","texts":["With physicalized items and inventories making its way into the game there needs to be a way to reliably persist and access such information, even if players switch between game instances/shards.","Challenges:","* Entities that physically exist in the game world (items) have to be be put into inventories (stowed) and later taken out again (unstowed)","* Both items and inventories need to be persisted. The physicalized items and physicalized inventories in the game world are now being persisted in the EntityGraph database. However, the non-physicalized items inside of inventories are not.","* Items and Inventories need to be accessible across Shards in Server Meshing, but EntityGraph groups data per-Shard.","Solution: communication between the EntityGraph and Global Database, aka Stow & Unstow","Requirement for: Persistent Streaming, Static Server Meshing","Approach:","* When items are stowed into inventories, they stop existing as physicalized items in the game world and instead as an entry inside the inventory. The contents of inventories are persisted in the Global Database (LTP), instead of the EntityGraph database.","* This allows players to access inventories content (like local and personal inventories), even if they switch to another game instance (or another shard under Server Meshing), since the Global Database stores Shard-independent data.","* Items can be easily moved between inventories. In the database this would be unstowed from the first inventory and directly stowed into the second inventory (most likely a single database transaction).","* Ships - and all items inside - can also be stowed into the Global Database when the ship is stored (e.g. by the player via a terminal) and later spawned/unstowed again","* this allowed for the first introduction of a rudimentary Ship Recovery in the case of a Server Crash (see Global Persistence/LTP for more info)."],"sources":["cc2","scl2"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/8/2/a/f/a7a75d14f1dbf305343a54374891200.png"},{"uuid":"b752a4e3fcb58e5eaf04124b5520c09308a5f575","index":166},{"uuid":"3ff7f382cb4b905d5cb1f781e73b6c6a4271e0dd","index":167,"pageIndicators":{"current":"1","total":"1"},"title":"Shards","subtitle":"Challenges:","texts":["* Because the backend architecture is getting more complex once moving toward Server Meshing, there needs to be new terminology.","* So far, an entire game world has been simulated by just a single game server.","* Under PES and Server Meshing, players won\'t play on and send/receive data directly from a single game server anymore, a game world is not referred to as a \'game server\' anymore.","Solution: Shards","Requirement for: PES, Server Meshing","Goals:","* use the term Shard to refer to a (meshed) \\"game world\\" (one copy of the Star Citizen universe)","* sometimes the backend servers and services running one such game world is also referred to as the \\"Shard\\"","Approach:","* Idealy, everyone plays in the same game world, a single world-wide Shard.","* However, until Server Meshing is capable of doing that, there will still be multiple, independent shards running alongside each other, each with their own game world and state. Therefore, initially there will be a multiverse of SC universes, but economy is shared (via the Quantum Economy Simulator).","* The initial milestone/goal is to scale up Server Meshing far enough to support one Single Sshard per region.","* While playing, players and entities can only ever be transferred between game servers of the same Shard, never to server nodes of a different shard.","* Players can still join/switch to another Shards, but this can only happen from the main menu before they start playing, determined by matchmaking/login-flow"],"sources":["cc2","qa1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/c/f/b/2/aab707441c9ba5f2c8629f0fad01200.png"},{"uuid":"27b902378c1a0e7e6000a4ca954955ca77a86eaf","index":168},{"uuid":"d0dde8ba15637f34372955b91eede68d1954e08a","index":169,"pageIndicators":{"current":"1","total":"1"},"title":"Server Nodes","subtitle":"Challenges:","texts":["* Because the backend architecture is getting more complex once moving toward Server Meshing, there needs to be new terminology.","* A single Game Server won\'t simulate the entire game world once Server Meshing comes online.","Solution: Server Nodes (sometimes still DGS, Dedicated Game Server, or simply still game server)","Requirement for: Server Meshing","Goals:","* Game Servers become a horizontally scalable service, meaning multiple game servers can run alongside each other, simulating the same game world (Shard)","* Server Nodes do not perform Replication (and persisting into a local in-memory database) anymore, as this is moved out of the game server and into the Replication Layer (see topic)","Approach:","* Server Nodes are still Game Servers (DGS). As before, they are responsible for simulating the game world, verifying the actions of the players and simulating AI. The difference is that now a specific Server Node might only a part of the game world, and not the entire game world anymore.","* There can be many server nodes computing the same game world. The term server \'node\' highlights that it is one of many game servers in a much larger network and those nodes having been setup to work within it.","* To determine which Server Node is computing which part of the game world, a Server Node will be assigned authority (from Atlas) over the entities in that section of the game world. The code logic known as Entity Authority will then perform the correct action on the server, depending on if that server has authority or not (or is about to gain/lose authority when authority is transferred and entities are simulated by another server node afterwards)."],"sources":["cc2","qa1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/a/c/8/1/5/e5d1fca411d987af02a995bc80d1200.png"},{"uuid":"592cd45f2a4ae16d14b3be8e950f9f5ba8074766","index":170},{"uuid":"d7ec29de4d92066d1744922b1e386e49babf9be7","index":171,"pageIndicators":{"current":"1","total":"1"},"title":"Player Item Shard Transitions","subtitle":"Overview","texts":["Challenges:","* Because there will be a large time frame in which we still have multiple game worlds running alongside each other, the multiverse, (because Shards cant be scaled up high enough to support single regional Shards or even a single world-wide Shard), there is a need for players and their items to move between Shards.","Solution: Player Item Shard Transitions","Requirement for: Server Meshing","Goals:","* be able to move players, their items and ships between Shards between play sessions","Approach:","* This will make heavy use of the new EntityGraph and Global Database (LTP) databases.","* Reminder: Items that physically exist as entities in the game world are persisted into the EntityGraph database. Inventory content and stowed ships and vehicles are stored into the Global Database. Entities can be moved between the two databases by stowing and unstowing them.","* When players log out and later log back into the game, they might have to join a different Shard instead of the one they played on previously. Possible reasons might be a full shard or partying up with a friend that has been playing on a different Shard.","* When players log back in and try to join the PU, the Matchmaking service will assign the player to a Shard. If this Shard is different to the one the player previously played on, then the player, the player\'s items and ships (and their base) are moved from the EntityGraph of the first Shard into and into the EntityGraph of the second Shard. For Alpha 3.18, this will only apply to stowed items.","* Data in the Global database does not have to migrate as it is already Shard-independent (meaning it is available from all shards).","* CIG has talked about ideas on how to handle land claims and bases under the multiverse; They would exist across all game worlds, but in an inactive state except in the shard in which the owner plays on."],"sources":["scl2","qa1","scr"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/d/b/b/0/232fa584c4e81be5a03ce0b41c41200.png"},{"uuid":"d6f0d4bb0d12d722ae0d3b11053bad350a54f43e","index":172},{"uuid":"003b948508ad2c8f0dfbeaa76c17eaa04f576904","index":173,"pageIndicators":{"current":"1","total":"1"},"title":"Server Crash Recovery & Client Reconnects","subtitle":"Overview","texts":["EntityGraph and the Replication Layer will allow for the recovery of crashed servers and reconnets of disconnected players.","Challenges:","* a server crash would cause major disruptions for the player experience","* especially under Server Meshing you need to be able to restart individual servers instead of having to restart the entire meshed system, which essentially would be all servers if just one server crashes","Solution: Server Crash Recovery and Client Reconnects","Requirement for: Server Meshing","Goals:","* utilize the data stored in the EntityGraph to recover individual, crashed game servers and allow players to continue to play with minimal interruption and barely any loss of player progression and items","Approach:","* in case of a game server crash a new server will be started to take over its job (or an already running server will be utilized)","* the new game server will load the entities (which the crashed server was responsible for) from the EntityGraph","* the new game server will utilize Server OCS to load the entities into its memory","* the Replication Layer will hold the player client connections in the meantime and once the new server is ready to go, the game will continue to simulate for the players.","* speculated: players will only experience a few seconds of disruption and lose barely any of their progress as most of the data is already persisted in the EntityGraph instead of the crashed game server/server node","* Alpha 3.15 also came with crash recovery for ships by checking the EntityGraph (containing the physicalized ship entity) then stowing the ship into the Global Database (LTP). From there, it then can be spawned again on another server by the player at a Terminal with the interior (including cargo) fully available. This was a first workaround before the actual server crash recovery that will allow us to keep playing exactly where the game left us of (e.g. inside our ship while in Quantum Travelling).","* The Replicant and Gateway services are expected to become rather stable (because they dont run complex code, such as the server nodes). Even if one of these services goes down, it is expected take less than a minute for the Relicant and just a few seconds for the Gateway service to be started and the game to be resumed."],"sources":["scl2","s109","s110","s116"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/9/a/a/5/2e9eb7146eeb498fff9694ad0531200.png"},{"uuid":"d9315e7af4b909a21eb8c1ad20db35ce1f389993","index":174},{"uuid":"a03537a348d516163abe3734d553aa987f337e87","index":175,"pageIndicators":{"current":"1","total":"1"},"title":"Service Migration and Creation","subtitle":"Challenges:","texts":["* with server meshing having multiple game servers compute the same game world (which is just data), those game servers will have to share and access the same data","* the data can not be stored on the game server anymore but made accessible to all game servers","Solution: put everything into its own service for all game servers to access","Requirement for: Persistent Streaming, Server Meshing","Goals:","* use the single responsibility principle of only having the game servers compute the game world for the players while executing separate logic and storing data on separate servers/services","Approach:","* move code and logic that is going to be used by multiple game servers outside of the server code and into a separate service to be run on its own server (not a game server). A few of those required rewrites.","* the network code\'s Replication Layer (collection of Client OCS minor techs) is moved out of the game server code (into the Hybrid service)","* Matchmaking/Login Flow has been reworked to assign players automatically via various weighted factors onto different servers/shards.","* ATC (Air Traffic Control) has to manage and keep track of free and occupied landing pads and requests from players and NPCs (potentially made by multiple servers or different servers across time).","* a NPC Character Creation Service \\"will aid in the creation of AI at specific locations for specific reasons, such as the Quantum Simulation.\\"","* NPC Scheduler Service \\"is meant to add and remove NPC\'s to the game, dynamically spawning them into and out of the \'verse based on NPC Archetype, Maximum number of NPC\'s in a given area, and the probabilities of those NPC Archetypes.\\"","* The AI Info Service \\"will continuously track the position of players, NPCs, and other entities so that our live-service tools can display them properly in real-time.\\"","* NPC Tracker Service \\"tracks and records the actions of players and NPCs. In turn, Bounty Hunting gameplay will use this service to expose the actions taken by outlaws so they can be tracked by Bounty Hunters.\\"","* Identity Service \\"will be a proxy service that will relay information about accounts between the RSI platform, Tavern (Spectrum) and the game client.\\"","* Reputation and Org Service \\"will introduce the first iteration of persistent reputation between all entities within the Star Citizen universe, as well as persistent NPC organizations.\\"","* Reward Service \\"tracking stats and data per player, and awarding in-game rewards to them, as well as collecting, persisting and querying those player rewards\\"","* Configuration Service: \\"This service is responsible for real-time distribution of configuration to services and clients.\\"","* the \\"Quantum\\" Economy Simulator and Virtual AI Service for both Quanta, Virtual NPC and Dynamic Event computation as well as databases related for storing Quantum generated data (probability volumes and values, store commodity prices)","* Subsumption Service/Server Mission Logic \\"The porting of core Subsumption mission code to a service and implementation of a select subset of tasks to be used on that service. Includes implementing communication between service and mission logic running on game server.\\"","* Services Distributed Load Testing System \\"Development of a distributed load testing tool that can simulate service loads and replicate user behaviours\\" for testing","* Chrono Service: \\"offers a programmatic API for distributed timers and alarms. For example, in the expiry of rental entitlements.\\""],"sources":["scr","isc1","mr4","lc1","scl2"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/3/0/2/c/7/7abb70b4e2f846bc18e992ff2f11200.png"},{"uuid":"ba8b0d8516b05bdf0f26d05d0848636a2fe77c5b","index":176},{"uuid":"4c490798e876ec523d5e618ee1c07c1bc41c9de2","index":177,"pageIndicators":{"current":"1","total":"1"},"title":"Service Fleet Manager","subtitle":"Overview","texts":["For Server Meshing to come online, there needs to be a manager for all servers and services of a Shard. This is going to be the job of the Fleet Manager (part of Shard Manager?). It is going to start and stop services and servers, statically initially, later dynamically under Dynamic Server Meshing. It is already developed with that dynamic functionality in mind.","This is already implemented with having horizontally scalable servers and services in mind, which becomes more promintent under Dynamic Server Meshing.","Note: This has nothing to do with ship fleets. This is about fleets of services/servers."],"sources":["qa1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/9/c/a/b/2/cfc7e304899a91138ccba2a235b1200.png"},{"uuid":"2a0b03590199fcce0d6a949549477c9e24ec37f2","index":178},{"uuid":"bbcb3bf8f7f0b1f6a002ee5e26be0b4c66a68178","index":179,"pageIndicators":{"current":"1","total":"1"},"title":"Shard Manager","subtitle":"Overview","texts":["Challenges:","* a Shard does not consist of a single game server anymore, but multiple servers and services. All of these have to be managed somewhere.","Solution: Shard Manager","Requirement for: Server Meshing","Goals:","* manage all the servers and services of a Shard","* setup all relevant data to have the Shard work properly","Approach:","* Responsible for setting up a new Shard","* by first starting and managing server nodes & services (Fleet Manager?)","* establishing network connections between services and server nodes","* \\"seeding\\" the EntityGraph database with the initial state of the universe (kind of like a \\"big bang\\" for that specific SC universe), creating a new game world.","* registering the shard at the Matchmaking service to let players join that Shard."],"sources":["qa1","cc2","scr"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/6/a/9/d/9/611adee4ebbb9239becf58379ea1200.png"},{"uuid":"02048f1e3ca374bc9dd6c3c61a630583fa823857","index":180},{"uuid":"6d2f71de16327d1f7870900315fa63c6a0b2df8e","index":181,"pageIndicators":{"current":"1","total":"1"},"title":"Replication Layer / Hybrid Service","subtitle":"Overview","texts":["Requirement for: Persistent Entity Streaming, Static Server Meshing","Solution: Replication Layer (sometimes also called Hybrid service, since the Replication Layer will be moved onto its own server)","Goals:","* Create a new service that is going to sit in-between the player clients, game servers and the EntityGraph database and is responsible for OCS loading decisions, state networking, caching, persisting and initial game world seeding.","* have this service run alongside the game server to get all this functionality online before moving it on its own server for Server Meshing (at which point it is called the Hybrid Service)","* This decouples the Replication and (persistent) state of the game world from the simulation through caching and persistence and allows for server crash recovery.","Approach/Goals:","* The clients and game server(s) will communicate via the Replication Layer and instead of exchanging data directly.","* The service is rolled out in phases:","* In Alpha 3.13 or 3.14, a first version of the Replication Layer might have come online, mainly moving code around in the engine to prepare for later features.","* Alpha 3.15 came online with an in-memory cache (a first taste toward EntityGraph) which introduced the new query system and inventories (including stow/unstow, utilizing Global Database and Global Persistence).","* For Alpha 3.17, the OCS logic that is responsible for loading the game world was moved out of the game server code and into the Replication Layer code. It also came online with improvements to the OCS streaming bubble, allowing clients and servers to load the same entities in parallel and have different streaming bubble sizes for clients (prior they had the same size and the client was only notified after the server completed loading on its side). Speculated: The entity state networking part of OCS might have been moved into the Replication Layer with Alpha 3.17 as well.","* With Alpoha 3.18, the EntityGraph database is hooked up to the Replication Layer (PES first comes online).","* For Static Server Meshing (4.0), the Replication Layer will be moved on its own server, so that multiple game servers can connect to it. Other services will also be part of this central server, which is why this service is called the Hybrid.","* For Dynamic Server Meshing, the Hybrid service will be horizontally scaled, by splitting off individual services, so that they can be scaled independently, serving more clients and servers. This is how server meshing is going to scale up and allow for more and more players in the same game world."],"sources":["qa1","cc2","lc1","scr","s209","pn317"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/b/8/9/6/8/e32b789470cb911036004948bfc1200.png"},{"uuid":"873a547e32616479ad71eff412f10cace247aee8","index":182},{"uuid":"e959cc82838e02ee4b873308b44bb9587deb5413","index":183,"pageIndicators":{"current":"1","total":"1"},"title":"Time and Synchronization","subtitle":"Overview","texts":["Challenges:","* first tests of connecting two game servers together helped identify synchronization issues.","Solution: Rework Time And Synchronization logic (speculated: might have released sometime mid 2021 already)","Requirement for: Server Meshing","Goals:","* ensure that the simulation on both client and server (and soon multiple servers) are better synchronized and networked","Approach:","\\"How the engine measures the passage of time underwent a complete overhaul. Accuracy was improved both in the measurement of time and in its synchronization between server and clients. How the engine uses time to update its logic and physics simulation was changed to eliminate errors that could result in simulation time passing differently on the server and clients. Many smaller bugs that had caused timing errors to grow on long-running servers were also fixed. The network synchronization of vehicles and physics objects were updated to take full advantage of the improvements. The accumulated result of all these changes was a significant reduction in latency and desynchronization issues in many areas, even under harsh test conditions for network and server performance. Besides improving the overall player experience, this work was a necessary step towards server meshing, where simulating the game across multiple game servers would have made desynchronization issues due to timing errors worse.\\" - Postmortem 3.12"],"sources":["cad1","pm1","s209"],"originalSlideImageURL":""},{"uuid":"2291a2d75b1f4d6a9ef7d6944846592fed075caf","index":184},{"uuid":"883d1510fad12cfbc330556539befacd36acb9fc","index":185,"pageIndicators":{"current":"1","total":"1"},"title":"Connection Process and States","subtitle":"Overview","texts":["\\"In a server mesh, a client may connect to many different servers during a game session. Part of the work towards server meshing requires separating the process of connecting a client to a server into distinct stages. These stages can then be executed independently without requiring a client to completely abandon its existing game session. Significant progress has been made towards this although there is more work to be done.\\" - Postmortem 3.12","(Speculated: might have released sometime mid 2021 already)"],"sources":["pm1","s209"],"originalSlideImageURL":""},{"uuid":"c19080c227926154044f0a0cef07b3fe3207d254","index":186},{"uuid":"50c7ece414c6a42f193f775de79a89c099854edc","index":187,"pageIndicators":{"current":"1","total":"1"},"title":"Entity Authority","subtitle":"Overview","texts":["Challenges:","* The engine/server logic is not designed to have multiple game servers work together because each game server expects to have full control/authority over all entities and not just a small subset (a section/Territory of the level).","Solution: Entity Authority (also known as (Entity) Authority API, initially as If-Statement Refactor) (work began in 2020 and released in Alpha 3.13/3.14)","Requirement for: Server Meshing","Goals:","* allow the game servers in a mesh to share their control over the game world","* let other game servers in the mesh appear as special \\"clients\\" to a game server to exchange entity states","Approach:","* authority functionality already existed but didn\'t support multiple game servers, and thus thousands of if-statements were touched in the code","* in programming an if-statement alters the execution of the program to perform different logic. In this case the server needs to know if he has the authority over an entity or not, to either update it or perform a different kind of logic (like receiving state data from another game server).","* \\"In preparation for server meshing, the team performed a sweep on the remaining tasks to convert code to the Authority API. Over the last 12 months, there has been a coordinated effort by all teams to update the game-end engine code to this new system. Thanks to their work, a large majority of these tasks have been completed. With a concerted push, we\u2019ve reduced the number of remaining tasks into single digits\\"","- Postmortem 3.12","* \\"The Authority API is to let servers know which entities they have authority/control over. [...] in server meshing we need this to distribute control over entities to different servers.","In the original client-server architecture code could just assume that if it was running on the server it would have control over any entity. Because the engine was designed so that clients and servers run a lot of the same code, there were thousands of places in the codebase that needed to check if it was running on a server or not. Some of these checks control systems that are only available to a server but others were really asking if the program had authority over an entity. It\'s the latter category that needed replacing with the Authority API. However there was no way to tell the cases apart other than looking at every one of the checks individually and deciding if it needed to change.","Being such an enormous amount of work, this conversion was split over all the teams, file by file. This still resulted in hundreds of tasks but thanks to everyone\'s hard work it\'s now almost complete. [...]\\"","- Clive Johnson, Spectrum Post \\"What is the Authority API?\\" (Feb 2021)","* the feature might have released mid 2021 already, mainly to test if the engine works the same but with/under the new changes (feature parity). Using Entity Authority under Server Meshing required work on additional features (e.g. Hybrid) which were released later."],"sources":["qa1","cad1","s207","s208","s209","src"],"originalSlideImageURL":""},{"uuid":"a236f9741d3c7ac28d566376d8142116b26fe5b8","index":188},{"uuid":"a4214e651e74b9a52a82d09365e1deb1cf8b321d","index":189,"pageIndicators":{"current":"1","total":"1"},"title":"Atlas","subtitle":"Overview","texts":["Atlas is one of the components of the initial Hybrid Service, but will be its own scalable service later on.","Challenges:","* Entity Authority introduced the functionality of game servers/server nodes to be able to compute only specific entities of the level","* however somethign needs to keep track and assign this authority to the server nodes","Solution: Atlas service","Requirement for: Server Meshing","Goals:","* create a service that manages the Entity Authority for the server nodes of a Shard","Approach:","* Atlas determines and keeps track of which server node has authority over which entity.","* Under Static Server Meshing, it also keeps track of the sections (Territories).","* Atlas tells each game server/server node which entity they have authority over. After that, the Entity Authority logic on the game server is responsible for executing the correct logic on the entity state (run simulation code or not).","* When players and entities (like a ship) move through the level and it enters an area where two game servers overlap (have the same entities loaded), then Authority can be transferred from one game server to another.","* Speculated: this is going to be expanded upon and turned into the Loader Balancer for Dynamic Server Meshing which will try to optimally distribute entities across all game servers."],"sources":["qa1","scr"],"originalSlideImageURL":""},{"uuid":"2fcc4b2c5d27b0d3e42fdc4ff8a4f32cd5b8e5b8","index":190},{"uuid":"dd9477e55fd81ef317542a81a422a81e950dcf1b","index":191,"pageIndicators":{"current":"1","total":"1"},"title":"Replication Layer & Replicant Services","subtitle":"","texts":["Replicant is one of the components of the initial Hybrid Service but will be its own scalable service later on.","Challenges:","* communication between clients and servers has to be scaled up to support more of both in the same shard","Solution: Replication Layer with horizontally scalable Replicant Services","Requirement for: Server Meshing, Persistent Streaming","Goals:","* make the streaming and networking logic scalable for more clients and servers","* have clients/servers partially look into multiple game servers in a performant way","* allow for server recovery and client reconnects feature","* provide a cache for entity state from the EntityGraph database for the clients and server nodes","Approach:","* Parts of the entity networking and OCS logic of the game server is being moved into their own service called the Replicant.","* The servers nodes and player clients don\'t connect and communicate directly anymore, but instead via the Replicant service (as well as the Gateway service).","* The Replicant will be turned into a horizontally scalable service as well, where each Replicant (with its server nodes) handles a different section of the level. Together, they form the Replication Layer.","* The Replicant includes partial logic of the Entity Component Update Scheduler (ECUS), as well as - speculated/deduced - the StarHash (Starhash Bind Culling) logic of the Entity Streaming Manager, Network Bind Culling and Serialized Variable Culling. Together, they will:","* Manage loading of Object Containers for both client and server (Network Bind Culling, Entity Streaming Manager, StarHash Bind Culling)","* Replication of networked entity state between clients and server nodes (ECUS, Serialized Variable Culling, StarHash Bind Culling)","* As well as persisting entity state changes into the EntityGraph database (Persistence, Persistent Streaming)","* Note: the Replicant does not run code related to game logic, like simulation or physics (as that is the job of the server nodes).","* This allows for the following new functionality:","* Now, game servers won\'t have to figure out which Object Containers have to be loaded/streamed on both the game server and clients anymore. Instead, the Replicant will figure this out and inform the server nodes and clients instead (and both can load the same entities in parallel which also allows server and clients to have different streaming bubble sizes).","* The server nodes are able to directly send their network updates to the Replicant service once, which then determines which entity states should be send to which client(s) (and maybe other server nodes in the shard) that need it. This would make the Replicant be a mediator and sit between the server nodes, clients and databases.","* The Replicant operates event-driven (not tickrate-driven like game servers), meaning that it directly processes network updates when they are received.","* Additionally, each Replicant contains a cache (in-memory database, iCache) in which parts of the data from the EntityGraph database are copied into. This allows quicker read and write access to entity state data. The Replicant persists its entity state back in the EntityGraph database, so that not a lot of data will be lost in the case if a Replicant crash."],"sources":["qa1","cc2","scr"],"originalSlideImageURL":""},{"uuid":"75410e27560285bc5b9f47285313706ea4a1a842","index":192},{"uuid":"60bd25911538cb9f364cf3347e06954c7d0f7faf","index":193,"pageIndicators":{"current":"1","total":"1"},"title":"Gateway Layer & Gateway Services","subtitle":"Overview","texts":["Gateway is one of the components of the initial Hybrid Service but will be its own scalable service later on.","Challenges:","* communication between clients and server nodes (and Replicants) has to be scaled up to support more of both in the same shard","Solution: Gateway Layer with horizontally scalable Gateway Services","Requirement for: Server Meshing","Goals:","* distribute network updates between multiple clients and Replicants","Approach:","* While the Replicant service is responsible for distributing data between multiple server nodes (\\"server node facing\\"), the Gateway service is responsible for distributing data between the clients and the Replicant services (\\"player client facing\\").","* Clients dont connect themselves directly to server nodes anymore nor to the Replicants, but to Gateway services instead.","* The network state updates send from the player clients will be relayed to the correct Relicants by the Gateway services.","* Likewise, the server nodes send their network updates to the Replicant which will then relay it to the relevant Gateway service(s) that need this data. The Gateway service will then relay/replicate this data to the clients that need that specific data.","* Clients might be communicating with multiple Replicants at the same time by having the Gateway establish connections to multiple Gateways at once, exchanging network updates between all of them.","* Highly speculated: When the Gateway service receives network updates from a client, it directly sends it to the clients that require it. It also sends those network updates to the Replicant services that require it, which will relay it further to their server nodes that require it.","* This might allow for low-latency communication between clients, as well as allowing the server nodes to verify player actions and sending validation/rollback updates back to the clients shortly after. Actions already performed on the clients will be rolled back if the server node concludes a different outcome for the player action.","* The Gateway (just like the Replicant) operate event-driven, meaning that they directly process network updates when they are received. Compared to tickrate-driven (updates at periodic intervals, e.g. every 33ms) like the game servers/server nodes operated under."],"sources":["qa1"],"originalSlideImageURL":""},{"uuid":"8c1c50592a017debeb573b39337fe89e28ff6621","index":194},{"uuid":"32880143215ce4eacf76f86e980ca9367987bd8e","index":195,"pageIndicators":{"current":"1","total":"1"},"title":"Scribe","subtitle":"Overview","texts":["Scribe is one of the components of the initial Hybrid Service but will be its own scalable service later on.","Challenges:","* unknown","Solution: Scribe service","Requirement for: Server Meshing","Goals:","* unknown","Approach:","* at this point in time, there is very little know about the Scribe service.","* Speculated: This service might be related to persisting state into the EntityGraph database.","* Speculated: And/Or this might be the Shard Manager service, running under a different name."],"sources":["qa1"],"originalSlideImageURL":""},{"uuid":"14248255df7b3c239c004623ba2235095a12f257","index":196},{"uuid":"fc05559168375fe610638bad13bfaf163e7ae57a","index":197,"pageIndicators":{"current":"1","total":"1"},"title":"Hybrid Service / Replication Layer","subtitle":"Overview","texts":["Challenges:","* for all of the server meshing functionality to come online, the newly created services have to come online.","* with such complex interconnected services and infrastructure, the complexity is quite high.","Requirement for: Persistent Streaming, Static Server Meshing","Solution: Hybrid service (initially sometimes referred to as Replication Layer by CIG, although the Replication Layer/Replicant service is just one - but major - part of many which make up the Hybrid)","Goals:","* create a new service that sits in-between the player clients, game servers and the EntityGraph database and is responsible for OCS loading decisions, state networking, caching, persisting, initial game world seeding and managing of entity authority and authority transfers.","Approach/Goals:","* Bring the new services Atlas, Relicant, Gateway & Scribe online, but without the overhead of having to manage and coordinate all of these on their own servers. And instead, reduce the complexity and infrastructure overhead for the initial versions by having all services run on the same server.","* While the mentioned individual services are planned to run on their own, separate servers later on, for the first version of Server Meshing it is easier to have them all on the same server, as the early versions will still be quite small in scope.","* Clients and game servers of a shard will connect themselves to the Hybrid service","* Clients and game servers of a shard will exchange data between each other via the Hybrid service which relays the data between all participants.","* For Dynamic Server Meshing, the Hybrid service is planned to be split up, and each services will be put on its own servers.","* Once that is done, the individual services are going to be horizontally scaled, so that e.g. multiple Replicant and Gateway services are running at the same time. This is how server meshing is going to scale up and allow for more and more players in the same shard.","* The Hybrid service consists of the Replication Layer logic (later Replicant & Gateway services). For more information check out the slide on Replication Layer."],"sources":["qa1","cc2","lc1","scr","s209","pn317"],"originalSlideImageURL":""},{"uuid":"6ff363082aa8ad6390e522374014327c97664a3f","index":198},{"uuid":"225534550cc4ad882ee694a7d68b018454a0d21c","index":199,"pageIndicators":{"current":"1","total":"1"},"title":"Ship Interior Object Container Streaming","subtitle":"Overview","texts":["Solution: Ship Interior OCS, a sub-feature of OCS and an optimization for clients and servers","Requirement for: Server Meshing","Goals:","* \\"When complete, streaming interior object containers in and out of ships based on distance will allow vehicles to have a higher performant stage of streaming used at far distances, to reduce CPU cost.\\" - Release View","* reduce CPU and memory on client (and servers in server meshing)","Approach (speculated):","* split the exterior and interior of ships into separate Object Containers","* add additional OCS rules for loading and unloading rooms/zones and/or Object Containers of the ship interiors","* the player client does not have to load the interior of far away ships anymore","* speculated: in server meshing, a game servers don\'t have to load the interior of the ships, which are being computed by another game servers in the mesh/shard","* speculated: rooms with windows will have a different rule compared to rooms which are deeper inside the ships and/or have no windows"],"sources":["scr"],"originalSlideImageURL":""},{"uuid":"5a9b9f88f752e249ee27126b960a2c870895dd63","index":200},{"uuid":"4eb1780fcf13b78cac24b483354d127108f93516","index":201,"pageIndicators":{"current":"1","total":"1"},"title":"Load Balancer","subtitle":"Overview","texts":["For Server Meshing to become dynamic, there needs to be some kind of logic implemented that will automatically decide how authority over entities is distributed across the game servers. Because under Dynamic Server Meshing, game servers are not supposed to be assigned fixed locations to simulate, and instead are allowed to follow their players around, loading and simulating any part of the game world the players visits. The rule that only one game server is able to have authority over an entity still applies, so server-to-server communication can also happen anywhere in the game world, not just at the predefined borders, like under Static Server Meshing.","However, not a lot is known about this feature and in which form it will be implemented (e.g. utilizing a clustering algorithm).","Speculated: This might also be the functionality of the Atlas service which might take over the role of not only keeping track of authority but also deciding how it should be split."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/4/7/e/2/1/355db594f22b0a0b9995eb9f5151200.png"},{"uuid":"c78d464fa2dfda18ff3ec495969ea3d2c9f6dddb","index":202},{"uuid":"d0bc753114cab1f82d18e23e332df02a74540375","index":203,"pageIndicators":{"current":"1","total":"1"},"title":"Replication Layer Version 2 (or \\"Hybrid service breakup\\")","subtitle":"Overview","texts":["The components of the Hybrid services are going to be move out and into their own services. These services are going to be horizontally scaled, allowing multiple of these services to run alongside each other, allowing for more processing power and bandwidth. These services can then be spun up and shutdown dynamically based on demand. This is how Shards are going to be scaled up, allowing for more players per Shard to potentially reach one single shard per region.","For PES, there is the (Service) Fleet Manager service already in the works which is being designed with scaling game servers and services up and down dynamically in mind."],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/e/0/c/5/e/77429014a178ea9cefc9b3607221200.png"},{"uuid":"0713c224ab386b75a95fc3dc28e2e3efdf10c6eb","index":204},{"uuid":"021cd9dd69b2ecc861c10d945fc433a699ab0ef7","index":205,"pageIndicators":{"current":"1","total":"1"},"title":"Specialized Netcode Research and Development","subtitle":"Overview","texts":["To push Shards toward a potential world-wide Single Shard, additional research and development has to be done to mitigate the effects of high latency between services and clients when they are communicated across continental regions. Lag has to be compensated via netcode techniques and smart (re)location of services, requiring additional changes to the service architecture of Server Meshing."],"sources":["tw1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/c/9/8/d/3/e49b8704335a3954a1e9b8c25891200.png"},{"uuid":"f02f830554ade56792280e2e8ab54296b9bd1bad","index":206},{"uuid":"88105467a06364e2e6c6006e2173610c3c4a1ef6","index":207,"pageIndicators":{"current":"1","total":"1"},"title":"Server Node Multithreading Scaleup","subtitle":"Overview","texts":["CIG plans to highly multithread their simulation so that a single server node can make use of more CPU cores and support more entities/players. This would reduce the total amount of server nodes required and might minimize the need for server-to-server communication as more entities could be put and simulated on the same server node."],"sources":["jp1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/8/4/a/3/410fb154eb49b613fd9eb0a27691200.png"},{"uuid":"3b3b2916e07cd50918cb4c6388a9dbeab8ad42fb","index":208},{"uuid":"3e7ea2541d338726835b19556595da07cefba48f","index":209,"imageURLs":["https://media.preziusercontent.com/media/2/8/c/7/7/3d19d26415bbe3bf657881717db.png"],"pageIndicators":{"current":"1","total":"1"},"title":"Layers/Layering (SPECULATED)","subtitle":"Overview","texts":["SPECULATED: For scenarios where in-game areas are extremely populated, the game might decide to reduce access for other players (like closing jumppoints or AI blockading) or by creating layers that area, meaning that multiple instances of that area exist in parallel within the same shard. Although, it is unclear if this is limited to an area or if the entire game world will be instanced. This solution might take into account friend and foe to put relevant interacting players into the same layer. This would mainly be done to keep the performance on the side of the player client in check. The server side should be fine.","OTHER INTERPRETATION: This might refer to layering of servers and services instead, by which players exchange data with a server in the region of the player (for low latency) and that server exchanges data with a services geographically located in the middle of two regions to exchange data of servers across regions","OR: Players of different shards can meet up by layering areas of the game world."],"sources":["qa1","10c2","rtv1"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/0/b/2/4/ace61674dc4beee3cb15438fdee1200.png"},{"uuid":"b6d3c6bf0e353600eb7b57ad460be6f70b8e40bc","index":210},{"uuid":"cee6a329d2b551f28726492e7e46452614d0a7f3","index":211,"pageIndicators":{"current":"1","total":"1"},"title":"Projectile Manager","subtitle":"Overview","texts":["Projectiles in the game are entities as well as an item from the new Item 2.0 (Entity Components) system which provides a lot of flexibility.","Challenges:","* projectiles are rather simple in design and computation but the overhead of being traditional entities introduced some issue that were especially noticeable once a very large amount of weapons were fired at the same time/game tick:","* Unnecessarily large memory usage caused by having to allocate the default but unnecessary entity state values","* By design, all spawning entities in the game are blocked until they are finished their spawning process which is not required when it comes to projectiles since they are too simple to be required to go through the entity spawning system. This became an unperformant congestion issue once many projectiles were spawned in the same game tick.","Solution: Rework of the Projectile Manager","Goals:","* improve performance and reduce memory usage to allow for large numbers of simple projectiles in the game","Approach:","* on spawn, detect if the projectile is part of the basic projectile type","* then only create a tiny data structure to hold the necessary values of the projectile instead of a whole entity (very likely: on the code/memory side, it is implemented using a Structure of Arrays or Array of Structures of Arrays)","* in terms of rendering, each projectile is just a simple box with a material and wont be checked for occlusion culling (object not rendered because another object is in front of it blocking the view to the player) since they are already so cheap and not worth using up any additional computation for","* projectile are not network-replicated entities, meaning client and server dont exchange position data each game tick. Only the fire event (and hit event) of a projectile is networked, the position can then be calculated based on that information since the trajectory of a projectile is deterministic/always the same (this will most likely be used for server-to-server communication in Server Meshing as well)"],"sources":["atv5","qa1","w3"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/d/d/8/b/3/b1f7a4443a0b046ccac033a7d301200.png"},{"uuid":"acd31539e6f4c96552a1d6644d0b8de84b3c6834","index":212},{"uuid":"7ae12361afa193a0e3076b3d7c41a631e8d5da58","index":213,"pageIndicators":{"current":"1","total":"1"},"title":"Actor Networking Rework","subtitle":"","texts":["In the game code, an Actor is an humanoid or animalistic entity in the game which can be controlled by either a Player or by the AI and therefore \'acts\' in the game world. Currently, actor movement is client-authoritative, meaning that if a player presses his \'W\' button, the player client executes the appropriate action (in this case the player walks forward) and sends the new player position to the server which then sends it to all the other connected player clients to have the action replicated.","Challenges:","* can cause perceived lag and other players teleporting around especially when they have a poor connection to the server","* because the server does not validate the player actions, detecting certain types of cheating becomes more difficult to deal with since the client can just make up any player positions and the server will always consider that data to be correct","* for smooth actor movement and animations there is a 250ms delay injected as a workaround to compensate for lag spikes","Solution: Rework of the Actor Networking (\'netcode\' for actor movement), split into two parts:","* Upstream: Client-to-Server, released in Alpha 3.6, barely any noticeable effects for players yet","* Downstream: Server-to-Client, functionality will become noticeable for players, slowly and continuously rolled out across a lot of the Alpha 3.x patches, major update and improvements for this in Alpha 3.17.2","Goals:","* make actor movement server-authoritative with client-side prediction (to clarify, this only affecting Actors that does not include ship and weapon networking, those will be separate features/deliverables, partially reusing some of the code)","Approach:","* the player client still executes the movement on its end but also sends a notification containing the pressed button (as an \'action\') to the server. The server then executes the action on its side as well then compares its result with the result of the client. If they line up, then everything is okay. If they deviate, then the player client is notified and the position of the player is adjusted to what the server considers correct. This allows the server to validate all player actions.","* other players with bad connections wont teleport around anymore, but if you are the one lagging then you will be the one being teleported around (aka rubber-banding)","* the actor delay will be reduced to something reasonable (~66ms), with improve dead reckoning and state processing","* update: that delay has now been made dynamic, meaning that it will be lowered on low latency connections automatically","* Alpha 3.17.2 \\"Enabled new remote movement and new server authoritative position systems. With this update, players should see great improvements with on foot player positions and less jittery behavior while viewing remote player movements.\\""],"sources":["s104","s304","scr"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/8/1/7/7/96cddd844c99f4581df500e408a1200.png"},{"uuid":"62c206277f4daeed9bdcc88b958cfdd586848c47","index":214},{"uuid":"9bbef03ffe3a005fabfda86f8f8d51b03d4438f0","index":215,"pageIndicators":{"current":"1","total":"1"},"title":"Subsumption AI","subtitle":"Overview","texts":["Challenges:","* since Star Citizen universe plans to feature 9 times more NPCs than players as its population, with NPCs being able to perform most jobs and going about their daily lives, the game needs an extensive AI system to accomplish that","Solution: Subsumption AI architecture","Goals:","* create a high-level, bottom-up, behavior-based, objective-oriented NPC system","* let NPCs traverse the game world and perform various actions by making decisions based on their surroundings","Approach:","* more complex tasks/behaviors are build out of multiple simpler sub-tasks/sub-behaviour, creating a \\"behavior tree\\"","* sub-behaviors are organized into a hierarchy of layers with each layer implementing a particular level of competence.","* Higher levels are able to subsume (integrate/combine) lower levels","* for example if the NPC requires an item then it would 1) search for the item 2) explore the area 3) walk around 4) avoid obstacles. In this case, the higher-level \\"explore the area\\" would utilize the lower-level competencies like \\"avoid obstacles\\".","* the NPC is able to adapt to new information while in the process of performing an action by constantly taking in information about the surroundings to then select an appropriate action in a bottom-up fashion","* each individual behavior does not make the NPC look intelligent, only the interaction of multiple behaviors within the environment does","* the Bartender NPCs are a result of this AI system, a first test for various behaviors by interacting with the game world, players and other NPCs","* with server meshing, the NPCs will have to be able to look into multiple servers to make realistic actions","* (speculation: all NPCs will run on their own game server that acts as a client and NPCs communicate back and forth with the game server similar to how player clients do it. this would allow them to look into multiple servers as well)"],"sources":["10c1","w10"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/f/6/4/6/b/6fe1c744b8cbca9175ad6a20f0f1200.png"},{"uuid":"01fc378175714b1246dd100bb9bceb2f8f3595b9","index":216},{"uuid":"a507b82bc34455d09d41e0f02519d3f1a494f816","index":217,"pageIndicators":{"current":"1","total":"1"},"title":"Quantum Economy Simulator","subtitle":"Overview","texts":["A simulation run on a separate server which abstractly simulates thousands of simple AI (Quanta) as well as incorporate player and NPC actions to generate economy data, probability data and missions. All of this data is saved into databases which are then accessed by the game servers to display prices and populate the universe with appropriate objects based on the current state of the economy in that region of space. Also introduces dynamic events and Virtual NPCs to make the game world feel more alive and connected.","Released in its first version in Alpha 3.17 with Quanta generating the prices of quantum fuel, hydrogen fuel and repair services. However, in prior versions it was already used to manage and spawn dynamic events."],"sources":["s302"],"originalSlideImageURL":"https://media-temporary.preziusercontent.com/frames-public/5/3/f/1/3/7e9b2d54a17900f86d128f4c95a1200.png"},{"uuid":"bc8b8e5b583fe364f8b626b6ca30913fef91f138","index":218},{"uuid":"e89974b00d8c2ebc519548f6888ab374fb4a62ef","index":219},{"uuid":"101818252486dd29de94f1f6d4ecab4d4307e31f","index":220},{"uuid":"6c294c34176fcb176834cfa97210003f4cb9f715","index":221},{"uuid":"3b509c1100a05158d3d0d97a83cf10f6e12cd243","index":222},{"uuid":"797731902a614467bd920d717c1790bf2700cc1e","index":223},{"uuid":"c0950fa5edc1247211858d593442e623bde96bc9","index":224},{"uuid":"4413ddef7450dc0601d0d4b98d43c1ff6af64a68","index":225},{"uuid":"3e70f0d879ecf8e96747b338c33b3d950736e092","index":226},{"uuid":"ef4e31df0cfc6d552caa3f6e656e1c34afb64531","index":227},{"uuid":"af239902ddcc7771949c23613fe0b3aeba5a9228","index":228},{"uuid":"2a3b0d65aa02ac6509c19fe65c081f1b1a225082","index":229},{"uuid":"6ccf38d660f302a84c80461b8c2e79aa018ef941","index":230},{"uuid":"19cf396ae7cdcabbaba279964a384163a1875b0a","index":231},{"uuid":"ce6a6dc7755581861a76b2251100ef57caa20ecc","index":232}]'),Vr=JSON.parse('{"cad1":{"url":"https://youtu.be/hKJfRwjA2RA","description":"Calling All Devs: Core Tech Updates"},"cad2":{"url":"https://youtu.be/H8D_JgvITho","description":"Calling All Devs: Inventory Futures"},"rtv1":{"url":"https://youtu.be/7YPFaVK61xM?t=151","description":"Reverse the Verse: Performance and Optimization"},"rtv2":{"url":"https://youtu.be/E0YYKIjEC0E","description":"Reverse the Verse: Object Container Streaming"},"atv1":{"url":"https://youtu.be/L4m2nwn5wT8?t=792","description":"Around the Verse: Serialized Variables"},"atv2":{"url":"https://youtu.be/HPUBMu1fav4?t=1376","description":"Around the Verse: Multi-Region Servers"},"atv3":{"url":"https://youtu.be/0B0QUFSCUgo?t=808","description":"Around the Verse: Mega Map"},"atv4":{"url":"https://youtu.be/JqMsyLfItVw?t=1282","description":"Around the Verse: 64bit to 32bit Converter"},"atv5":{"url":"https://youtu.be/0gD0geqyImk?t=318","description":"Around the Verse: Projectile Manager Rework"},"atv6":{"url":"https://youtu.be/qkCuBdPpj18","description":"Around the Verse: Item 2.0 Part 1"},"atv7":{"url":"https://youtu.be/zIjBPqmOG-0","description":"Around the Verse: Item 2.0 Part 2"},"hh1":{"url":"https://youtu.be/6LtQc4TtmyQ","description":"Happy Hour Interview: Item 2.0"},"scl1":{"url":"https://youtu.be/RpoyNLQBdjU?t=313","description":"Star Citizen Live: Server OCS"},"10c1":{"url":"https://youtu.be/pxmDw89C3gU?t=2m40s","description":"10 for the Chairman: Subsumption"},"10c2":{"url":"https://youtu.be/DFkTG9YungQ?t=1069","description":"10 for the Chairman: SM & Layering"},"gc1":{"url":"https://youtu.be/ls8VosErVSk?t=4579","description":"GamesCom 2015: 64bit and Zones"},"sc1":{"url":"https://youtu.be/0bb4kBwa2iM","description":"Sandi & Chris: Checking In"},"cc1":{"url":"https://youtu.be/_8VFw1F-olQ","description":"CitizenCon 2949: Quantum Economy Simulator"},"cc2":{"url":"https://youtu.be/TSzUWl4r2rU","description":"CitizenCon 2951 Server Meshing & Persistent Streaming"},"isc1":{"url":"https://youtu.be/1eQ17OMAXSQ","description":"Inside Star Citizen: PES Report #1"},"scl2":{"url":"https://youtu.be/jXvIO8vJkgI","description":"Star Citizen Live: Persistent Entity Streaming"},"eri":{"url":"https://youtu.be/qkteNWutOz8","description":"Erin Roberts Interview"},"z1":{"url":"https://youtu.be/AGr2WyQGeUw?t=2030","description":"Travis Day on Zones"},"z2":{"url":"https://www.gamersnexus.net/gg/1854-chris-roberts-pax-east-instancing-and-zoning","description":"Chris Roberts on Zones #1"},"z3":{"url":"https://www.gamersnexus.net/gg/2119-chris-roberts-on-star-citizen-network-and-render-pipelines","description":"Chris Roberts on Zones #2"},"df1":{"url":"https://youtu.be/OngP6uEfQoE","description":"Overview"},"df2":{"url":"https://youtu.be/hqXZhnrkBdo","description":"Part 1: Scale"},"df3":{"url":"https://youtu.be/TUFcerTa6Ho","description":"Part 2: Detail"},"s101":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/is-there-server-lines-with-ssocs/2921177","description":"on Server OCS and related features"},"s102":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/where-is-icache-and-physicalised-inventory-at-now/3033094","description":"on pCache, iCache and Global Persistence"},"s103":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/icache-and-game-servers-in-game-geo-location/3505517","description":"on StarHash and iCache"},"s104":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/different-tick-rates-in-different-places-with-serv/1926147","description":"on Server Tick Rates and Actor Networking Rework"},"s105":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/net-code-special","description":"on Networking"},"s106":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/server-meshing-ocs-and-squadron-42/3203050","description":"on Squadron 42 and usage of Server OCS"},"s107":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/rucksack/3208530","description":"on Items"},"s108":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/4/thread/ptu-feedback-long-term-persistence","description":"on LTP"},"s109":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/server-issues-30k/3034939","description":"on 30k errors"},"s110":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/how-can-server-meshing-etc-be-built-upon-server-co/3291608","description":"on Server Stability and Recovery"},"s111":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/a-question-of-performance","description":"on Entities and Client OCS"},"s112":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/entity-component-system-architecture-multithreadab/3311462","description":"on Entity Component Multithreading"},"s113":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/client-side-ocs-reduced-tick-rates-and-entity-stat","description":"on Network Updates skipping"},"s114":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/understanding-64-bit-coordinate-system-and-possibl/3466733","description":"on 64bit coordinates and 64bit to 32bit conversion"},"s115":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/1/thread/currency-hotfix-and-upcoming-wipes","description":"on LTP pillar pieces"},"s116":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/3/thread/alpha-3-15-patch-watch-personal-inventory-amp-i","description":"on Ship Recovery on Server Crash"},"s117":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/serialized-variables-2","description":"on Serialized Variables and PES"},"s201":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/does-each-game-server-have-its-own-icache-instance","description":"on iCache, Shards, Player Capacity"},"s202":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/what-will-be-the-extent-of-the-first-pass-on-the-s/96","description":"on Static Server Meshing functionality"},"s203":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/predict-needs-for-server-meshing-splitting","description":"on Static Server Meshing"},"s204":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/how-is-server-meshing-possible/2110241","description":"on Server Meshing realization"},"s205":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/how-many-people-can-be-in-an-instance","description":"on Player Count"},"s206":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/server-meshing-traveling-between-meshes/3372399","description":"on Travelling between Servers"},"s207":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/authority-api","description":"on Authority API"},"s208":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/will-static-server-meshing-make-use-of-virtual-ser","description":"on Static Server Meshing balance between server expenses vs p"},"s209":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/has-some-of-the-pre-server-meshing-tech-like-entit","description":"on minor tech and prep-work already released"},"s301":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/50259/thread/new-layers-for-crowded-locations","description":"on Layers"},"s302":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/3/thread/patch-watch-3-17-quantum-cluster-missiles-amp-more","description":"on Quantum first release"},"s303":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/3/thread/gen12-progress-and-performance-improvements-in-3-1","description":"on Simulation improvements and Gen12"},"s304":{"url":"https://robertsspaceindustries.com/spectrum/community/SC/forum/3/thread/patch-watch-3-17-2-networking-improvements-mission/5194966","description":"on Networking Downstream Improvements"},"src":{"url":"https://robertsspaceindustries.com/roadmap/progress-tracker/teams","description":"Release View & Progress Tracker"},"jp1":{"description":"JumpPoint Issue 07 10 Article - The Road to Object Container Streaming"},"qa1":{"url":"https://robertsspaceindustries.com/comm-link/transmission/18397-Server-Meshing-And-Persistent-Streaming-Q-A","description":"Server Meshing & Persistent Streaming Q&A"},"lc1":{"url":"https://robertsspaceindustries.com/comm-link/transmission/18696-Letter-From-The-Chairman","description":"on Persistent Streaming and Server Meshing rollout"},"pm1":{"url":"https://robertsspaceindustries.com/comm-link/transmission/17991-Alpha-312-Postmortem","description":"Alpha 3.12 Postmortem"},"mr1":{"url":"https://robertsspaceindustries.com/comm-link/transmission/14126-Monthly-Report-August-2014","description":"PhysicsGrids/ZoneSystem early mention in August 2014"},"mr2":{"url":"https://robertsspaceindustries.com/comm-link/transmission/15408-Monthly-Studio-Report-June-2016","description":"Zone AABB tree"},"mr3":{"url":"https://robertsspaceindustries.com/comm-link/transmission/18515-Star-Citizen-Monthly-Report-November-December-2021","description":"Entity-centric EUCS"},"mr4":{"url":"https://robertsspaceindustries.com/comm-link/transmission/18811-Star-Citizen-Monthly-Report-July-2022","description":"Chrono Service & background jobs"},"pn33":{"url":"https://robertsspaceindustries.com/comm-link//16840-Star-Citizen-Alpha-330","description":"Client OCS Release"},"pn335":{"url":"https://robertsspaceindustries.com/comm-link//16870-Star-Citizen-Alpha-335","description":"Client OCS Release"},"pn38":{"url":"https://robertsspaceindustries.com/comm-link//17413-Star-Citizen-Alpha-380","description":"Server OCS Release"},"pn315":{"url":"https://robertsspaceindustries.com/comm-link//18400-Star-Citizen-Alpha-3150","description":"iCache & Inventory"},"pn317":{"url":"https://robertsspaceindustries.com/comm-link/transmission/18636-Star-Citizen-Alpha-3170","description":"Client Bind Culling in the Replication Layer"},"tw1":{"url":"https://twitter.com/DrChadMcKinney/status/1447665963738951684","description":"on Server Meshing & Regional Shards"},"mdb1":{"url":"https://severalnines.com/database-blog/overview-mongodb-and-load-balancing","description":"MongoDB Sharding"},"mdb2":{"url":"https://docs.mongodb.com/manual/geospatial-queries/","description":"MongoDB Spatial Queries"},"w1":{"url":"https://starcitizen.tools/Object_Container_Streaming","description":"Star Citizen Wiki Object Container Streaming"},"w2":{"url":"https://en.wikipedia.org/wiki/Client%E2%80%93server_model","description":"Wikipedia - Client-Server Model"},"w3":{"url":"https://en.wikipedia.org/wiki/AoS_and_SoA","description":"Wikipedia - AoS and SoA"},"w4":{"url":"https://en.wikipedia.org/wiki/Geohash","description":"Wikipedia - Geohash"},"w5":{"url":"https://en.wikipedia.org/wiki/Radix_tree","description":"Wikipedia- Radix Tree"},"w6":{"url":"https://en.wikipedia.org/wiki/Octree","description":"Wikipedia - Octree"},"w7":{"url":"https://en.wikipedia.org/wiki/Floating-point_arithmetic","description":"Wikipedia - Floating-point arithemtic"},"w8":{"url":"https://en.wikipedia.org/wiki/Single-precision_floating-point_format","description":"Wikipedia - Single-Precision Floating Point Format"},"w9":{"url":"https://en.wikipedia.org/wiki/Double-precision_floating-point_format","description":"Wikipedia - Double-Precision Floating Point Format"},"w10":{"url":"https://en.wikipedia.org/wiki/Subsumption_architecture","description":"Wikipedia - Subsumption Architecture"},"w11":{"url":"https://en.wikipedia.org/wiki/Mediator_pattern","description":"Wikipedia - Mediator Pattern"},"w12":{"url":"https://en.wikipedia.org/wiki/Superscalar_processor","description":"Wikipedia - Superscalar Processor"},"n1":{"url":"https://www.gabrielgambetta.com/client-side-prediction-live-demo.html","description":"gabrielgambetta - Netcode Explanation with Demo"}}'),$r=function(e){m(n,e);var t=S(n);function n(e){var a;d(this,n),a=t.call(this,e);var r=new URLSearchParams(window.location.search),i=r.get("techName"),o=r.get("slideName");console.log(i,o);var s,l=[],c=[],h={},p={name:"893xr47g8"},f=function(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=u(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0,r=function(){};return{s:r,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){s=!0,i=e},f:function(){try{o||null==n.return||n.return()}finally{if(s)throw i}}}}(Wr);try{for(f.s();!(s=f.n()).done;){var m=s.value;m.title!==p.name&&(p={name:m.title,slides:[],sources:m.sources},l.push(p),h[m.title]=p,c.push(m.title)),p.slides.push(m)}}catch(v){f.e(v)}finally{f.f()}var g=c[0],b=void 0;if(h[i]){g=h[i].name;var y=h[i].slides.filter((function(e){return e.subtitle===o}));y.length>0&&(b=y[0])}return a.state={slides:Wr,techs:l,techsByName:h,currentTech:g,currentSlide:b},a}return p(n,[{key:"getInitialSettings",value:function(){var e=JSON.parse(localStorage.getItem("settings")||"{}");return l(l({},{}),e)}},{key:"render",value:function(){return(0,E.jsx)(L,{style:{marginTop:"25px",marginBottom:"50px"},children:(0,E.jsx)(He,{children:(0,E.jsx)(Ne,{children:(0,E.jsx)(De,{path:"/sc-server-meshing/",element:(0,E.jsx)(qr,{tech:this.state.techsByName[this.state.currentTech],slide:this.state.currentSlide,sources:Vr})})})})})}}]),n}(a.Component),Qr=$r,Kr=function(e){e&&e instanceof Function&&n.e(787).then(n.bind(n,787)).then((function(t){var n=t.getCLS,a=t.getFID,r=t.getFCP,i=t.getLCP,o=t.getTTFB;n(e),a(e),r(e),i(e),o(e)}))};i.createRoot(document.getElementById("root")).render((0,E.jsx)(a.StrictMode,{children:(0,E.jsx)(Qr,{})})),Kr()}()}();
//# sourceMappingURL=main.d99859b2.js.map